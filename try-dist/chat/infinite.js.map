{"version":3,"sources":["../../src/chat/infinite.js"],"names":["SERVER_MKDIRP_BUG","UI","authn","require","icons","log","ns","media","pad","rdf","store","style","utils","widgets","renderMessage","creatorAndDate","bookmarks","createIfNotExists","doc","contentType","data","fetcher","load","response","status","console","webOperation","uri","requested","desktopNotification","str","window","warn","Notification","permission","requestPermission","then","infiniteMessageArea","dom","kb","chatChannel","options","WF","$rdf","Namespace","DCT","newestFirst","dateFolder","DateFolder","authorAboveContent","messageBodyStyle","div","createElement","menuButton","statusArea","appendChild","userContext","me","updater","newMessageForm","messageTable","form","lhs","middle","rhs","AJAR_date","field","sendButton","sendMessage","text","sendComplete","bindings","message","content","dateStamp","liveMessageTable","value","setAttribute","disabled","scrollIntoView","focus","select","now","Date","addNewTableIfNewDay","sts","timestamp","getTime","term","chatDocument","leafDocumentFromDate","sym","literal","push","Statement","wf","sioc","foaf","undefined","update","errorMessageBlock","droppedFileHandler","files","base","dir","uploadFiles","theFile","destURI","droppedURIHandler","uris","turnOnInput","menuHandler","menuOptions","newBase","addEventListener","event","innerHTML","rows","e","keyCode","altKey","makeDropTarget","button","iconBase","buttonStyle","_event","imageDoc","getImageDoc","tookPicture","cameraButton","recordParticipation","context","logIn","Object","assign","findBookmarkDocument","bookmarkDocument","syncMessages","about","displayed","ele","ele2","firstChild","nextSibling","AJAR_subject","messages","statementsMatching","map","st","object","stored","m","addMessage","removeChild","refreshTree","any","fresh","insertPreviousMessages","backwards","extremity","earliest","latest","date","loadPrevious","appendCurrentMessages","live","todayDoc","sameTerm","createMessageTable","newMessageTable","insertBefore","removePreviousMessages","previousSibling","extr","statusTR","renderMessageTable","scrollBackButton","scrollForwardButton","extendBackwards","done","initial","extendedBack","setScrollBackButtonIcon","sense","scrollBackIcon","getScrollbackIcon","scrollBackButtonHandler","extendForwards","extendedForwards","setScrollForwardButtonIcon","scrollForwardIcon","getScrollForwardButtonIcon","scrollForwardButtonHandler","tr","inputRow","infinite","scrollBackButtonTR","scrollBackButtonCell","dateCell","textContent","shortDate","toISOString","scrollForwardButtonCell","extendedForward","length","forEach","newChatDocument","oldChatDocument","holds","rdfs","ok","body","alert","refresh","addDownstreamChangeListener","lock","loadMoreWhereNeeded","fixScroll","freeze","magicZone","scrollTop","scrollBottom","scrollHeight","selectedMessage","clientHeight","go","yank","selectedElement","block","selectedMessageTable","selectedDocument","todayDocument","selectedDate","dateFromLeafDocument","setTimeout","solo","document"],"mappings":"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","sourcesContent":["/**\r\n * Contains the [[infiniteMessageArea]] class\r\n * @packageDocumentation\r\n */\r\n\r\n/* global alert $rdf */\r\nimport DateFolder from './dateFolder'\r\n\r\n// @@ trace20190428T1745\r\n\r\nconst SERVER_MKDIRP_BUG = true\r\n\r\nconst UI = {\r\n  authn: require('../authn/authn'),\r\n  icons: require('../iconBase'),\r\n  log: require('../log'),\r\n  ns: require('../ns'),\r\n  media: require('../media-capture'),\r\n  pad: require('../pad'),\r\n  rdf: require('rdflib'),\r\n  store: require('../store'),\r\n  style: require('../style'),\r\n  utils: require('../utils'),\r\n  widgets: require('../widgets')\r\n}\r\n\r\n// const utils = require('./utils')\r\nconst { renderMessage, creatorAndDate } = require('./message')\r\nconst bookmarks = require('./bookmarks')\r\n\r\n// module.exports = module.exports || {}\r\n// module.exports.infiniteMessageArea =\r\n\r\nasync function createIfNotExists (doc, contentType = 'text/turtle', data = '') {\r\n  const fetcher = UI.store.fetcher\r\n  try {\r\n    var response = await fetcher.load(doc)\r\n  } catch (err) {\r\n    if (err.response.status === 404) {\r\n      console.log(\r\n        'createIfNotExists: doc does NOT exist, will create... ' + doc\r\n      )\r\n      try {\r\n        response = await fetcher.webOperation('PUT', doc.uri, {\r\n          data,\r\n          contentType\r\n        })\r\n      } catch (err) {\r\n        console.log('createIfNotExists doc FAILED: ' + doc + ': ' + err)\r\n        throw err\r\n      }\r\n      delete fetcher.requested[doc.uri] // delete cached 404 error\r\n      // console.log('createIfNotExists doc created ok ' + doc)\r\n      return response\r\n    } else {\r\n      console.log(\r\n        'createIfNotExists doc load error NOT 404:  ' + doc + ': ' + err\r\n      )\r\n      throw err\r\n    }\r\n  }\r\n  // console.log('createIfNotExists: doc exists, all good: ' + doc)\r\n  return response\r\n}\r\n\r\nfunction desktopNotification (str) {\r\n  // Let's check if the browser supports notifications\r\n  if (!('Notification' in window)) {\r\n    console.warn('This browser does not support desktop notification')\r\n  } else if (Notification.permission === 'granted') {\r\n    // Let's check whether notification permissions have already been granted\r\n    // eslint-disable-next-line no-new\r\n    new Notification(str)\r\n  } else if (Notification.permission !== 'denied') {\r\n    // Otherwise, we need to ask the user for permission\r\n    Notification.requestPermission().then(function (permission) {\r\n      // If the user accepts, let's create a notification\r\n      if (permission === 'granted') {\r\n        // eslint-disable-next-line no-new\r\n        new Notification(str)\r\n      }\r\n    })\r\n  }\r\n\r\n  // At last, if the user has denied notifications, and you\r\n  // want to be respectful there is no need to bother them any more.\r\n}\r\n\r\n/**\r\n * Common code for a chat (discussion area of messages about something)\r\n * This version runs over a series of files for different time periods\r\n *\r\n * Parameters for the whole chat like its title are stored on\r\n * index.ttl#this and the chats messages are stored in YYYY/MM/DD/chat.ttl\r\n */\r\nexport function infiniteMessageArea (dom, kb, chatChannel, options) {\r\n  kb = kb || UI.store\r\n  const ns = UI.ns\r\n  const WF = $rdf.Namespace('http://www.w3.org/2005/01/wf/flow#')\r\n  const DCT = $rdf.Namespace('http://purl.org/dc/terms/')\r\n  // const POSIX = $rdf.Namespace('http://www.w3.org/ns/posix/stat#')\r\n\r\n  options = options || {}\r\n\r\n  var newestFirst = options.newestFirst === '1' || options.newestFirst === true // hack for now\r\n\r\n  const dateFolder = new DateFolder(chatChannel, 'chat.ttl')\r\n\r\n  options.authorAboveContent = true\r\n\r\n  // var participation // An object tracking users use and prefs\r\n  const messageBodyStyle = UI.style.messageBodyStyle\r\n\r\n  // var messageBodyStyle = 'white-space: pre-wrap; width: 90%; font-size:100%; border: 0.07em solid #eee; padding: .2em 0.5em; margin: 0.1em 1em 0.1em 1em;'\r\n  // 'font-size: 100%; margin: 0.1em 1em 0.1em 1em;  background-color: white; white-space: pre-wrap; padding: 0.1em;'\r\n\r\n  var div = dom.createElement('div')\r\n  var menuButton\r\n  const statusArea = div.appendChild(dom.createElement('div'))\r\n  var userContext = { dom, statusArea, div: statusArea } // logged on state, pointers to user's stuff\r\n  var me\r\n\r\n  var updater = UI.store.updater\r\n\r\n  /** Does a file exist on the web?\r\n   * @returns {Boolean}\r\n   */\r\n  /*\r\n  async function documentExists (doc) {\r\n    try {\r\n      await kb.fetcher.load(doc)\r\n    } catch (err) {\r\n      if (err.response.status === 404) {\r\n        return false\r\n      } else {\r\n        console.log('documentExists: doc load error NOT 404:  ' + doc + ': ' + err)\r\n        throw err\r\n      }\r\n    }\r\n    return true\r\n  }\r\n*/\r\n  /*       Form for a new message\r\n   */\r\n  function newMessageForm (messageTable) {\r\n    var form = dom.createElement('tr')\r\n    var lhs = dom.createElement('td')\r\n    var middle = dom.createElement('td')\r\n    var rhs = dom.createElement('td')\r\n    form.appendChild(lhs)\r\n    form.appendChild(middle)\r\n    form.appendChild(rhs)\r\n    form.AJAR_date = '9999-01-01T00:00:00Z' // ISO format for field sort\r\n    var field, sendButton\r\n\r\n    async function sendMessage (text) {\r\n      var now = new Date()\r\n      await addNewTableIfNewDay(now)\r\n\r\n      if (!text) {\r\n        field.setAttribute('style', messageBodyStyle + 'color: #bbb;') // pendingedit\r\n        field.disabled = true\r\n      }\r\n      var sts = []\r\n      var timestamp = '' + now.getTime()\r\n      var dateStamp = $rdf.term(now)\r\n      const chatDocument = dateFolder.leafDocumentFromDate(now)\r\n\r\n      var message = kb.sym(chatDocument.uri + '#' + 'Msg' + timestamp)\r\n      var content = kb.literal(text || field.value)\r\n      // if (text) field.value = text  No - don't destroy half-finsihed user input\r\n\r\n      sts.push(\r\n        new $rdf.Statement(chatChannel, ns.wf('message'), message, chatDocument)\r\n      )\r\n      sts.push(\r\n        new $rdf.Statement(message, ns.sioc('content'), content, chatDocument)\r\n      )\r\n      sts.push(\r\n        new $rdf.Statement(message, DCT('created'), dateStamp, chatDocument)\r\n      )\r\n      if (me) {\r\n        sts.push(\r\n          new $rdf.Statement(message, ns.foaf('maker'), me, chatDocument)\r\n        )\r\n      }\r\n\r\n      function sendComplete () {\r\n        var bindings = {\r\n          '?msg': message,\r\n          '?content': content,\r\n          '?date': dateStamp,\r\n          '?creator': me\r\n        }\r\n        renderMessage(liveMessageTable, bindings, false, options, userContext) // not green\r\n\r\n        if (!text) {\r\n          field.value = '' // clear from out for reuse\r\n          field.setAttribute('style', messageBodyStyle)\r\n          field.disabled = false\r\n          field.scrollIntoView(newestFirst) // allign bottom (top)\r\n          field.focus() // Start typing next line immediately\r\n          field.select()\r\n        }\r\n      }\r\n      if (\r\n        SERVER_MKDIRP_BUG &&\r\n        (kb.fetcher.requested[chatDocument.uri] === undefined ||\r\n          kb.fetcher.requested[chatDocument.uri] === 404)\r\n      ) {\r\n        console.log(\r\n          '@@@ SERVER_MKDIRP_BUG: Should only happen once: create chat file: ' +\r\n            chatDocument\r\n        )\r\n        await createIfNotExists(chatDocument)\r\n      }\r\n      try {\r\n        await updater.update([], sts)\r\n      } catch (err) {\r\n        form.appendChild(\r\n          UI.widgets.errorMessageBlock(dom, 'Error writing message: ' + err)\r\n        )\r\n        return\r\n      }\r\n      sendComplete()\r\n    } // sendMessage\r\n\r\n    form.appendChild(dom.createElement('br'))\r\n\r\n    //    DRAG AND DROP\r\n    function droppedFileHandler (files) {\r\n      const base = messageTable.chatDocument.dir().uri\r\n      UI.widgets.uploadFiles(\r\n        kb.fetcher,\r\n        files,\r\n        base + 'Files',\r\n        base + 'Pictures',\r\n        async function (theFile, destURI) {\r\n          // @@@@@@ Wait for eachif several\r\n          await sendMessage(destURI)\r\n        }\r\n      )\r\n    }\r\n\r\n    // When a set of URIs are dropped on the field\r\n    var droppedURIHandler = async function (uris) {\r\n      for (var uri of uris) {\r\n        await sendMessage(uri)\r\n      }\r\n    }\r\n\r\n    // When we are actually logged on\r\n    function turnOnInput () {\r\n      if (options.menuHandler && menuButton) {\r\n        const menuOptions = {\r\n          me,\r\n          dom,\r\n          div,\r\n          newBase: messageTable.chatDocument.dir().uri\r\n        }\r\n        menuButton.addEventListener(\r\n          'click',\r\n          event => {\r\n            options.menuHandler(event, chatChannel, menuOptions)\r\n          },\r\n          false\r\n        )\r\n      }\r\n\r\n      // Turn on message input\r\n      creatorAndDate(lhs, me, '', null)\r\n\r\n      field = dom.createElement('textarea')\r\n      middle.innerHTML = ''\r\n      middle.appendChild(field)\r\n      field.rows = 3\r\n      // field.cols = 40\r\n      field.setAttribute('style', messageBodyStyle + 'background-color: #eef;')\r\n\r\n      // Trap the Enter BEFORE it is used ti make a newline\r\n      field.addEventListener(\r\n        'keydown',\r\n        async function (e) {\r\n          // User preference?\r\n          if (e.keyCode === 13) {\r\n            if (!e.altKey) {\r\n              // Alt-Enter just adds a new line\r\n              await sendMessage()\r\n            }\r\n          }\r\n        },\r\n        false\r\n      )\r\n      UI.widgets.makeDropTarget(field, droppedURIHandler, droppedFileHandler)\r\n\r\n      rhs.innerHTML = ''\r\n      sendButton = UI.widgets.button(\r\n        dom,\r\n        UI.icons.iconBase + 'noun_383448.svg',\r\n        'Send'\r\n      )\r\n      sendButton.setAttribute('style', UI.style.buttonStyle + 'float: right;')\r\n      sendButton.addEventListener('click', _event => sendMessage(), false)\r\n      rhs.appendChild(sendButton)\r\n\r\n      const chatDocument = dateFolder.leafDocumentFromDate(new Date())\r\n      var imageDoc\r\n      function getImageDoc () {\r\n        imageDoc = kb.sym(\r\n          chatDocument.dir().uri + 'Image_' + Date.now() + '.png'\r\n        )\r\n        return imageDoc\r\n      }\r\n      async function tookPicture (imageDoc) {\r\n        if (imageDoc) {\r\n          await sendMessage(imageDoc.uri)\r\n        }\r\n      }\r\n      middle.appendChild(\r\n        UI.media.cameraButton(dom, kb, getImageDoc, tookPicture)\r\n      )\r\n\r\n      UI.pad.recordParticipation(chatChannel, chatChannel.doc()) // participation =\r\n    } // turn on inpuut\r\n\r\n    const context = { div: middle, dom: dom }\r\n    UI.authn.logIn(context).then(context => {\r\n      me = context.me\r\n      turnOnInput()\r\n      Object.assign(context, userContext)\r\n      bookmarks.findBookmarkDocument(context).then(context => {\r\n        console.log('Bookmark file: ' + context.bookmarkDocument)\r\n      })\r\n    })\r\n\r\n    return form\r\n  }\r\n\r\n  // ///////////////////////////////////////////////////////////////////////\r\n\r\n  function syncMessages (about, messageTable) {\r\n    var displayed = {}\r\n    var ele, ele2\r\n    for (ele = messageTable.firstChild; ele; ele = ele.nextSibling) {\r\n      if (ele.AJAR_subject) {\r\n        displayed[ele.AJAR_subject.uri] = true\r\n      }\r\n    }\r\n\r\n    var messages = kb\r\n      .statementsMatching(\r\n        about,\r\n        ns.wf('message'),\r\n        null,\r\n        messageTable.chatDocument\r\n      )\r\n      .map(st => {\r\n        return st.object\r\n      })\r\n    var stored = {}\r\n    messages.map(function (m) {\r\n      stored[m.uri] = true\r\n      if (!displayed[m.uri]) {\r\n        addMessage(m, messageTable)\r\n      }\r\n    })\r\n\r\n    // eslint-disable-next-line space-in-parens\r\n    for (ele = messageTable.firstChild; ele; ) {\r\n      ele2 = ele.nextSibling\r\n      if (ele.AJAR_subject && !stored[ele.AJAR_subject.uri]) {\r\n        messageTable.removeChild(ele)\r\n      }\r\n      ele = ele2\r\n    }\r\n    for (ele = messageTable.firstChild; ele; ele = ele.nextSibling) {\r\n      if (ele.AJAR_subject) {\r\n        // Refresh thumbs up etc\r\n        UI.widgets.refreshTree(ele) // Things inside may have changed too\r\n      }\r\n    }\r\n  } // syncMessages\r\n\r\n  var addMessage = function (message, messageTable) {\r\n    var bindings = {\r\n      '?msg': message,\r\n      '?creator': kb.any(message, ns.foaf('maker')),\r\n      '?date': kb.any(message, DCT('created')),\r\n      '?content': kb.any(message, ns.sioc('content'))\r\n    }\r\n    renderMessage(\r\n      messageTable,\r\n      bindings,\r\n      messageTable.fresh,\r\n      options,\r\n      userContext\r\n    ) // fresh from elsewhere\r\n  }\r\n\r\n  // ////////\r\n\r\n  /* Add a new messageTable at the top/bottom\r\n   */\r\n  async function insertPreviousMessages (backwards) {\r\n    const extremity = backwards ? earliest : latest\r\n    let date = extremity.messageTable.date // day in mssecs\r\n\r\n    date = await dateFolder.loadPrevious(date, backwards) // backwards\r\n    console.log(\r\n      `insertPreviousMessages: from ${\r\n        backwards ? 'backwards' : 'forwards'\r\n      } loadPrevious: ${date}`\r\n    )\r\n    if (!date && !backwards && !liveMessageTable) {\r\n      await appendCurrentMessages() // If necessary skip to today and add that\r\n    }\r\n    if (!date) return true // done\r\n    var live = false\r\n    if (!backwards) {\r\n      const todayDoc = dateFolder.leafDocumentFromDate(new Date())\r\n      const doc = dateFolder.leafDocumentFromDate(date)\r\n      live = doc.sameTerm(todayDoc) // Is this todays?\r\n    }\r\n    const newMessageTable = await createMessageTable(date, live)\r\n    extremity.messageTable = newMessageTable // move pointer to earliest\r\n    if (backwards ? newestFirst : !newestFirst) {\r\n      // put on bottom or top\r\n      div.appendChild(newMessageTable)\r\n    } else {\r\n      // put on top as we scroll back\r\n      div.insertBefore(newMessageTable, div.firstChild)\r\n    }\r\n    return live // not done\r\n  }\r\n  /* Remove message tables earlier than this one\r\n   */\r\n  function removePreviousMessages (backwards, messageTable) {\r\n    if (backwards ? newestFirst : !newestFirst) {\r\n      // it was put on bottom\r\n      while (messageTable.nextSibling) {\r\n        div.removeChild(messageTable.nextSibling)\r\n      }\r\n    } else {\r\n      // it was put on top as we scroll back\r\n      while (messageTable.previousSibling) {\r\n        div.removeChild(messageTable.previousSibling)\r\n      }\r\n    }\r\n    const extr = backwards ? earliest : latest\r\n    extr.messageTable = messageTable\r\n  }\r\n\r\n  /* Load and render message table\r\n   ** @returns DOM element generates\r\n   */\r\n  async function createMessageTable (date, live) {\r\n    console.log('   createMessageTable for  ' + date)\r\n    const chatDocument = dateFolder.leafDocumentFromDate(date)\r\n    try {\r\n      await kb.fetcher.load(chatDocument)\r\n    } catch (err) {\r\n      const messageTable = dom.createElement('table')\r\n      const statusTR = messageTable.appendChild(dom.createElement('tr')) // ### find status in exception\r\n      if (err.response && err.response.status && err.response.status === 404) {\r\n        console.log('Error 404 for chat file ' + chatDocument)\r\n        return renderMessageTable(date, live) // no mssage file is fine.. will be craeted later\r\n        // statusTR.appendChild(UI.widgets.errorMessageBlock(dom, 'no message file', 'white'))\r\n      } else {\r\n        console.log('*** Error NON 404 for chat file ' + chatDocument)\r\n        statusTR.appendChild(UI.widgets.errorMessageBlock(dom, err, 'pink'))\r\n      }\r\n      return statusTR\r\n    }\r\n    return renderMessageTable(date, live)\r\n  }\r\n\r\n  function renderMessageTable (date, live) {\r\n    var scrollBackButton\r\n    var scrollForwardButton\r\n\r\n    /// /////////////////   Scroll down adding more above\r\n\r\n    async function extendBackwards () {\r\n      const done = await insertPreviousMessages(true)\r\n      if (done) {\r\n        scrollBackButton.firstChild.setAttribute(\r\n          'src',\r\n          UI.icons.iconBase + 'noun_T-Block_1114655_000000.svg'\r\n        ) // T\r\n        scrollBackButton.disabled = true\r\n        messageTable.initial = true\r\n      } else {\r\n        messageTable.extendedBack = true\r\n      }\r\n      setScrollBackButtonIcon()\r\n      return done\r\n    }\r\n    function setScrollBackButtonIcon () {\r\n      const sense = messageTable.extendedBack ? !newestFirst : newestFirst\r\n      const scrollBackIcon = messageTable.initial\r\n        ? 'noun_T-Block_1114655_000000.svg'\r\n        : getScrollbackIcon(sense)\r\n      scrollBackButton.firstChild.setAttribute(\r\n        'src',\r\n        UI.icons.iconBase + scrollBackIcon\r\n      )\r\n\r\n      function getScrollbackIcon (sense) {\r\n        return sense ? 'noun_1369241.svg' : 'noun_1369237.svg'\r\n      }\r\n    }\r\n    async function scrollBackButtonHandler (_event) {\r\n      if (messageTable.extendedBack) {\r\n        removePreviousMessages(true, messageTable)\r\n        messageTable.extendedBack = false\r\n        setScrollBackButtonIcon()\r\n      } else {\r\n        await extendBackwards()\r\n      }\r\n    }\r\n\r\n    /// ////////////// Scroll up adding more below\r\n\r\n    async function extendForwards () {\r\n      const done = await insertPreviousMessages(false)\r\n      if (done) {\r\n        scrollForwardButton.firstChild.setAttribute(\r\n          'src',\r\n          UI.icons.iconBase + 'noun_T-Block_1114655_000000.svg'\r\n        )\r\n        scrollForwardButton.disabled = true\r\n        messageTable.final = true\r\n      } else {\r\n        messageTable.extendedForwards = true\r\n      }\r\n      setScrollForwardButtonIcon()\r\n      return done\r\n    }\r\n    function setScrollForwardButtonIcon () {\r\n      const sense = messageTable.extendedForwards ? !newestFirst : newestFirst // noun_T-Block_1114657_000000.svg\r\n      const scrollForwardIcon = messageTable.final\r\n        ? 'noun_T-Block_1114657_000000.svg'\r\n        : getScrollForwardButtonIcon(sense)\r\n      scrollForwardButton.firstChild.setAttribute(\r\n        'src',\r\n        UI.icons.iconBase + scrollForwardIcon\r\n      )\r\n\r\n      function getScrollForwardButtonIcon (sense) {\r\n        return !sense ? 'noun_1369241.svg' : 'noun_1369237.svg'\r\n      }\r\n    }\r\n    async function scrollForwardButtonHandler (_event) {\r\n      if (messageTable.extendedForwards) {\r\n        removePreviousMessages(false, messageTable)\r\n        messageTable.extendedForwards = false\r\n        setScrollForwardButtonIcon()\r\n      } else {\r\n        await extendForwards() // async\r\n        latest.messageTable.scrollIntoView(newestFirst)\r\n      }\r\n    }\r\n\r\n    /// ///////////////////////\r\n\r\n    var messageTable = dom.createElement('table')\r\n\r\n    messageTable.extendBackwards = extendBackwards // Make function available to scroll stuff\r\n    messageTable.extendForwards = extendForwards // Make function available to scroll stuff\r\n    // var messageButton\r\n    messageTable.date = date\r\n    var chatDocument = dateFolder.leafDocumentFromDate(date)\r\n    messageTable.chatDocument = chatDocument\r\n\r\n    messageTable.fresh = false\r\n    messageTable.setAttribute('style', 'width: 100%;') // fill that div!\r\n\r\n    if (live) {\r\n      messageTable.final = true\r\n      liveMessageTable = messageTable\r\n      latest.messageTable = messageTable\r\n      var tr = newMessageForm(messageTable)\r\n      if (newestFirst) {\r\n        messageTable.insertBefore(tr, messageTable.firstChild) // If newestFirst\r\n      } else {\r\n        messageTable.appendChild(tr) // not newestFirst\r\n      }\r\n      messageTable.inputRow = tr\r\n    }\r\n\r\n    /// ///// Infinite scroll\r\n    //\r\n    // @@ listen for swipe past end event not just button\r\n    if (options.infinite) {\r\n      const scrollBackButtonTR = dom.createElement('tr')\r\n      const scrollBackButtonCell = scrollBackButtonTR.appendChild(\r\n        dom.createElement('td')\r\n      )\r\n      // up traingles: noun_1369237.svg\r\n      // down triangles: noun_1369241.svg\r\n      const scrollBackIcon = newestFirst\r\n        ? 'noun_1369241.svg'\r\n        : 'noun_1369237.svg' // down and up arrows respoctively\r\n      scrollBackButton = UI.widgets.button(\r\n        dom,\r\n        UI.icons.iconBase + scrollBackIcon,\r\n        'Previous messages ...'\r\n      )\r\n      scrollBackButtonCell.style = 'width:3em; height:3em;'\r\n      scrollBackButton.addEventListener('click', scrollBackButtonHandler, false)\r\n      messageTable.extendedBack = false\r\n      scrollBackButtonCell.appendChild(scrollBackButton)\r\n      setScrollBackButtonIcon()\r\n\r\n      const dateCell = scrollBackButtonTR.appendChild(dom.createElement('td'))\r\n      dateCell.style =\r\n        'text-align: center; vertical-align: middle; color: #888; font-style: italic;'\r\n      dateCell.textContent = UI.widgets.shortDate(date.toISOString(), true) // no time, only date\r\n\r\n      // @@@@@@@@@@@ todo move this button to other end of  message cell, o\r\n      const scrollForwardButtonCell = scrollBackButtonTR.appendChild(\r\n        dom.createElement('td')\r\n      )\r\n      const scrollForwardIcon = newestFirst\r\n        ? 'noun_1369241.svg'\r\n        : 'noun_1369237.svg' // down and up arrows respoctively\r\n      scrollForwardButton = UI.widgets.button(\r\n        dom,\r\n        UI.icons.iconBase + scrollForwardIcon,\r\n        'Later messages ...'\r\n      )\r\n      scrollForwardButtonCell.appendChild(scrollForwardButton)\r\n      scrollForwardButtonCell.style = 'width:3em; height:3em;'\r\n      scrollForwardButton.addEventListener(\r\n        'click',\r\n        scrollForwardButtonHandler,\r\n        false\r\n      )\r\n      messageTable.extendedForward = false\r\n      setScrollForwardButtonIcon()\r\n\r\n      messageTable.extendedForwards = false\r\n\r\n      if (!newestFirst) {\r\n        // opposite end from the entry field\r\n        messageTable.insertBefore(scrollBackButtonTR, messageTable.firstChild) // If not newestFirst\r\n      } else {\r\n        messageTable.appendChild(scrollBackButtonTR) //  newestFirst\r\n      }\r\n    }\r\n\r\n    const sts = kb.statementsMatching(null, WF('message'), null, chatDocument)\r\n    if (!live && sts.length === 0) {\r\n      // not todays\r\n      // no need buttomns at the moment\r\n      // messageTable.style.visibility = 'collapse' // Hide files with no messages\r\n    }\r\n    sts.forEach(st => {\r\n      addMessage(st.object, messageTable)\r\n    })\r\n    messageTable.fresh = true\r\n\r\n    // loadMessageTable(messageTable, chatDocument)\r\n    messageTable.fresh = false\r\n    return messageTable\r\n  } // renderMessageTable\r\n\r\n  async function addNewTableIfNewDay (now) {\r\n    // let now = new Date()\r\n    // @@ Remove listener from previous table as it is now static\r\n    const newChatDocument = dateFolder.leafDocumentFromDate(now)\r\n    if (!newChatDocument.sameTerm(latest.messageTable.chatDocument)) {\r\n      // It is a new day\r\n      if (liveMessageTable.inputRow) {\r\n        liveMessageTable.removeChild(liveMessageTable.inputRow)\r\n        delete liveMessageTable.inputRow\r\n      }\r\n      var oldChatDocument = latest.messageTable.chatDocument\r\n      await appendCurrentMessages()\r\n      // Adding a link in the document will ping listeners to add the new block too\r\n      if (\r\n        !kb.holds(\r\n          oldChatDocument,\r\n          ns.rdfs('seeAlso'),\r\n          newChatDocument,\r\n          oldChatDocument\r\n        )\r\n      ) {\r\n        const sts = [\r\n          $rdf.st(\r\n            oldChatDocument,\r\n            ns.rdfs('seeAlso'),\r\n            newChatDocument,\r\n            oldChatDocument\r\n          )\r\n        ]\r\n        updater.update([], sts, function (ok, body) {\r\n          if (!ok) {\r\n            alert('Unable to link old message block to new one.' + body)\r\n          }\r\n        })\r\n      }\r\n    }\r\n  }\r\n  /*\r\n  function messageCount () {\r\n    var n = 0\r\n    const tables = div.children\r\n    for (let i = 0; i < tables.length; i++) {\r\n      n += tables[i].children.length - 1\r\n      // console.log('    table length:' + tables[i].children.length)\r\n    }\r\n    return n\r\n  }\r\n*/\r\n  /* Add the live message block with entry field for today\r\n   */\r\n  async function appendCurrentMessages () {\r\n    var now = new Date()\r\n    var chatDocument = dateFolder.leafDocumentFromDate(now)\r\n\r\n    /*   Don't actually make the documemnt until a message is sent  @@@@@ WHEN SERVER FIXED\r\n     * currently server won't patch to a file ina non-existent directory\r\n     */\r\n    /*\r\n    if (SERVER_MKDIRP_BUG) {\r\n      try {\r\n        await createIfNotExists(chatDocument)\r\n      } catch (e) {\r\n        div.appendChild(UI.widgets.errorMessageBlock(\r\n          dom, 'Problem accessing chat file: ' + e))\r\n        return\r\n      }\r\n    }\r\n    */\r\n    /// ///////////////////////////////////////////////////////////\r\n    const messageTable = await createMessageTable(now, true)\r\n    div.appendChild(messageTable)\r\n    div.refresh = function () {\r\n      // only the last messageTable is live\r\n      addNewTableIfNewDay(new Date()).then(() => {\r\n        syncMessages(chatChannel, messageTable)\r\n        desktopNotification(chatChannel)\r\n      })\r\n    } // The short chat version fors live update in the pane but we do it in the widget\r\n    kb.updater.addDownstreamChangeListener(chatDocument, div.refresh) // Live update\r\n    liveMessageTable = messageTable\r\n    latest.messageTable = liveMessageTable\r\n    return messageTable\r\n  }\r\n\r\n  var liveMessageTable\r\n  var earliest = { messageTable: null } // Stuff about each end of the loaded days\r\n  var latest = { messageTable: null }\r\n\r\n  var lock = false\r\n  async function loadMoreWhereNeeded (event, fixScroll) {\r\n    if (lock) return\r\n    lock = true\r\n    const freeze = !fixScroll\r\n    const magicZone = 150\r\n    // const top = div.scrollTop\r\n    // const bottom = div.scrollHeight - top - div.clientHeight\r\n    var done\r\n\r\n    while (\r\n      div.scrollTop < magicZone &&\r\n      earliest.messageTable &&\r\n      !earliest.messageTable.initial &&\r\n      earliest.messageTable.extendBackwards\r\n    ) {\r\n      const scrollBottom = div.scrollHeight - div.scrollTop\r\n      console.log('infinite scroll: adding above: top ' + div.scrollTop)\r\n      done = await earliest.messageTable.extendBackwards()\r\n      if (freeze) {\r\n        div.scrollTop = div.scrollHeight - scrollBottom\r\n      }\r\n      if (fixScroll) fixScroll()\r\n      if (done) break\r\n    }\r\n    while (\r\n      options.selectedMessage && // we started in the middle not at the bottom\r\n      div.scrollHeight - div.scrollTop - div.clientHeight < magicZone && // we are scrolled right to the bottom\r\n      latest.messageTable &&\r\n      !latest.messageTable.final && // there is more data to come\r\n      latest.messageTable.extendForwards\r\n    ) {\r\n      const scrollTop = div.scrollTop\r\n      console.log(\r\n        'infinite scroll: adding below: bottom: ' +\r\n          (div.scrollHeight - div.scrollTop - div.clientHeight)\r\n      )\r\n      done = await latest.messageTable.extendForwards() // then add more data on the bottom\r\n      if (freeze) {\r\n        div.scrollTop = scrollTop // while adding below keep same things in view\r\n      }\r\n      if (fixScroll) fixScroll()\r\n      if (done) break\r\n    }\r\n    lock = false\r\n  }\r\n\r\n  async function go () {\r\n    function yank () {\r\n      selectedMessageTable.selectedElement.scrollIntoView({ block: 'center' })\r\n    }\r\n\r\n    // During initial load ONLY keep scroll to selected thing or bottom\r\n    function fixScroll () {\r\n      if (options.selectedElement) {\r\n        options.selectedElement.scrollIntoView({ block: 'center' }) // allign tops or bopttoms\r\n      } else {\r\n        liveMessageTable.inputRow.scrollIntoView(newestFirst) // allign tops or bopttoms\r\n      }\r\n    }\r\n\r\n    var live\r\n    if (options.selectedMessage) {\r\n      var selectedDocument = options.selectedMessage.doc()\r\n      var now = new Date()\r\n      var todayDocument = dateFolder.leafDocumentFromDate(now)\r\n      live = todayDocument.sameTerm(selectedDocument)\r\n    }\r\n    if (options.selectedMessage && !live) {\r\n      var selectedDate = dateFolder.dateFromLeafDocument(selectedDocument)\r\n      var selectedMessageTable = await createMessageTable(selectedDate, live)\r\n      div.appendChild(selectedMessageTable)\r\n      earliest.messageTable = selectedMessageTable\r\n      latest.messageTable = selectedMessageTable\r\n      yank()\r\n      setTimeout(yank, 1000) // @@ kludge - restore position distubed by other cHANGES\r\n    } else {\r\n      // Live end\r\n      await appendCurrentMessages()\r\n      earliest.messageTable = liveMessageTable\r\n      latest.messageTable = liveMessageTable\r\n    }\r\n\r\n    await loadMoreWhereNeeded(null, fixScroll)\r\n    div.addEventListener('scroll', loadMoreWhereNeeded)\r\n    if (options.solo) {\r\n      document.body.addEventListener('scroll', loadMoreWhereNeeded)\r\n    }\r\n  }\r\n  go()\r\n  return div\r\n}\r\n"],"file":"infinite.js"}