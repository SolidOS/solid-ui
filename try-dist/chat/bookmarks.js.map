{"version":3,"sources":["../../src/chat/bookmarks.js"],"names":["UI","authn","require","icons","log","ns","media","pad","rdf","store","style","utils","widgets","$rdf","BOOK","Namespace","BOOKMARK_ICON","kb","label","dom","window","document","createIfNotExists","doc","Promise","resolve","reject","fetcher","load","then","response","console","err","status","webOperation","uri","data","contentType","requested","updatePromise","del","ins","updater","update","ok","errorBody","Error","findBookmarkDocument","userContext","klass","fileTail","isPublic","findAppInstances","instances","length","bookmarkDocument","alert","publicProfile","newBookmarkFile","sym","dir","error","registerInTypeIndex","addBookmark","context","target","title","me","currentUser","author","any","foaf","anyValue","sioc","slice","bookmarkDoc","bookmark","newThing","st","dct","Date","msg","toggleBookmark","bookmarkButton","bookmarks","each","confirm","i","connectedStatements","backgroundColor","renderBookmarksButton","setBookmarkButtonColor","bookmarked","buttonStyle","button","iconBase"],"mappings":"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","sourcesContent":["/**\r\n * Functions related to chat and bookmarks\r\n * @packageDocumentation\r\n */\r\n\r\n/* global alert confirm */\r\nconst UI = {\r\n  authn: require('../authn/authn'),\r\n  icons: require('../iconBase'),\r\n  log: require('../log'),\r\n  ns: require('../ns'),\r\n  media: require('../media-capture'),\r\n  pad: require('../pad'),\r\n  rdf: require('rdflib'),\r\n  store: require('../store'),\r\n  style: require('../style'),\r\n  utils: require('../utils'),\r\n  widgets: require('../widgets')\r\n}\r\nconst $rdf = UI.rdf\r\n\r\nconst BOOK = $rdf.Namespace('http://www.w3.org/2002/01/bookmark#')\r\nconst BOOKMARK_ICON = 'noun_45961.svg'\r\n\r\nconst kb = UI.store\r\nconst ns = UI.ns\r\nconst label = UI.utils.label\r\nconst dom = UI.dom || window.document\r\n\r\n/** Create a resource if it really does not exist\r\n *  Be absolutely sure something does not exist before creating a new empty file\r\n * as otherwise existing could  be deleted.\r\n * @param doc {NamedNode} - The resource\r\n */\r\nfunction createIfNotExists (doc) {\r\n  return new Promise(function (resolve, reject) {\r\n    kb.fetcher.load(doc).then(\r\n      response => {\r\n        console.log('createIfNotExists doc exists, all good ' + doc)\r\n        // kb.fetcher.webOperation('HEAD', doc.uri).then(response => {\r\n        resolve(response)\r\n      },\r\n      err => {\r\n        if (err.response.status === 404) {\r\n          console.log(\r\n            'createIfNotExists doc does NOT exist, will create... ' + doc\r\n          )\r\n\r\n          kb.fetcher\r\n            .webOperation('PUT', doc.uri, {\r\n              data: '',\r\n              contentType: 'text/turtle'\r\n            })\r\n            .then(\r\n              response => {\r\n                // fetcher.requested[doc.uri] = 'done' // do not need to read ??  but no headers\r\n                delete kb.fetcher.requested[doc.uri] // delete cached 404 error\r\n                console.log('createIfNotExists doc created ok ' + doc)\r\n                resolve(response)\r\n              },\r\n              err => {\r\n                console.log('createIfNotExists doc FAILED: ' + doc + ': ' + err)\r\n                reject(err)\r\n              }\r\n            )\r\n        } else {\r\n          console.log(\r\n            'createIfNotExists doc load error NOT 404:  ' + doc + ': ' + err\r\n          )\r\n          reject(err)\r\n        }\r\n      }\r\n    )\r\n  })\r\n}\r\n\r\n// @@@@ use the one in rdflib.js when it is avaiable and delete this\r\nfunction updatePromise (del, ins) {\r\n  return new Promise(function (resolve, reject) {\r\n    kb.updater.update(del, ins, function (uri, ok, errorBody) {\r\n      if (!ok) {\r\n        reject(new Error(errorBody))\r\n      } else {\r\n        resolve()\r\n      }\r\n    }) // callback\r\n  }) // promise\r\n}\r\n\r\n// export findBookmarkDocument,\r\n\r\n/*         Bookmarking\r\n */\r\n/** Find a user's bookmarks\r\n */\r\nexport async function findBookmarkDocument (userContext) {\r\n  const klass = BOOK('Bookmark')\r\n  const fileTail = 'bookmarks.ttl'\r\n  const isPublic = true\r\n\r\n  await UI.authn.findAppInstances(userContext, klass, isPublic) // public -- only look for public links\r\n  if (userContext.instances && userContext.instances.length > 0) {\r\n    userContext.bookmarkDocument = userContext.instances[0]\r\n    if (userContext.instances.length > 1) {\r\n      alert('More than one bookmark file! ' + userContext.instances)\r\n    }\r\n  } else {\r\n    if (userContext.publicProfile) {\r\n      // publicProfile or preferencesFile\r\n      var newBookmarkFile = $rdf.sym(\r\n        userContext.publicProfile.dir().uri + fileTail\r\n      )\r\n      try {\r\n        console.log('Creating new bookmark file ' + newBookmarkFile)\r\n        await createIfNotExists(newBookmarkFile)\r\n      } catch (e) {\r\n        alert.error(\"Can't make fresh bookmark file:\" + e)\r\n        return userContext\r\n      }\r\n      await UI.authn.registerInTypeIndex(\r\n        userContext,\r\n        newBookmarkFile,\r\n        klass,\r\n        true\r\n      ) // public\r\n      userContext.bookmarkDocument = newBookmarkFile\r\n    } else {\r\n      alert('You seem to have no bookmark file and not even a profile file.')\r\n    }\r\n  }\r\n  return userContext\r\n}\r\n\r\n/** Add a bookmark\r\n */\r\n\r\nasync function addBookmark (context, target) {\r\n  /* like\r\n @prefix terms: <http://purl.org/dc/terms/>.\r\n @prefix bookm: <http://www.w3.org/2002/01/bookmark#>.\r\n @prefix n0: <http://xmlns.com/foaf/0.1/>.\r\n <> terms:references <#0.5534145389246576>.\r\n <#0.5534145389246576>\r\n   a bookm:Bookmark;\r\n   terms:created \"2019-01-26T20:26:44.374Z\"^^XML:dateTime;\r\n   terms:title \"Herons\";\r\n   bookm:recalls wiki:Heron;\r\n   n0:maker c:me.\r\n  */\r\n  var title = ''\r\n  var me = UI.authn.currentUser() // If already logged on\r\n  if (!me) throw new Error('Must be logged on to add Bookmark')\r\n\r\n  var author = kb.any(target, ns.foaf('maker'))\r\n  title =\r\n    label(author) + ': ' + kb.anyValue(target, ns.sioc('content')).slice(0, 80) // @@ add chat title too?\r\n  const bookmarkDoc = context.bookmarkDocument\r\n  const bookmark = UI.widgets.newThing(bookmarkDoc, title)\r\n  const ins = [\r\n    $rdf.st(bookmarkDoc, UI.ns.dct('references'), bookmark, bookmarkDoc),\r\n    $rdf.st(bookmark, UI.ns.rdf('type'), BOOK('Bookmark'), bookmarkDoc),\r\n    $rdf.st(bookmark, UI.ns.dct('created'), new Date(), bookmarkDoc),\r\n    $rdf.st(bookmark, BOOK('recalls'), target, bookmarkDoc),\r\n    $rdf.st(bookmark, UI.ns.foaf('maker'), me, bookmarkDoc),\r\n    $rdf.st(bookmark, UI.ns.dct('title'), title, bookmarkDoc)\r\n  ]\r\n  try {\r\n    await updatePromise([], ins) // 20190118A\r\n  } catch (e) {\r\n    const msg = 'Making bookmark: ' + e\r\n    alert.error(msg)\r\n    return null\r\n  }\r\n  return bookmark\r\n}\r\n\r\nexport async function toggleBookmark (userContext, target, bookmarkButton) {\r\n  await kb.fetcher.load(userContext.bookmarkDocument)\r\n  const bookmarks = kb.each(\r\n    null,\r\n    BOOK('recalls'),\r\n    target,\r\n    userContext.bookmarkDocument\r\n  )\r\n  if (bookmarks.length) {\r\n    // delete\r\n    if (!confirm('Delete bookmark on this?' + bookmarks.length)) return\r\n    for (let i = 0; i < bookmarks.length; i++) {\r\n      try {\r\n        await updatePromise(kb.connectedStatements(bookmarks[i]), [])\r\n        bookmarkButton.style.backgroundColor = 'white'\r\n        console.log('Bookmark deleted: ' + bookmarks[i])\r\n      } catch (e) {\r\n        console.error('Cant delete bookmark:' + e)\r\n        alert('Cant delete bookmark:' + e)\r\n      }\r\n    }\r\n  } else {\r\n    const bookmark = await addBookmark(userContext, target)\r\n    bookmarkButton.style.backgroundColor = 'yellow'\r\n    console.log('Bookmark added: ' + bookmark)\r\n  }\r\n}\r\n\r\nexport async function renderBookmarksButton (userContext, target) {\r\n  async function setBookmarkButtonColor (bookmarkButton) {\r\n    await kb.fetcher.load(userContext.bookmarkDocument)\r\n    const bookmarked = kb.any(\r\n      null,\r\n      BOOK('recalls'),\r\n      bookmarkButton.target,\r\n      userContext.bookmarkDocument\r\n    )\r\n    bookmarkButton.style = UI.style.buttonStyle\r\n    if (bookmarked) bookmarkButton.style.backgroundColor = 'yellow'\r\n  }\r\n\r\n  var bookmarkButton\r\n  if (userContext.bookmarkDocument) {\r\n    bookmarkButton = UI.widgets.button(\r\n      dom,\r\n      UI.icons.iconBase + BOOKMARK_ICON,\r\n      label(BOOK('Bookmark')),\r\n      () => {\r\n        toggleBookmark(userContext, target, bookmarkButton)\r\n      }\r\n    )\r\n    bookmarkButton.target = target\r\n    await setBookmarkButtonColor(bookmarkButton)\r\n    return bookmarkButton\r\n  }\r\n}\r\n"],"file":"bookmarks.js"}