{"version":3,"sources":["../../src/authn/authn.ts"],"names":["findOriginOwner","doc","uri","i","indexOf","j","origin","slice","saveUser","webId","context","webIdUri","me","$rdf","namedNode","defaultTestUser","offlineId","offlineTestID","currentUser","str","localStorage","da","JSON","parse","session","sym","logIn","Promise","resolve","checkUser","then","console","log","div","dom","box","loginStatusBox","appendChild","logInLoadProfile","publicProfile","fetcher","kb","profileDocument","reject","webID","Error","load","withCredentials","cache","_response","err","message","widgets","errorMessageBlock","logInLoadPreferences","preferencesFile","statusArea","progressDisplay","any","ns","space","complain","differentOrigin","window","location","site","parentNode","removeChild","status","m2","alert","preferencesFileError","warn","confirm","loadTypeIndexes","loadPublicTypeIndex","loadPrivateTypeIndex","loadIndex","solid","loadOneTypeIndex","isPublic","predicate","index","ixs","each","undefined","length","ensureTypeIndexes","ensureOneTypeIndex","makeIndexIfNecessary","putIndex","newIndex","webOperation","data","Date","contentType","msg","relevant","visibility","dir","addMe","st","updatePromise","updater","push","findAppInstances","klass","thisIndex","registrations","map","ix","flat","instances","reg","containers","concat","e","utils","label","cont","ldp","del","ins","update","ok","errorBody","registerInTypeIndex","instance","indexes","registration","newThing","rdf","registrationControl","createElement","innerHTML","setAttribute","tbody","children","form","bnode","registrationStatements","filter","r","holds","statements","buildCheckboxForm","noun","textContent","registrationList","options","_indexes","table","firstChild","sts","vs","forEach","statementsMatching","statement","inst","object","personTR","deleteFunction","_x","subject","setACLUserPublic","docURI","aclDoc","fetchACLRel","aclText","genACLText","result","error","aclURI","optPublic","g","graph","auth","Namespace","a","acl","add","defaultForNew","foaf","p","serialize","$SolidTestEnvironment","username","document","getElementById","id","getAttribute","getDefaultSignInButtonStyle","signInOrSignUpBox","setUserCallback","signInButtonStyle","buttonStyle","magicClassName","style","signInPopUpButton","addEventListener","offline","solidAuthClient","popupLogin","webIdURI","divs","getElementsByClassName","parent","signupButton","_event","signupMgr","SolidTls","Signup","signup","webIdFromSession","currentSession","listener","setIt","newidURI","refresh","logoutButtonHandler","logout","logoutButton","logoutLabel","nick","value","signOutButton","clearElement","trackSession","selectWorkspace","appDetails","callbackWS","appPathSegment","say","s","figureOutBase","ws","newBase","split","now","getTime","displayOptions","w","storages","baseField","size","autocomplete","button","x","col1","col2","col3","tr","comment","cellStyle","deselectedStyle","ui","hash","reduce","b","charCodeAt","bgcolor","toString","target","rdfs","disabled","trLast","newAppInstance","callback","gotWS","base","getUserRoles","filterAvailablePanes","panes","userRoles","pane","isMatchingAudience","audience","isMatch","audienceRole","find","role","equals"],"mappings":"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","sourcesContent":["/**\r\n * Signing in, signing up, profile and preferences reloading\r\n * Type index management\r\n *\r\n * Many functions in this module take a context object which\r\n * holds various RDF symbols, add to it, and return a promise of it.\r\n *\r\n * * `me`                RDF symbol for the user's WebID\r\n * * `publicProfile`     The user's public profile, iff loaded\r\n * * `preferencesFile`   The user's personal preference file, iff loaded\r\n * * `index.public`      The user's public type index file\r\n * * `index.private`     The user's private type index file\r\n *\r\n * Not RDF symbols:\r\n * * `noun`            A string in english for the type of thing -- like \"address book\"\r\n * * `instance`        An array of nodes which are existing instances\r\n * * `containers`      An array of nodes of containers of instances\r\n * * `div`             A DOM element where UI can be displayed\r\n * * `statusArea`      A DOM element (opt) progress stuff can be displayed, or error messages\r\n * @packageDocumentation\r\n */\r\nimport SolidTls from 'solid-auth-tls'\r\nimport * as $rdf from 'rdflib'\r\nimport widgets from '../widgets'\r\nimport solidAuthClient from 'solid-auth-client'\r\nimport ns from '../ns.js'\r\nimport kb from '../store.js'\r\nimport utils from '../utils.js'\r\nimport log from '../log.js'\r\nimport { AppDetails, AuthenticationContext } from './types'\r\nimport { PaneDefinition } from 'pane-registry'\r\n\r\nexport { solidAuthClient }\r\n\r\n// const userCheckSite = 'https://databox.me/'\r\n\r\n/**\r\n * Look for and load the User who has control over it\r\n */\r\nexport function findOriginOwner (doc: $rdf.NamedNode | string): string | boolean {\r\n  const uri = (typeof doc === 'string') ? doc : doc.uri\r\n  const i = uri.indexOf('://')\r\n  if (i < 0) return false\r\n  const j = uri.indexOf('/', i + 3)\r\n  if (j < 0) return false\r\n  const origin = uri.slice(0, j + 1) // @@ TBC\r\n  return origin\r\n}\r\n\r\n/**\r\n * Saves `webId` in `context.me`\r\n * @param webId\r\n * @param context\r\n *\r\n * @returns Returns the WebID, after setting it\r\n */\r\nexport function saveUser (\r\n  webId: $rdf.NamedNode | string | null,\r\n  context?: AuthenticationContext\r\n): $rdf.NamedNode | null {\r\n  // @@ TODO Remove the need for having context as output argument\r\n  let webIdUri: string\r\n  if (webId) {\r\n    webIdUri = (typeof webId === 'string') ? webId : webId.uri\r\n    const me = $rdf.namedNode(webIdUri)\r\n    if (context) {\r\n      context.me = me\r\n    }\r\n    return me\r\n  }\r\n  return null\r\n}\r\n\r\n/**\r\n * Wrapper around [[offlineTestID]]\r\n * @returns {NamedNode|null}\r\n */\r\nexport function defaultTestUser (): $rdf.NamedNode | null {\r\n  // Check for offline override\r\n  const offlineId = offlineTestID()\r\n\r\n  if (offlineId) {\r\n    return offlineId\r\n  }\r\n\r\n  return null\r\n}\r\n\r\n/**\r\n * Checks synchronously whether user is logged in\r\n *\r\n * @returns Named Node or null\r\n */\r\nexport function currentUser (): $rdf.NamedNode | null {\r\n  const str = localStorage['solid-auth-client']\r\n  if (str) {\r\n    const da = JSON.parse(str)\r\n    if (da.session && da.session.webId) {\r\n      // @@ TODO check has not expired\r\n      return $rdf.sym(da.session.webId)\r\n    }\r\n  }\r\n  return offlineTestID() // null unless testing\r\n  // JSON.parse(localStorage['solid-auth-client']).session.webId\r\n}\r\n\r\n/**\r\n * Resolves with the logged in user's WebID\r\n *\r\n * @param context\r\n */\r\nexport function logIn (context: AuthenticationContext): Promise<AuthenticationContext> {\r\n  const me = defaultTestUser() // me is a NamedNode or null\r\n\r\n  if (me) {\r\n    context.me = me\r\n    return Promise.resolve(context)\r\n  }\r\n\r\n  return new Promise(resolve => {\r\n    checkUser().then(webId => {\r\n      // Already logged in?\r\n      if (webId) {\r\n        context.me = $rdf.sym(webId as string)\r\n        console.log(`logIn: Already logged in as ${context.me}`)\r\n        return resolve(context)\r\n      }\r\n      if (!context.div || !context.dom) {\r\n        return resolve(context)\r\n      }\r\n      const box = loginStatusBox(context.dom, webIdUri => {\r\n        saveUser(webIdUri, context)\r\n        resolve(context) // always pass growing context\r\n      })\r\n      context.div.appendChild(box)\r\n    })\r\n  })\r\n}\r\n\r\n/**\r\n * Logs the user in and loads their WebID profile document into the store\r\n *\r\n * @param context\r\n *\r\n * @returns Resolves with the context after login / fetch\r\n */\r\nexport function logInLoadProfile (context: AuthenticationContext): Promise<AuthenticationContext> {\r\n  if (context.publicProfile) {\r\n    return Promise.resolve(context)\r\n  } // already done\r\n  const fetcher = kb.fetcher\r\n  let profileDocument\r\n  return new Promise(function (resolve, reject) {\r\n    return logIn(context)\r\n      .then(context => {\r\n        const webID = context.me\r\n        if (!webID) {\r\n          return reject(new Error('Could not log in'))\r\n        }\r\n        profileDocument = webID.doc()\r\n        // Load the profile into the knowledge base (fetcher.store)\r\n        //   withCredentials: Web arch should let us just load by turning off creds helps CORS\r\n        //   reload: Gets around a specific old Chrome bug caching/origin/cors\r\n        fetcher\r\n          .load(profileDocument, { withCredentials: false, cache: 'reload' })\r\n          .then(_response => {\r\n            context.publicProfile = profileDocument\r\n            resolve(context)\r\n          })\r\n          .catch(err => {\r\n            const message = `Logged in but cannot load profile ${profileDocument} : ${err}`\r\n            if (context.div && context.dom) {\r\n              context.div.appendChild(\r\n                widgets.errorMessageBlock(context.dom, message)\r\n              )\r\n            }\r\n            reject(message)\r\n          })\r\n      })\r\n      .catch(err => {\r\n        reject(new Error(`Can't log in: ${err}`))\r\n      })\r\n  })\r\n}\r\n\r\n/**\r\n * Loads preference file\r\n * Do this after having done log in and load profile\r\n *\r\n * @private\r\n *\r\n * @param context\r\n */\r\nexport function logInLoadPreferences (context: AuthenticationContext): Promise<AuthenticationContext> {\r\n  if (context.preferencesFile) return Promise.resolve(context) // already done\r\n\r\n  const statusArea = context.statusArea || context.div || null\r\n  let progressDisplay\r\n  return new Promise(function (resolve, reject) {\r\n    return logInLoadProfile(context)\r\n      .then(context => {\r\n        const preferencesFile = kb.any(context.me, ns.space('preferencesFile'))\r\n\r\n        function complain (message) {\r\n          message = `logInLoadPreferences: ${message}`\r\n          if (statusArea) {\r\n            // statusArea.innerHTML = ''\r\n            statusArea.appendChild(\r\n              widgets.errorMessageBlock(context.dom, message)\r\n            )\r\n          }\r\n          console.log(message)\r\n          reject(new Error(message))\r\n        }\r\n\r\n        /**\r\n         * Are we working cross-origin?\r\n         * Returns True if we are in a webapp at an origin, and the file origin is different\r\n         */\r\n        function differentOrigin (): boolean {\r\n          return `${window.location.origin}/` !== preferencesFile.site().uri\r\n        }\r\n\r\n        if (!preferencesFile) {\r\n          return reject(new Error(`Can't find a preference file pointer in profile ${context.publicProfile}`))\r\n        }\r\n\r\n        // //// Load preference file\r\n        return kb.fetcher\r\n          .load(preferencesFile, { withCredentials: true })\r\n          .then(function () {\r\n            if (progressDisplay) {\r\n              progressDisplay.parentNode.removeChild(progressDisplay)\r\n            }\r\n            context.preferencesFile = preferencesFile\r\n            return resolve(context)\r\n          })\r\n          .catch(function (err) {\r\n            // Really important to look at why\r\n            const status = err.status\r\n            const message = err.message\r\n            console.log(\r\n              `HTTP status ${status} for preference file ${preferencesFile}`\r\n            )\r\n            let m2\r\n            if (status === 401) {\r\n              m2 = 'Strange - you are not authenticated (properly logged in) to read preference file.'\r\n              alert(m2)\r\n            } else if (status === 403) {\r\n              if (differentOrigin()) {\r\n                m2 = `Unauthorized: Assuming preference file blocked for origin ${window.location.origin}`\r\n                context.preferencesFileError = m2\r\n                return resolve(context)\r\n              }\r\n              m2 = 'You are not authorized to read your preference file. This may be because you are using an untrusted web app.'\r\n              console.warn(m2)\r\n            } else if (status === 404) {\r\n              if (\r\n                confirm(`You do not currently have a preference file. OK for me to create an empty one? ${preferencesFile}`)\r\n              ) {\r\n                // @@@ code me  ... weird to have a name of the file but no file\r\n                alert(`Sorry; I am not prepared to do this. Please create an empty file at ${preferencesFile}`)\r\n                return complain(\r\n                  new Error('Sorry; no code yet to create a preference file at ')\r\n                )\r\n              } else {\r\n                reject(\r\n                  new Error(`User declined to create a preference file at ${preferencesFile}`)\r\n                )\r\n              }\r\n            } else {\r\n              m2 = `Strange: Error ${status} trying to read your preference file.${message}`\r\n              alert(m2)\r\n            }\r\n          }) // load preference file then\r\n      })\r\n      .catch(err => {\r\n        // Fail initial login load preferences\r\n        reject(new Error(`(via loadPrefs) ${err}`))\r\n      })\r\n  })\r\n}\r\n\r\n/**\r\n * Resolves with the same context, outputting\r\n * output: index.public, index.private\r\n *\r\n * @see https://github.com/solid/solid/blob/master/proposals/data-discovery.md#discoverability\r\n */\r\nexport async function loadTypeIndexes (context: AuthenticationContext): Promise<AuthenticationContext> {\r\n  await loadPublicTypeIndex(context)\r\n  await loadPrivateTypeIndex(context)\r\n  return context\r\n}\r\n\r\nasync function loadPublicTypeIndex (context: AuthenticationContext): Promise<AuthenticationContext> {\r\n  return loadIndex(context, ns.solid('publicTypeIndex'), true)\r\n}\r\n\r\nasync function loadPrivateTypeIndex (context: AuthenticationContext): Promise<AuthenticationContext> {\r\n  return loadIndex(context, ns.solid('privateTypeIndex'), false)\r\n}\r\n\r\nasync function loadOneTypeIndex (context: AuthenticationContext, isPublic: boolean): Promise<AuthenticationContext> {\r\n  const predicate = isPublic\r\n    ? ns.solid('publicTypeIndex')\r\n    : ns.solid('privateTypeIndex')\r\n  return loadIndex(context, predicate, isPublic)\r\n}\r\n\r\nasync function loadIndex (\r\n  context: AuthenticationContext,\r\n  predicate: $rdf.NamedNode,\r\n  isPublic: boolean\r\n): Promise<AuthenticationContext> {\r\n  // Loading preferences is more than loading profile\r\n  try {\r\n    ;(await isPublic)\r\n      ? logInLoadProfile(context)\r\n      : logInLoadPreferences(context)\r\n  } catch (err) {\r\n    widgets.complain(context, `loadPubicIndex: login and load problem ${err}`)\r\n  }\r\n  const me = context.me\r\n  let ixs\r\n  context.index = context.index || {}\r\n\r\n  if (isPublic) {\r\n    ixs = kb.each(me, predicate, undefined, context.publicProfile)\r\n    context.index.public = ixs\r\n  } else {\r\n    if (!context.preferencesFileError) {\r\n      ixs = kb.each(\r\n        me,\r\n        ns.solid('privateTypeIndex'),\r\n        undefined,\r\n        context.preferencesFile\r\n      )\r\n      context.index.private = ixs\r\n      if (ixs.length === 0) {\r\n        widgets.complain(`Your preference file ${context.preferencesFile} does not point to a private type index.`)\r\n        return context\r\n      }\r\n    } else {\r\n      console.log(\r\n        'We know your preference file is not available, so we are not bothering with private type indexes.'\r\n      )\r\n    }\r\n  }\r\n\r\n  try {\r\n    await kb.fetcher.load(ixs)\r\n  } catch (err) {\r\n    widgets.complain(context, `loadPubicIndex: loading public type index ${err}`)\r\n  }\r\n  return context\r\n}\r\n\r\n/**\r\n * Resolves with the same context, outputting\r\n * @see https://github.com/solid/solid/blob/master/proposals/data-discovery.md#discoverability\r\n */\r\nasync function ensureTypeIndexes (context: AuthenticationContext): Promise<AuthenticationContext> {\r\n  await ensureOneTypeIndex(context, true)\r\n  await ensureOneTypeIndex(context, false)\r\n  return context\r\n}\r\n\r\n/**\r\n * Load or create ONE type index\r\n * Find one or make one or fail\r\n * Many reasons for failing including script not having permission etc\r\n *\r\n * Adds its output to the context\r\n * @see https://github.com/solid/solid/blob/master/proposals/data-discovery.md#discoverability\r\n */\r\nasync function ensureOneTypeIndex (context: AuthenticationContext, isPublic: boolean): Promise<AuthenticationContext | void> {\r\n  async function makeIndexIfNecessary (context, isPublic) {\r\n    const relevant = isPublic ? context.publicProfile : context.preferencesFile\r\n    const visibility = isPublic ? 'public' : 'private'\r\n\r\n    async function putIndex (newIndex) {\r\n      try {\r\n        await kb.fetcher.webOperation('PUT', newIndex.uri, {\r\n          data: `# ${new Date()} Blank initial Type index\r\n`,\r\n          contentType: 'text/turtle'\r\n        })\r\n        return context\r\n      } catch (e) {\r\n        const msg = `Error creating new index ${e}`\r\n        widgets.complain(context, msg)\r\n      }\r\n    } // putIndex\r\n\r\n    context.index = context.index || {}\r\n    context.index[visibility] = context.index[visibility] || []\r\n    let newIndex\r\n    if (context.index[visibility].length === 0) {\r\n      newIndex = $rdf.sym(`${relevant.dir().uri + visibility}TypeIndex.ttl`)\r\n      console.log(`Linking to new fresh type index ${newIndex}`)\r\n      if (!confirm(`OK to create a new empty index file at ${newIndex}, overwriting anything that is now there?`)) {\r\n        throw new Error('cancelled by user')\r\n      }\r\n      console.log(`Linking to new fresh type index ${newIndex}`)\r\n      const addMe = [\r\n        $rdf.st(context.me, ns.solid(`${visibility}TypeIndex`), newIndex, relevant)\r\n      ]\r\n      try {\r\n        await updatePromise(kb.updater, [], addMe)\r\n      } catch (err) {\r\n        const msg = `Error saving type index link saving back ${newIndex}: ${err}`\r\n        widgets.complain(context, msg)\r\n        return context\r\n      }\r\n\r\n      console.log(`Creating new fresh type index file${newIndex}`)\r\n      await putIndex(newIndex)\r\n      context.index[visibility].push(newIndex) // @@ wait\r\n    } else {\r\n      // officially exists\r\n      const ixs = context.index[visibility]\r\n      try {\r\n        await kb.fetcher.load(ixs)\r\n      } catch (err) {\r\n        widgets.complain(context, `ensureOneTypeIndex: loading indexes ${err}`)\r\n      }\r\n    }\r\n  } // makeIndexIfNecessary\r\n\r\n  try {\r\n    await loadOneTypeIndex(context, isPublic)\r\n    if (context.index) {\r\n      console.log(\r\n        `ensureOneTypeIndex: Type index exists already ${isPublic}`\r\n          ? context.index.public[0]\r\n          : context.index.private[0]\r\n      )\r\n    }\r\n    return context\r\n  } catch (error) {\r\n    await makeIndexIfNecessary(context, isPublic)\r\n    // widgets.complain(context, 'calling loadOneTypeIndex:' + error)\r\n  }\r\n}\r\n\r\n/**\r\n * Returns promise of context with arrays of symbols\r\n *\r\n * 2016-12-11 change to include forClass arc a la\r\n * https://github.com/solid/solid/blob/master/proposals/data-discovery.md\r\n */\r\nexport async function findAppInstances (\r\n  context: AuthenticationContext,\r\n  klass: $rdf.NamedNode,\r\n  isPublic: boolean\r\n): Promise<AuthenticationContext> {\r\n  const fetcher = kb.fetcher\r\n  if (isPublic === undefined) {\r\n    // Then both public and private\r\n    await findAppInstances(context, klass, true)\r\n    await findAppInstances(context, klass, false)\r\n    return context\r\n  }\r\n\r\n  const visibility = isPublic ? 'public' : 'private'\r\n  try {\r\n    await loadOneTypeIndex(context, isPublic)\r\n  } catch (err) {\r\n  }\r\n  const index = context.index as { [key: string]: Array<$rdf.NamedNode> }\r\n  const thisIndex = index[visibility]\r\n  const registrations = thisIndex\r\n    .map(ix => kb.each(undefined, ns.solid('forClass'), klass, ix))\r\n    .flat()\r\n  const instances = registrations\r\n    .map(reg => kb.each(reg, ns.solid('instance')))\r\n    .flat()\r\n  const containers = registrations\r\n    .map(reg => kb.each(reg, ns.solid('instanceContainer')))\r\n    .flat()\r\n\r\n  context.instances = context.instances || []\r\n  context.instances = context.instances.concat(instances)\r\n\r\n  context.containers = context.containers || []\r\n  context.containers = context.containers.concat(containers)\r\n  if (!containers.length) {\r\n    return context\r\n  }\r\n  // If the index gives containers, then look up all things within them\r\n  try {\r\n    await fetcher.load(containers)\r\n  } catch (err) {\r\n    const e = new Error(`[FAI] Unable to load containers${err}`)\r\n    console.log(e) // complain\r\n    widgets.complain(context, `Error looking for ${utils.label(klass)}:  ${err}`)\r\n    // but then ignore it\r\n    // throw new Error(e)\r\n  }\r\n  for (let i = 0; i < containers.length; i++) {\r\n    const cont = containers[i]\r\n    context.instances = context.instances.concat(\r\n      kb.each(cont, ns.ldp('contains'))\r\n    )\r\n  }\r\n  return context\r\n}\r\n\r\n// @@@@ use the one in rdflib.js when it is available and delete this\r\nfunction updatePromise (\r\n  updater: $rdf.UpdateManager,\r\n  del: Array<$rdf.Statement>,\r\n  ins: Array<$rdf.Statement> = []\r\n): Promise<void> {\r\n  return new Promise(function (resolve, reject) {\r\n    updater.update(del, ins, function (uri, ok, errorBody) {\r\n      if (!ok) {\r\n        reject(new Error(errorBody))\r\n      } else {\r\n        resolve()\r\n      }\r\n    }) // callback\r\n  }) // promise\r\n}\r\n\r\n/**\r\n * Register a new app in a type index\r\n */\r\nexport async function registerInTypeIndex (\r\n  context: AuthenticationContext,\r\n  instance: $rdf.NamedNode,\r\n  klass: $rdf.NamedNode,\r\n  isPublic: boolean\r\n): Promise<AuthenticationContext> {\r\n  await ensureOneTypeIndex(context, isPublic)\r\n  if (!context.index) {\r\n    throw new Error('registerInTypeIndex: No type index found')\r\n  }\r\n  const indexes = isPublic ? context.index.public : context.index.private\r\n  if (!indexes.length) {\r\n    throw new Error('registerInTypeIndex: What no type index?')\r\n  }\r\n  const index = indexes[0]\r\n  const registration = widgets.newThing(index)\r\n  const ins = [\r\n    // See https://github.com/solid/solid/blob/master/proposals/data-discovery.md\r\n    $rdf.st(registration, ns.rdf('type'), ns.solid('TypeRegistration'), index),\r\n    $rdf.st(registration, ns.solid('forClass'), klass, index),\r\n    $rdf.st(registration, ns.solid('instance'), instance, index)\r\n  ]\r\n  try {\r\n    await updatePromise(kb.updater, [], ins)\r\n  } catch (e) {\r\n    console.log(e)\r\n    alert(e)\r\n  }\r\n  return context\r\n}\r\n\r\n/**\r\n * UI to control registration of instance\r\n */\r\nexport function registrationControl (\r\n  context: AuthenticationContext,\r\n  instance,\r\n  klass\r\n): Promise<AuthenticationContext | void> {\r\n  const dom = context.dom\r\n  if (!dom || !context.div) {\r\n    return Promise.resolve()\r\n  }\r\n  const box = dom.createElement('div')\r\n  context.div.appendChild(box)\r\n\r\n  return ensureTypeIndexes(context)\r\n    .then(function () {\r\n      box.innerHTML = '<table><tbody><tr></tr><tr></tr></tbody></table>' // tbody will be inserted anyway\r\n      box.setAttribute('style', 'font-size: 120%; text-align: right; padding: 1em; border: solid gray 0.05em;')\r\n      const tbody = box.children[0].children[0]\r\n      const form = kb.bnode() // @@ say for now\r\n\r\n      const registrationStatements = function (index) {\r\n        const registrations = kb\r\n          .each(undefined, ns.solid('instance'), instance)\r\n          .filter(function (r) {\r\n            return kb.holds(r, ns.solid('forClass'), klass)\r\n          })\r\n        const reg = registrations.length\r\n          ? registrations[0]\r\n          : widgets.newThing(index)\r\n        return [\r\n          $rdf.st(reg, ns.solid('instance'), instance, index),\r\n          $rdf.st(reg, ns.solid('forClass'), klass, index)\r\n        ]\r\n      }\r\n\r\n      let index, statements\r\n\r\n      if (context.index && context.index.public && context.index.public.length > 0) {\r\n        index = context.index.public[0]\r\n        statements = registrationStatements(index)\r\n        tbody.children[0].appendChild(\r\n          widgets.buildCheckboxForm(\r\n            context.dom,\r\n            kb,\r\n            `Public link to this ${context.noun}`,\r\n            null,\r\n            statements,\r\n            form,\r\n            index\r\n          )\r\n        )\r\n      }\r\n\r\n      if (context.index && context.index.private && context.index.private.length > 0) {\r\n        index = context.index.private[0]\r\n        statements = registrationStatements(index)\r\n        tbody.children[1].appendChild(\r\n          widgets.buildCheckboxForm(\r\n            context.dom,\r\n            kb,\r\n            `Personal note of this ${context.noun}`,\r\n            null,\r\n            statements,\r\n            form,\r\n            index\r\n          )\r\n        )\r\n      }\r\n      return context\r\n    },\r\n    function (e) {\r\n      let msg\r\n      if (context.div && context.preferencesFileError) {\r\n        msg = '(Preferences not available)'\r\n        context.div.appendChild(dom.createElement('p')).textContent = msg\r\n      } else if (context.div) {\r\n        msg = `registrationControl: Type indexes not available: ${e}`\r\n        context.div.appendChild(widgets.errorMessageBlock(context.dom, e))\r\n      }\r\n      console.log(msg)\r\n    }\r\n    )\r\n    .catch(function (e) {\r\n      const msg = `registrationControl: Error making panel: ${e}`\r\n      if (context.div) {\r\n        context.div.appendChild(widgets.errorMessageBlock(context.dom, e))\r\n      }\r\n      console.log(msg)\r\n    })\r\n}\r\n\r\n/**\r\n * UI to List at all registered things\r\n */\r\nexport function registrationList (context: AuthenticationContext, options: {\r\n  private?: boolean\r\n  public?: boolean\r\n}): Promise<AuthenticationContext> {\r\n  const dom = context.dom as HTMLDocument\r\n  const div = context.div as HTMLElement\r\n\r\n  const box = dom.createElement('div')\r\n  div.appendChild(box)\r\n\r\n  return ensureTypeIndexes(context).then(_indexes => {\r\n    box.innerHTML = '<table><tbody></tbody></table>' // tbody will be inserted anyway\r\n    box.setAttribute('style', 'font-size: 120%; text-align: right; padding: 1em; border: solid #eee 0.5em;')\r\n    const table = box.firstChild as HTMLElement\r\n\r\n    let ix: Array<$rdf.NamedNode> = []\r\n    let sts = []\r\n    const vs = ['private', 'public']\r\n    vs.forEach(function (visibility) {\r\n      if (context.index && options[visibility]) {\r\n        ix = ix.concat(context.index[visibility][0])\r\n        sts = sts.concat(\r\n          kb.statementsMatching(\r\n            undefined,\r\n            ns.solid('instance'),\r\n            undefined,\r\n            context.index[visibility][0]\r\n          )\r\n        )\r\n      }\r\n    })\r\n\r\n    for (let i = 0; i < sts.length; i++) {\r\n      const statement: $rdf.Statement = sts[i]\r\n      // const cla = statement.subject\r\n      const inst = statement.object\r\n      // if (false) {\r\n      //   const tr = table.appendChild(dom.createElement('tr'))\r\n      //   const anchor = tr.appendChild(dom.createElement('a'))\r\n      //   anchor.setAttribute('href', inst.uri)\r\n      //   anchor.textContent = utils.label(inst)\r\n      // } else {\r\n      // }\r\n\r\n      table.appendChild(widgets.personTR(dom, ns.solid('instance'), inst, {\r\n        deleteFunction: function (_x) {\r\n          kb.updater.update([statement], [], function (uri, ok, errorBody) {\r\n            if (ok) {\r\n              console.log(`Removed from index: ${statement.subject}`)\r\n            } else {\r\n              console.log(`Error: Cannot delete ${statement}: ${errorBody}`)\r\n            }\r\n          })\r\n        }\r\n      }))\r\n    }\r\n\r\n    /*\r\n       //const containers = kb.each(klass, ns.solid('instanceContainer'));\r\n       if (containers.length) {\r\n       fetcher.load(containers).then(function(xhrs){\r\n       for (const i=0; i<containers.length; i++) {\r\n       const cont = containers[i];\r\n       instances = instances.concat(kb.each(cont, ns.ldp('contains')));\r\n       }\r\n       });\r\n       }\r\n       */\r\n\r\n    return context\r\n  })\r\n}\r\n\r\n/**\r\n * Simple Access Control\r\n *\r\n * This function sets up a simple default ACL for a resource, with\r\n * RWC for the owner, and a specified access (default none) for the public.\r\n * In all cases owner has read write control.\r\n * Parameter lists modes allowed to public\r\n *\r\n * @param options\r\n * @param options.public eg ['Read', 'Write']\r\n *\r\n * @returns Resolves with aclDoc uri on successful write\r\n */\r\nexport function setACLUserPublic (\r\n  docURI: $rdf.NamedNode,\r\n  me: $rdf.NamedNode,\r\n  options: {\r\n    defaultForNew?: boolean,\r\n    public?: []\r\n  }\r\n): Promise<$rdf.NamedNode> {\r\n  const aclDoc = kb.any(\r\n    kb.sym(docURI),\r\n    kb.sym('http://www.iana.org/assignments/link-relations/acl')\r\n  )\r\n\r\n  return Promise.resolve()\r\n    .then(() => {\r\n      if (aclDoc) {\r\n        return aclDoc\r\n      }\r\n\r\n      return fetchACLRel(docURI).catch(err => {\r\n        throw new Error(`Error fetching rel=ACL header for ${docURI}: ${err}`)\r\n      })\r\n    })\r\n    .then(aclDoc => {\r\n      const aclText = genACLText(docURI, me, aclDoc.uri, options)\r\n\r\n      return kb.fetcher\r\n        .webOperation('PUT', aclDoc.uri, {\r\n          data: aclText,\r\n          contentType: 'text/turtle'\r\n        })\r\n        .then(result => {\r\n          if (!result.ok) {\r\n            throw new Error('Error writing ACL text: ' + result.error)\r\n          }\r\n\r\n          return aclDoc\r\n        })\r\n    })\r\n}\r\n\r\n/**\r\n * @param docURI\r\n * @returns\r\n */\r\nfunction fetchACLRel (docURI: $rdf.NamedNode): Promise<$rdf.NamedNode> {\r\n  const fetcher = kb.fetcher\r\n\r\n  return fetcher.load(docURI).then(result => {\r\n    if (!result.ok) {\r\n      throw new Error('fetchACLRel: While loading:' + result.error)\r\n    }\r\n\r\n    const aclDoc = kb.any(\r\n      kb.sym(docURI),\r\n      kb.sym('http://www.iana.org/assignments/link-relations/acl')\r\n    )\r\n\r\n    if (!aclDoc) {\r\n      throw new Error('fetchACLRel: No Link rel=ACL header for ' + docURI)\r\n    }\r\n\r\n    return aclDoc\r\n  })\r\n}\r\n\r\n/**\r\n * @param docURI\r\n * @param me\r\n * @param aclURI\r\n * @param options\r\n *\r\n * @returns Serialized ACL\r\n */\r\nfunction genACLText (\r\n  docURI: $rdf.NamedNode,\r\n  me: $rdf.NamedNode,\r\n  aclURI: $rdf.NamedNode,\r\n  options: {\r\n    defaultForNew?: boolean,\r\n    public?: []\r\n  } = {}\r\n): string {\r\n  const optPublic = options.public || []\r\n  const g = $rdf.graph()\r\n  const auth = $rdf.Namespace('http://www.w3.org/ns/auth/acl#')\r\n  let a = g.sym(`${aclURI}#a1`)\r\n  const acl = g.sym(aclURI)\r\n  const doc = g.sym(docURI)\r\n  g.add(a, ns.rdf('type'), auth('Authorization'), acl)\r\n  g.add(a, auth('accessTo'), doc, acl)\r\n  if (options.defaultForNew) {\r\n    // TODO: Should this be auth('default') instead?\r\n    g.add(a, auth('defaultForNew'), doc, acl)\r\n  }\r\n  g.add(a, auth('agent'), me, acl)\r\n  g.add(a, auth('mode'), auth('Read'), acl)\r\n  g.add(a, auth('mode'), auth('Write'), acl)\r\n  g.add(a, auth('mode'), auth('Control'), acl)\r\n\r\n  if (optPublic.length) {\r\n    a = g.sym(`${aclURI}#a2`)\r\n    g.add(a, ns.rdf('type'), auth('Authorization'), acl)\r\n    g.add(a, auth('accessTo'), doc, acl)\r\n    g.add(a, auth('agentClass'), ns.foaf('Agent'), acl)\r\n    for (let p = 0; p < optPublic.length; p++) {\r\n      g.add(a, auth('mode'), auth(optPublic[p]), acl) // Like 'Read' etc\r\n    }\r\n  }\r\n  // @@ TODO Remove casting of $rdf\r\n  return ($rdf as any).serialize(acl, g, aclURI, 'text/turtle')\r\n}\r\n\r\n/**\r\n * Returns `$rdf.sym($SolidTestEnvironment.username)` if\r\n * `$SolidTestEnvironment.username` is defined as a global\r\n * @returns {NamedNode|null}\r\n */\r\nexport function offlineTestID (): $rdf.NamedNode | null {\r\n  const { $SolidTestEnvironment }: any = window\r\n  if (\r\n    typeof $SolidTestEnvironment !== 'undefined' &&\r\n    $SolidTestEnvironment.username\r\n  ) {\r\n    // Test setup\r\n    console.log('Assuming the user is ' + $SolidTestEnvironment.username)\r\n    return $rdf.sym($SolidTestEnvironment.username)\r\n  }\r\n\r\n  if (\r\n    typeof document !== 'undefined' &&\r\n    document.location &&\r\n    ('' + document.location).slice(0, 16) === 'http://localhost'\r\n  ) {\r\n    const div = document.getElementById('appTarget')\r\n    if (!div) return null\r\n    const id = div.getAttribute('testID')\r\n    if (!id) return null\r\n    /* me = kb.any(subject, ns.acl('owner')); // when testing on plane with no WebID\r\n     */\r\n    console.log('Assuming user is ' + id)\r\n    return $rdf.sym(id)\r\n  }\r\n  return null\r\n}\r\n\r\nfunction getDefaultSignInButtonStyle (): string {\r\n  return 'padding: 1em; border-radius:0.5em; margin: 2em; font-size: 100%;'\r\n}\r\n\r\n/**\r\n * Bootstrapping identity\r\n * (Called by `loginStatusBox()`)\r\n *\r\n * @param dom\r\n * @param setUserCallback\r\n *\r\n * @returns\r\n */\r\nfunction signInOrSignUpBox (\r\n  dom: HTMLDocument,\r\n  setUserCallback: (user: string) => void,\r\n  options: {\r\n    buttonStyle?: string\r\n  } = {}\r\n): HTMLElement {\r\n  options = options || {}\r\n  const signInButtonStyle = options.buttonStyle || getDefaultSignInButtonStyle()\r\n\r\n  // @@ TODO Remove the need to cast HTML element to any\r\n  const box: any = dom.createElement('div')\r\n  const magicClassName = 'SolidSignInOrSignUpBox'\r\n  console.log('widgets.signInOrSignUpBox')\r\n  box.setUserCallback = setUserCallback\r\n  box.setAttribute('class', magicClassName)\r\n  box.style = 'display:flex;'\r\n\r\n  // Sign in button with PopUP\r\n  const signInPopUpButton = dom.createElement('input') // multi\r\n  box.appendChild(signInPopUpButton)\r\n  signInPopUpButton.setAttribute('type', 'button')\r\n  signInPopUpButton.setAttribute('value', 'Log in')\r\n  signInPopUpButton.setAttribute('style', `${signInButtonStyle}background-color: #eef;`)\r\n\r\n  signInPopUpButton.addEventListener('click', () => {\r\n    const offline = offlineTestID()\r\n    if (offline) return setUserCallback(offline.uri)\r\n    return solidAuthClient.popupLogin().then(session => {\r\n      const webIdURI = session.webId\r\n      // setUserCallback(webIdURI)\r\n      const divs = dom.getElementsByClassName(magicClassName)\r\n      console.log(`Logged in, ${divs.length} panels to be serviced`)\r\n      // At the same time, satisfy all the other login boxes\r\n      for (let i = 0; i < divs.length; i++) {\r\n        const div: any = divs[i]\r\n        // @@ TODO Remove the need to manipulate HTML elements\r\n        if (div.setUserCallback) {\r\n          try {\r\n            div.setUserCallback(webIdURI)\r\n            const parent = div.parentNode\r\n            if (parent) {\r\n              parent.removeChild(div)\r\n            }\r\n          } catch (e) {\r\n            console.log(`## Error satisfying login box: ${e}`)\r\n            div.appendChild(widgets.errorMessageBlock(dom, e))\r\n          }\r\n        }\r\n      }\r\n    })\r\n  }, false)\r\n\r\n  // Sign up button\r\n  const signupButton = dom.createElement('input')\r\n  box.appendChild(signupButton)\r\n  signupButton.setAttribute('type', 'button')\r\n  signupButton.setAttribute('value', 'Sign Up for Solid')\r\n  signupButton.setAttribute('style', `${signInButtonStyle}background-color: #efe;`)\r\n\r\n  signupButton.addEventListener('click', function (_event) {\r\n    const signupMgr = new SolidTls.Signup()\r\n    signupMgr.signup().then(function (uri) {\r\n      console.log('signInOrSignUpBox signed up ' + uri)\r\n      setUserCallback(uri)\r\n    })\r\n  }, false)\r\n  return box\r\n}\r\n\r\n/**\r\n * @returns {Promise<string|null>} Resolves with WebID URI or null\r\n */\r\nfunction webIdFromSession (session?: { webId: string }): string | null {\r\n  const webId = session ? session.webId : null\r\n  if (webId) {\r\n    saveUser(webId)\r\n  }\r\n  return webId\r\n}\r\n\r\n/**\r\n * @returns {Promise<string|null>} Resolves with WebID URI or null\r\n */\r\n\r\n/*\r\nfunction checkCurrentUser () {\r\n  return checkUser()\r\n}\r\n*/\r\n\r\n/**\r\n * Retrieves currently logged in webId from either\r\n * defaultTestUser or SolidAuthClient\r\n * @param [setUserCallback] Optional callback\r\n *\r\n * @returns Resolves with webId uri, if no callback provided\r\n */\r\nexport function checkUser<T> (\r\n  setUserCallback?: (me: $rdf.NamedNode | null) => T\r\n): Promise<$rdf.NamedNode | T> {\r\n  // Check to see if already logged in / have the WebID\r\n  const me = defaultTestUser()\r\n  if (me) {\r\n    return Promise.resolve(setUserCallback ? setUserCallback(me) : me)\r\n  }\r\n\r\n  // doc = kb.any(doc, ns.link('userMirror')) || doc\r\n\r\n  return solidAuthClient\r\n    .currentSession()\r\n    .then(webIdFromSession)\r\n    .catch(err => {\r\n      console.log('Error fetching currentSession:', err)\r\n    })\r\n    .then(webId => {\r\n      // if (webId.startsWith('dns:')) {  // legacy rww.io pseudo-users\r\n      //   webId = null\r\n      // }\r\n      const me = saveUser(webId)\r\n\r\n      if (me) {\r\n        console.log(`(Logged in as ${me} by authentication)`)\r\n      }\r\n\r\n      return setUserCallback ? setUserCallback(me) : me\r\n    })\r\n}\r\n\r\n/**\r\n * Login status box\r\n *\r\n * A big sign-up/sign in box or a logout box depending on the state\r\n *\r\n * @param dom\r\n * @param listener\r\n *\r\n * @returns\r\n */\r\nexport function loginStatusBox (\r\n  dom: HTMLDocument,\r\n  listener: ((uri: string | null) => void) | null = null,\r\n  options: {\r\n    buttonStyle?: string\r\n  } = {}\r\n): HTMLElement {\r\n  // 20190630\r\n  let me = defaultTestUser()\r\n  // @@ TODO Remove the need to cast HTML element to any\r\n  const box: any = dom.createElement('div')\r\n\r\n  function setIt (newidURI) {\r\n    if (!newidURI) {\r\n      return\r\n    }\r\n\r\n    const uri = newidURI.uri || newidURI\r\n    //    UI.preferences.set('me', uri)\r\n    me = $rdf.sym(uri)\r\n    box.refresh()\r\n    if (listener) listener(me.uri)\r\n  }\r\n\r\n  function logoutButtonHandler (_event) {\r\n    // UI.preferences.set('me', '')\r\n    solidAuthClient.logout().then(\r\n      function () {\r\n        const message = `Your WebID was ${me}. It has been forgotten.`\r\n        me = null\r\n        try {\r\n          log.alert(message)\r\n        } catch (e) {\r\n          window.alert(message)\r\n        }\r\n        box.refresh()\r\n        if (listener) listener(null)\r\n      },\r\n      err => {\r\n        alert('Fail to log out:' + err)\r\n      }\r\n    )\r\n  }\r\n\r\n  function logoutButton (me, options) {\r\n    const signInButtonStyle = options.buttonStyle || getDefaultSignInButtonStyle()\r\n    let logoutLabel = 'WebID logout'\r\n    if (me) {\r\n      const nick =\r\n        kb.any(me, ns.foaf('nick')) ||\r\n        kb.any(me, ns.foaf('name'))\r\n      if (nick) {\r\n        logoutLabel = 'Logout ' + nick.value\r\n      }\r\n    }\r\n    const signOutButton = dom.createElement('input')\r\n    // signOutButton.className = 'WebIDCancelButton'\r\n    signOutButton.setAttribute('type', 'button')\r\n    signOutButton.setAttribute('value', logoutLabel)\r\n    signOutButton.setAttribute('style', `${signInButtonStyle}background-color: #eee;`)\r\n    signOutButton.addEventListener('click', logoutButtonHandler, false)\r\n    return signOutButton\r\n  }\r\n\r\n  box.refresh = function () {\r\n    solidAuthClient.currentSession().then(\r\n      session => {\r\n        if (session && session.webId) {\r\n          me = $rdf.sym(session.webId)\r\n        } else {\r\n          me = null\r\n        }\r\n        if ((me && box.me !== me.uri) || (!me && box.me)) {\r\n          widgets.clearElement(box)\r\n          if (me) {\r\n            box.appendChild(logoutButton(me, options))\r\n          } else {\r\n            box.appendChild(signInOrSignUpBox(dom, setIt, options))\r\n          }\r\n        }\r\n        box.me = me ? me.uri : null\r\n      },\r\n      err => {\r\n        alert(`loginStatusBox: ${err}`)\r\n      }\r\n    )\r\n  }\r\n\r\n  if (solidAuthClient.trackSession) {\r\n    solidAuthClient.trackSession(session => {\r\n      if (session && session.webId) {\r\n        me = $rdf.sym(session.webId)\r\n      } else {\r\n        me = null\r\n      }\r\n      box.refresh()\r\n    })\r\n  }\r\n\r\n  box.me = '99999' // Force refresh\r\n  box.refresh()\r\n  return box\r\n}\r\n\r\n/**\r\n * Workspace selection etc\r\n * See https://github.com/solid/userguide/issues/16\r\n */\r\n\r\n/**\r\n * Returns a UI object which, if it selects a workspace,\r\n * will callback(workspace, newBase).\r\n * See https://github.com/solid/userguide/issues/16 for more info on workspaces.\r\n *\r\n * If necessary, will get an account, preference file, etc. In sequence:\r\n *\r\n *   - If not logged in, log in.\r\n *   - Load preference file\r\n *   - Prompt user for workspaces\r\n *   - Allows the user to just type in a URI by hand\r\n *\r\n * Calls back with the workspace and the base URI\r\n *\r\n * @param dom\r\n * @param appDetails\r\n * @param callbackWS\r\n */\r\nexport function selectWorkspace (\r\n  dom: HTMLDocument,\r\n  appDetails: AppDetails,\r\n  callbackWS: (workspace: string | null, newBase: string) => void\r\n): HTMLElement {\r\n  const noun = appDetails.noun\r\n  const appPathSegment = appDetails.appPathSegment\r\n\r\n  const me = defaultTestUser()\r\n  const box = dom.createElement('div')\r\n  const context: AuthenticationContext = { me: me, dom: dom, div: box }\r\n\r\n  function say (s) {\r\n    box.appendChild(widgets.errorMessageBlock(dom, s))\r\n  }\r\n\r\n  function figureOutBase (ws) {\r\n    let newBase = kb.any(ws, ns.space('uriPrefix'))\r\n    if (!newBase) {\r\n      newBase = ws.uri.split('#')[0]\r\n    } else {\r\n      newBase = newBase.value\r\n    }\r\n    if (newBase.slice(-1) !== '/') {\r\n      console.log(`${appPathSegment}: No / at end of uriPrefix ${newBase}`) // @@ paramater?\r\n      newBase = `${newBase}/`\r\n    }\r\n    const now = new Date()\r\n    newBase += `${appPathSegment}/id${now.getTime()}/` // unique id\r\n    return newBase\r\n  }\r\n\r\n  function displayOptions (context) {\r\n    // const status = ''\r\n    const id = context.me\r\n    const preferencesFile = context.preferencesFile\r\n    let newBase = null\r\n\r\n    // A workspace specifically defined in the private preference file:\r\n    let w = kb\r\n      .statementsMatching(\r\n        id,\r\n        ns.space('workspace'), // Only trust preference file here\r\n        undefined,\r\n        preferencesFile\r\n      )\r\n      .map(function (st) {\r\n        return st.object\r\n      })\r\n\r\n    // A workspace in a storage in the public profile:\r\n    const storages = kb.each(id, ns.space('storage')) // @@ No provenance requirement at the moment\r\n    storages.map(function (s) {\r\n      w = w.concat(kb.each(s, ns.ldp('contains')))\r\n    })\r\n\r\n    if (w.length === 1) {\r\n      say(`Workspace used: ${w[0].uri}`) // @@ allow user to see URI\r\n      newBase = figureOutBase(w[0])\r\n      // callbackWS(w[0], newBase)\r\n    } else if (w.length === 0) {\r\n      say(`You don't seem to have any workspaces. You have ${storages.length} storage spaces.`)\r\n    }\r\n\r\n    // Prompt for ws selection or creation\r\n    // say( w.length + \" workspaces for \" + id + \"Choose one.\");\r\n    const table = dom.createElement('table')\r\n    table.setAttribute('style', 'border-collapse:separate; border-spacing: 0.5em;')\r\n\r\n    // const popup = window.open(undefined, '_blank', { height: 300, width:400 }, false)\r\n    box.appendChild(table)\r\n\r\n    //  Add a field for directly adding the URI yourself\r\n\r\n    // const hr = box.appendChild(dom.createElement('hr')) // @@\r\n    box.appendChild(dom.createElement('hr')) // @@\r\n\r\n    const p = box.appendChild(dom.createElement('p'))\r\n    p.textContent = `Where would you like to store the data for the ${noun}?  Give the URL of the directory where you would like the data stored.`\r\n    // @@ TODO Remove the need to cast baseField to any\r\n    const baseField: any = box.appendChild(dom.createElement('input'))\r\n    baseField.setAttribute('type', 'text')\r\n    baseField.size = 80 // really a string\r\n    baseField.label = 'base URL'\r\n    baseField.autocomplete = 'on'\r\n    if (newBase) {\r\n      // set to default\r\n      baseField.value = newBase\r\n    }\r\n\r\n    context.baseField = baseField\r\n\r\n    box.appendChild(dom.createElement('br')) // @@\r\n\r\n    const button = box.appendChild(dom.createElement('button'))\r\n    button.textContent = `Start new ${noun} at this URI`\r\n    button.addEventListener('click', function (_event) {\r\n      let newBase = baseField.value\r\n      if (newBase.slice(-1) !== '/') {\r\n        newBase += '/'\r\n      }\r\n      callbackWS(null, newBase)\r\n    })\r\n\r\n    // Now go set up the table of spaces\r\n\r\n    // const row = 0\r\n    w = w.filter(function (x) {\r\n      return !kb.holds(\r\n        x,\r\n        ns.rdf('type'), // Ignore master workspaces\r\n        ns.space('MasterWorkspace')\r\n      )\r\n    })\r\n    let col1, col2, col3, tr, ws, style, comment\r\n    const cellStyle = 'height: 3em; margin: 1em; padding: 1em white; border-radius: 0.3em;'\r\n    const deselectedStyle = `${cellStyle}border: 0px;`\r\n    // const selectedStyle = cellStyle + 'border: 1px solid black;'\r\n    for (let i = 0; i < w.length; i++) {\r\n      ws = w[i]\r\n      tr = dom.createElement('tr')\r\n      if (i === 0) {\r\n        col1 = dom.createElement('td')\r\n        col1.setAttribute('rowspan', `${w.length}1`)\r\n        col1.textContent = 'Choose a workspace for this:'\r\n        col1.setAttribute('style', 'vertical-align:middle;')\r\n        tr.appendChild(col1)\r\n      }\r\n      col2 = dom.createElement('td')\r\n      style = kb.any(ws, ns.ui('style'))\r\n      if (style) {\r\n        style = style.value\r\n      } else {\r\n        // Otherwise make up arbitrary colour\r\n        const hash = function (x) {\r\n          return x.split('').reduce(function (a, b) {\r\n            a = (a << 5) - a + b.charCodeAt(0)\r\n            return a & a\r\n          }, 0)\r\n        }\r\n        const bgcolor = `#${((hash(ws.uri) & 0xffffff) | 0xc0c0c0).toString(16)}` // c0c0c0  forces pale\r\n        style = `color: black ; background-color: ${bgcolor};`\r\n      }\r\n      col2.setAttribute('style', deselectedStyle + style)\r\n      tr.target = ws.uri\r\n      let label = kb.any(ws, ns.rdfs('label'))\r\n      if (!label) {\r\n        label = ws.uri.split('/').slice(-1)[0] || ws.uri.split('/').slice(-2)[0]\r\n      }\r\n      col2.textContent = label || '???'\r\n      tr.appendChild(col2)\r\n      if (i === 0) {\r\n        col3 = dom.createElement('td')\r\n        col3.setAttribute('rowspan', `${w.length}1`)\r\n        // col3.textContent = '@@@@@ remove';\r\n        col3.setAttribute('style', 'width:50%;')\r\n        tr.appendChild(col3)\r\n      }\r\n      table.appendChild(tr)\r\n\r\n      comment = kb.any(ws, ns.rdfs('comment'))\r\n      comment = comment ? comment.value : 'Use this workspace'\r\n      col2.addEventListener('click', function (_event) {\r\n        col3.textContent = comment ? comment.value : ''\r\n        col3.setAttribute('style', deselectedStyle + style)\r\n        const button = dom.createElement('button')\r\n        button.textContent = 'Continue'\r\n        // button.setAttribute('style', style);\r\n        const newBase = figureOutBase(ws)\r\n        baseField.value = newBase // show user proposed URI\r\n\r\n        button.addEventListener('click', function (_event) {\r\n          button.disabled = true\r\n          callbackWS(ws, newBase)\r\n          button.textContent = '---->'\r\n        }, true) // capture vs bubble\r\n        col3.appendChild(button)\r\n      }, true) // capture vs bubble\r\n    }\r\n\r\n    // last line with \"Make new workspace\"\r\n    const trLast = dom.createElement('tr')\r\n    col2 = dom.createElement('td')\r\n    col2.setAttribute('style', cellStyle)\r\n    col2.textContent = '+ Make a new workspace'\r\n    // addMyListener(col2, 'Set up a new workspace', '') // @@ TBD\r\n    trLast.appendChild(col2)\r\n    table.appendChild(trLast)\r\n  } // displayOptions\r\n\r\n  logInLoadPreferences(context) // kick off async operation\r\n    .then(displayOptions)\r\n    .catch(err => {\r\n      box.appendChild(widgets.errorMessageBlock(err))\r\n    })\r\n\r\n  return box // return the box element, while login proceeds\r\n} // selectWorkspace\r\n\r\n/**\r\n * Creates a new instance of an app.\r\n *\r\n * An instance of an app could be e.g. an issue tracker for a given project,\r\n * or a chess game, or calendar, or a health/fitness record for a person.\r\n *\r\n * Note that this use of the term 'app' refers more to entries in the user's\r\n * type index than to actual software applications that use the personal data\r\n * to which these entries point.\r\n *\r\n * @param dom\r\n * @param appDetails\r\n * @param callback\r\n *\r\n * @returns A div with a button in it for making a new app instance\r\n */\r\nexport function newAppInstance (\r\n  dom: HTMLDocument,\r\n  appDetails: AppDetails,\r\n  callback: (workspace: string | null, newBase: string) => void\r\n): HTMLElement {\r\n  const gotWS = function (ws, base) {\r\n    // $rdf.log.debug(\"newAppInstance: Selected workspace = \" + (ws? ws.uri : 'none'))\r\n    callback(ws, base)\r\n  }\r\n  const div = dom.createElement('div')\r\n  const b = dom.createElement('button')\r\n  b.setAttribute('type', 'button')\r\n  div.appendChild(b)\r\n  b.innerHTML = `Make new ${appDetails.noun}`\r\n  b.addEventListener('click', _event => {\r\n    div.appendChild(selectWorkspace(dom, appDetails, gotWS))\r\n  }, false)\r\n  div.appendChild(b)\r\n  return div\r\n}\r\n\r\n/**\r\n * Retrieves whether the currently logged in user is a power user\r\n * and/or a developer\r\n */\r\nexport async function getUserRoles (): Promise<Array<$rdf.NamedNode>> {\r\n  try {\r\n    const {\r\n      me,\r\n      preferencesFile,\r\n      preferencesFileError\r\n    } = await logInLoadPreferences({})\r\n    if (!preferencesFile || preferencesFileError) {\r\n      throw new Error(preferencesFileError)\r\n    }\r\n    return kb.each(me, ns.rdf('type'), null, preferencesFile.doc())\r\n  } catch (error) {\r\n    console.warn('Unable to fetch your preferences - this was the error: ', error)\r\n  }\r\n  return []\r\n}\r\n\r\n/**\r\n * Filters which panes should be available, based on the result of [[getUserRoles]]\r\n */\r\nexport async function filterAvailablePanes (panes: Array<PaneDefinition>): Promise<Array<PaneDefinition>> {\r\n  const userRoles = await getUserRoles()\r\n  return panes.filter(pane => isMatchingAudience(pane, userRoles))\r\n}\r\n\r\nfunction isMatchingAudience (pane: PaneDefinition, userRoles: Array<$rdf.NamedNode>): boolean {\r\n  const audience = pane.audience || []\r\n  return audience.reduce(\r\n    (isMatch, audienceRole) => isMatch && !!userRoles.find(role => role.equals(audienceRole)),\r\n    true as boolean\r\n  )\r\n}\r\n"],"file":"authn.js"}