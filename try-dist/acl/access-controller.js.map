{"version":3,"sources":["../../src/acl/access-controller.ts"],"names":["AccessController","subject","noun","context","statusElement","classes","targetIsProtected","targetDoc","targetACLDoc","defaultHolder","defaultACLDoc","prospectiveDefaultHolder","store","dom","rootElement","createElement","classList","add","aclGroupContent","isContainer","uri","slice","isUsingDefaults","aclDefaultStore","mainCombo","AccessGroups","defaults","defaultsCombo","defaultsDiffer","aclMap","innerHTML","renderStatus","defaultHolderLink","appendChild","href","innerText","render","renderRemoveDefaultsController","isEditable","renderAddDefaultsController","renderAddAclsController","renderRemoveAclsController","useDefaultButton","utils","label","bigButton","addEventListener","removeAcls","then","error","addAclButton","addAcls","containerElement","defaultsController","noticeElement","defaultsControllerNotice","button","addDefaults","removeDefaults","message","aclControlBoxStatusRevealed","temporaryStatusInit","setTimeout","temporaryStatusEnd","toggle","console","Promise","reject","aclGraph","statements","forEach","st","predicate","object","fetcher","putBack","resolve","warn","fallbackCombo","save","newAClGraph","byCombo","updater","UpdateManager","put","statementsMatching","undefined","ok","Error","unload","requested","log"],"mappings":"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","sourcesContent":["/**\r\n * Contains the [[AccessController]] class\r\n * @packageDocumentation\r\n */\r\n\r\nimport { adoptACLDefault, getProspectiveHolder, makeACLGraphbyCombo, sameACL } from './acl'\r\nimport { graph, NamedNode, UpdateManager } from 'rdflib'\r\nimport { AccessGroups } from './access-groups'\r\nimport { DataBrowserContext } from 'pane-registry'\r\nimport { shortNameForFolder } from './acl-control'\r\nimport utils from '../utils.js'\r\n\r\n/**\r\n * Rendered HTML component used in the databrowser's Sharing pane.\r\n */\r\nexport class AccessController {\r\n  public mainCombo: AccessGroups\r\n  public defaultsCombo: AccessGroups | null\r\n  private readonly isContainer: boolean\r\n  private defaultsDiffer: boolean\r\n  private readonly rootElement: HTMLElement\r\n  private isUsingDefaults: boolean\r\n\r\n  constructor (\r\n    public subject: NamedNode,\r\n    public noun: string,\r\n    public context: DataBrowserContext,\r\n    private statusElement: HTMLElement,\r\n    public classes: Record<string, string>,\r\n    public targetIsProtected: boolean,\r\n    private targetDoc: NamedNode,\r\n    private targetACLDoc: NamedNode,\r\n    private defaultHolder: NamedNode | null,\r\n    private defaultACLDoc: NamedNode | null,\r\n    private prospectiveDefaultHolder: NamedNode | undefined,\r\n    public store,\r\n    public dom\r\n  ) {\r\n    this.rootElement = dom.createElement('div')\r\n    this.rootElement.classList.add(classes.aclGroupContent)\r\n    this.isContainer = targetDoc.uri.slice(-1) === '/' // Give default for all directories\r\n    if (defaultHolder && defaultACLDoc) {\r\n      this.isUsingDefaults = true\r\n      const aclDefaultStore = adoptACLDefault(this.targetDoc, targetACLDoc, defaultHolder, defaultACLDoc)\r\n      this.mainCombo = new AccessGroups(targetDoc, targetACLDoc, this, aclDefaultStore, { defaults: true })\r\n      this.defaultsCombo = null\r\n      this.defaultsDiffer = false\r\n    } else {\r\n      this.isUsingDefaults = false\r\n      this.mainCombo = new AccessGroups(targetDoc, targetACLDoc, this, store)\r\n      this.defaultsCombo = new AccessGroups(targetDoc, targetACLDoc, this, store, { defaults: true })\r\n      this.defaultsDiffer = !sameACL(this.mainCombo.aclMap, this.defaultsCombo.aclMap)\r\n    }\r\n  }\r\n\r\n  public get isEditable (): boolean {\r\n    return !this.isUsingDefaults\r\n  }\r\n\r\n  public render (): HTMLElement {\r\n    this.rootElement.innerHTML = ''\r\n    if (this.isUsingDefaults) {\r\n      this.renderStatus(`The sharing for this ${this.noun} is the default for folder `)\r\n      if (this.defaultHolder) {\r\n        const defaultHolderLink = this.statusElement.appendChild(this.dom.createElement('a'))\r\n        defaultHolderLink.href = this.defaultHolder.uri\r\n        defaultHolderLink.innerText = shortNameForFolder(this.defaultHolder)\r\n      }\r\n    } else if (!this.defaultsDiffer) {\r\n      this.renderStatus('This is also the default for things in this folder.')\r\n    } else {\r\n      this.renderStatus('')\r\n    }\r\n    this.rootElement.appendChild(this.mainCombo.render())\r\n    if (this.defaultsCombo && this.defaultsDiffer) {\r\n      this.rootElement.appendChild(this.renderRemoveDefaultsController())\r\n      this.rootElement.appendChild(this.defaultsCombo.render())\r\n    } else if (this.isEditable) {\r\n      this.rootElement.appendChild(this.renderAddDefaultsController())\r\n    }\r\n    if (!this.targetIsProtected && this.isUsingDefaults) {\r\n      this.rootElement.appendChild(this.renderAddAclsController())\r\n    } else if (!this.targetIsProtected) {\r\n      this.rootElement.appendChild(this.renderRemoveAclsController())\r\n    }\r\n    return this.rootElement\r\n  }\r\n\r\n  private renderRemoveAclsController (): HTMLElement {\r\n    const useDefaultButton = this.dom.createElement('button')\r\n    useDefaultButton.innerText = `Remove custom sharing settings for this ${this.noun} -- just use default${this.prospectiveDefaultHolder ? ` for ${utils.label(this.prospectiveDefaultHolder)}` : ''}`\r\n    useDefaultButton.classList.add(this.classes.bigButton)\r\n    useDefaultButton.addEventListener('click', () => this.removeAcls()\r\n      .then(() => this.render())\r\n      .catch(error => this.renderStatus(error)))\r\n    return useDefaultButton\r\n  }\r\n\r\n  private renderAddAclsController (): HTMLElement {\r\n    const addAclButton = this.dom.createElement('button')\r\n    addAclButton.innerText = `Set specific sharing for this ${this.noun}`\r\n    addAclButton.classList.add(this.classes.bigButton)\r\n    addAclButton.addEventListener('click', () => this.addAcls()\r\n      .then(() => this.render())\r\n      .catch(error => this.renderStatus(error)))\r\n    return addAclButton\r\n  }\r\n\r\n  private renderAddDefaultsController (): HTMLElement {\r\n    const containerElement = this.dom.createElement('div')\r\n    containerElement.classList.add(this.classes.defaultsController)\r\n\r\n    const noticeElement = containerElement.appendChild(this.dom.createElement('div'))\r\n    noticeElement.innerText = 'Sharing for things within the folder currently tracks sharing for the folder.'\r\n    noticeElement.classList.add(this.classes.defaultsControllerNotice)\r\n\r\n    const button = containerElement.appendChild(this.dom.createElement('button'))\r\n    button.innerText = 'Set the sharing of folder contents separately from the sharing for the folder'\r\n    button.classList.add(this.classes.bigButton)\r\n    button.addEventListener('click', () => this.addDefaults()\r\n      .then(() => this.render()))\r\n    return containerElement\r\n  }\r\n\r\n  private renderRemoveDefaultsController (): HTMLElement {\r\n    const containerElement = this.dom.createElement('div')\r\n    containerElement.classList.add(this.classes.defaultsController)\r\n\r\n    const noticeElement = containerElement.appendChild(this.dom.createElement('div'))\r\n    noticeElement.innerText = 'Access to things within this folder:'\r\n    noticeElement.classList.add(this.classes.defaultsControllerNotice)\r\n\r\n    const button = containerElement.appendChild(this.dom.createElement('button'))\r\n    button.innerText = 'Set default for folder contents to just track the sharing for the folder'\r\n    button.classList.add(this.classes.bigButton)\r\n    button.addEventListener('click', () => this.removeDefaults()\r\n      .then(() => this.render())\r\n      .catch(error => this.renderStatus(error)))\r\n    return containerElement\r\n  }\r\n\r\n  public renderTemporaryStatus (message: string): void {\r\n    // @@ TODO Introduce better system for error notification to user https://github.com/solid/mashlib/issues/87\r\n    this.statusElement.classList.add(this.classes.aclControlBoxStatusRevealed)\r\n    this.statusElement.innerText = message\r\n    this.statusElement.classList.add(this.classes.temporaryStatusInit)\r\n    setTimeout(() => {\r\n      this.statusElement.classList.add(this.classes.temporaryStatusEnd)\r\n    })\r\n    setTimeout(() => {\r\n      this.statusElement.innerText = ''\r\n    }, 5000)\r\n  }\r\n\r\n  public renderStatus (message: string): void {\r\n    // @@ TODO Introduce better system for error notification to user https://github.com/solid/mashlib/issues/87\r\n    this.statusElement.classList.toggle(this.classes.aclControlBoxStatusRevealed, !!message)\r\n    this.statusElement.innerText = message\r\n  }\r\n\r\n  private async addAcls (): Promise<void> {\r\n    if (!this.defaultHolder || !this.defaultACLDoc) {\r\n      const message = 'Unable to find defaults to copy'\r\n      console.error(message)\r\n      return Promise.reject(message)\r\n    }\r\n    const aclGraph = adoptACLDefault(this.targetDoc, this.targetACLDoc, this.defaultHolder, this.defaultACLDoc)\r\n    aclGraph.statements.forEach(st => this.store.add(st.subject, st.predicate, st.object, this.targetACLDoc))\r\n    try {\r\n      await this.store.fetcher.putBack(this.targetACLDoc)\r\n      this.isUsingDefaults = false\r\n      return Promise.resolve()\r\n    } catch (error) {\r\n      const message = ` Error writing back access control file! ${error}`\r\n      console.error(message)\r\n      return Promise.reject(message)\r\n    }\r\n  }\r\n\r\n  private async addDefaults (): Promise<void> {\r\n    this.defaultsCombo = new AccessGroups(this.targetDoc, this.targetACLDoc, this, this.store, { defaults: true })\r\n    this.defaultsDiffer = true\r\n  }\r\n\r\n  private async removeAcls (): Promise<void> {\r\n    try {\r\n      await this.store.fetcher.delete(this.targetACLDoc.uri, {})\r\n      this.isUsingDefaults = true\r\n      try {\r\n        this.prospectiveDefaultHolder = await getProspectiveHolder(this.targetDoc.uri)\r\n      } catch (error) {\r\n        // No need to show this error in status, but good to warn about it in console\r\n        console.warn(error)\r\n      }\r\n    } catch (error) {\r\n      const message = `Error deleting access control file: ${this.targetACLDoc}: ${error}`\r\n      console.error(message)\r\n      return Promise.reject(message)\r\n    }\r\n  }\r\n\r\n  private async removeDefaults (): Promise<void> {\r\n    const fallbackCombo = this.defaultsCombo\r\n    try {\r\n      this.defaultsCombo = null\r\n      this.defaultsDiffer = false\r\n      await this.save()\r\n    } catch (error) {\r\n      this.defaultsCombo = fallbackCombo\r\n      this.defaultsDiffer = true\r\n      console.error(error)\r\n      return Promise.reject(error)\r\n    }\r\n  }\r\n\r\n  public save (): Promise<void> {\r\n    const newAClGraph = graph()\r\n    if (!this.isContainer) {\r\n      makeACLGraphbyCombo(newAClGraph, this.targetDoc, this.mainCombo.byCombo, this.targetACLDoc, true)\r\n    } else if (this.defaultsCombo && this.defaultsDiffer) {\r\n      // Pair of controls\r\n      makeACLGraphbyCombo(newAClGraph, this.targetDoc, this.mainCombo.byCombo, this.targetACLDoc, true)\r\n      makeACLGraphbyCombo(newAClGraph, this.targetDoc, this.defaultsCombo.byCombo, this.targetACLDoc, false, true)\r\n    } else {\r\n      // Linked controls\r\n      makeACLGraphbyCombo(newAClGraph, this.targetDoc, this.mainCombo.byCombo, this.targetACLDoc, true, true)\r\n    }\r\n    const updater = newAClGraph.updater || new UpdateManager(newAClGraph)\r\n    return new Promise((resolve, reject) => updater.put(\r\n      this.targetACLDoc,\r\n      newAClGraph.statementsMatching(undefined, undefined, undefined, this.targetACLDoc),\r\n      'text/turtle',\r\n      (uri, ok, message) => {\r\n        if (!ok) {\r\n          return reject(new Error(`ACL file save failed: ${message}`))\r\n        }\r\n        this.store.fetcher.unload(this.targetACLDoc)\r\n        this.store.add(newAClGraph.statements)\r\n        this.store.fetcher.requested[this.targetACLDoc.uri] = 'done' // missing: save headers\r\n        this.mainCombo.store = this.store\r\n        if (this.defaultsCombo) {\r\n          this.defaultsCombo.store = this.store\r\n        }\r\n        this.defaultsDiffer = !!this.defaultsCombo && !sameACL(this.mainCombo.aclMap, this.defaultsCombo.aclMap)\r\n        console.log('ACL modification: success!')\r\n        resolve()\r\n      }\r\n    ))\r\n  }\r\n}\r\n"],"file":"access-controller.js"}