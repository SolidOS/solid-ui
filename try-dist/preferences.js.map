{"version":3,"sources":["../src/preferences.js"],"names":["kb","require","ns","authn","widgets","pad","module","exports","value","get","k","set","v","console","log","Error","renderPreferencesForm","recordSharedPreferences","getPreferencesForClass","subject","context","Promise","resolve","reject","sharedPreferences","any","ui","sp","$rdf","sym","doc","uri","ins","st","updater","update","ok","errorMessage","recordPersonalDefaults","klass","logInLoadPreferences","then","preferencesFile","preferencesFileError","regs","each","solid","prefs","reg","length","forEach","r","personalDefaults","newThing","rdf","push","errm","err","preferencesForm","prefContainer","dom","createElement","participationObject","me","participation","heading","text","appendChild","textContent","noun","appendForm","mes","complain","errorMessageBlock","toJS","term","datatype","equals","xsd","Date","Number","predicates","results","pred","v1"],"mappings":"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","sourcesContent":["/* global $rdf */\r\n//                  Solid-UI temporary preferences\r\n//                  ==============================\r\n//\r\nconst kb = require('./store')\r\nconst ns = require('./ns')\r\nconst authn = require('./authn/authn')\r\nconst widgets = require('./widgets')\r\nconst pad = require('./pad')\r\n\r\n// This was tabulator . preferences in the tabulator\r\n//\r\nmodule.exports = {\r\n  // used for storing user name\r\n  value: [],\r\n  get: function (k) {\r\n    // original\r\n    return this.value[k]\r\n  },\r\n  set: function (k, v) {\r\n    if (typeof v !== 'string') {\r\n      console.log('Non-string value of preference ' + k + ': ' + v)\r\n      throw new Error('Non-string value of preference ' + k + ': ' + v)\r\n    }\r\n    this.value[k] = v\r\n  },\r\n  renderPreferencesForm,\r\n  recordSharedPreferences,\r\n  getPreferencesForClass\r\n}\r\n// In a solid world, Preferences are stored in the web\r\n//\r\n// Make an RDF node for recording the common view preferences for any object\r\n// (maybe make it in a separate file?)\r\nfunction recordSharedPreferences (subject, context) {\r\n  return new Promise(function (resolve, reject) {\r\n    var sharedPreferences = kb.any(subject, ns.ui('sharedPreferences'))\r\n    if (!sharedPreferences) {\r\n      const sp = $rdf.sym(subject.doc().uri + '#SharedPreferences')\r\n      const ins = [\r\n        $rdf.st(subject, ns.ui('sharedPreferences'), sp, subject.doc())\r\n      ]\r\n      console.log('Creating shared preferences ' + sp)\r\n      kb.updater.update([], ins, function (uri, ok, errorMessage) {\r\n        if (!ok) {\r\n          reject(new Error('Error creating shared prefs: ' + errorMessage))\r\n        } else {\r\n          context.sharedPreferences = sp\r\n          resolve(context)\r\n        }\r\n      })\r\n    } else {\r\n      context.sharedPreferences = sharedPreferences\r\n      resolve(context)\r\n    }\r\n  })\r\n}\r\n\r\n// Construct a personal defaults node in the preferences file for a given class of object\r\n//\r\nfunction recordPersonalDefaults (klass, context) {\r\n  return new Promise(function (resolve, reject) {\r\n    authn.logInLoadPreferences(context).then(\r\n      context => {\r\n        if (!context.preferencesFile) {\r\n          console.log(\r\n            'Not doing private class preferences as no access to preferences file. ' +\r\n              context.preferencesFileError\r\n          )\r\n          return\r\n        }\r\n        var regs = kb.each(\r\n          null,\r\n          ns.solid('forClass'),\r\n          klass,\r\n          context.preferencesFile\r\n        )\r\n        var ins = []\r\n        var prefs\r\n        var reg\r\n        if (regs.length) {\r\n          // Use existing node if we can\r\n          regs.forEach(r => {\r\n            prefs = prefs || kb.any(r, ns.solid('personalDefaults'))\r\n          })\r\n          if (prefs) {\r\n            context.personalDefaults = prefs // Found one\r\n            resolve(context)\r\n            return\r\n          } else {\r\n            prefs = widgets.newThing(context.preferencesFile)\r\n            reg = regs[0]\r\n          }\r\n        } else {\r\n          // no regs fo class\r\n          reg = widgets.newThing(context.preferencesFile)\r\n          ins = [\r\n            $rdf.st(\r\n              reg,\r\n              ns.rdf('type'),\r\n              ns.solid('TypeRegistration'),\r\n              context.preferencesFile\r\n            ),\r\n            $rdf.st(reg, ns.solid('forClass'), klass, context.preferencesFile)\r\n          ]\r\n        }\r\n        prefs = widgets.newThing(context.preferencesFile)\r\n        ins.push(\r\n          $rdf.st(\r\n            reg,\r\n            ns.solid('personalDefaults'),\r\n            prefs,\r\n            context.preferencesFile\r\n          )\r\n        )\r\n        kb.updater.update([], ins, function (uri, ok, errm) {\r\n          if (!ok) {\r\n            reject(new Error('Setting preferences for ' + klass + ': ' + errm))\r\n          } else {\r\n            context.personalDefaults = prefs\r\n            resolve(context)\r\n          }\r\n        })\r\n      },\r\n      err => {\r\n        reject(err)\r\n      }\r\n    )\r\n  })\r\n}\r\n\r\nfunction renderPreferencesForm (subject, klass, preferencesForm, context) {\r\n  var prefContainer = context.dom.createElement('div')\r\n  pad.participationObject(subject, subject.doc(), context.me).then(\r\n    participation => {\r\n      const dom = context.dom\r\n      function heading (text) {\r\n        prefContainer.appendChild(dom.createElement('h5')).textContent = text\r\n      }\r\n      heading('My view of this ' + context.noun)\r\n      widgets.appendForm(\r\n        dom,\r\n        prefContainer,\r\n        {},\r\n        participation,\r\n        preferencesForm,\r\n        subject.doc(),\r\n        (ok, mes) => {\r\n          if (!ok) widgets.complain(context, mes)\r\n        }\r\n      )\r\n\r\n      heading(\"Everyone's  view of this \" + context.noun)\r\n      recordSharedPreferences(subject, context).then(context => {\r\n        var sharedPreferences = context.sharedPreferences\r\n        widgets.appendForm(\r\n          dom,\r\n          prefContainer,\r\n          {},\r\n          sharedPreferences,\r\n          preferencesForm,\r\n          subject.doc(),\r\n          (ok, mes) => {\r\n            if (!ok) widgets.complain(context, mes)\r\n          }\r\n        )\r\n\r\n        heading('My default view of any ' + context.noun)\r\n        recordPersonalDefaults(klass, context).then(\r\n          context => {\r\n            widgets.appendForm(\r\n              dom,\r\n              prefContainer,\r\n              {},\r\n              context.personalDefaults,\r\n              preferencesForm,\r\n              context.preferencesFile,\r\n              (ok, mes) => {\r\n                if (!ok) widgets.complain(context, mes)\r\n              }\r\n            )\r\n          },\r\n          err => {\r\n            widgets.complain(context, err)\r\n          }\r\n        )\r\n      })\r\n    },\r\n    err => {\r\n      // parp object fails\r\n      prefContainer.appendChild(widgets.errorMessageBlock(context.dom, err))\r\n    }\r\n  )\r\n  return prefContainer\r\n}\r\n\r\n// This should be part of rdflib.js ad part of the RDFJS Standard!!\r\n\r\nfunction toJS (term) {\r\n  if (!term.datatype) return term // Objects remain objects\r\n  if (term.datatype.equals(ns.xsd('boolean'))) {\r\n    return term.value === '1'\r\n  }\r\n  if (\r\n    term.datatype.equals(ns.xsd('dateTime')) ||\r\n    term.datatype.equals(ns.xsd('date'))\r\n  ) {\r\n    return new Date(term.value)\r\n  }\r\n  if (\r\n    term.datatype.equals(ns.xsd('integer')) ||\r\n    term.datatype.equals(ns.xsd('float')) ||\r\n    term.datatype.equals(ns.xsd('decimal'))\r\n  ) {\r\n    return Number(term.value)\r\n  }\r\n  return term.value\r\n}\r\n\r\n// This is the function which acuakly reads and combines the preferences\r\n//\r\n//  @@ make it much more tolerant of missing buts of prefernces\r\nfunction getPreferencesForClass (subject, klass, predicates, context) {\r\n  return new Promise(function (resolve, reject) {\r\n    recordSharedPreferences(subject, context).then(context => {\r\n      var sharedPreferences = context.sharedPreferences\r\n      if (context.me) {\r\n        pad\r\n          .participationObject(subject, subject.doc(), context.me)\r\n          .then(participation => {\r\n            recordPersonalDefaults(klass, context).then(context => {\r\n              var results = []\r\n              var personalDefaults = context.personalDefaults\r\n              predicates.forEach(pred => {\r\n                // Order of preference: My settings on object, Global settings on object, my settings on class\r\n                const v1 =\r\n                  kb.any(participation, pred) ||\r\n                  kb.any(sharedPreferences, pred) ||\r\n                  kb.any(personalDefaults, pred)\r\n                if (v1) {\r\n                  results[pred.uri] = toJS(v1)\r\n                }\r\n              })\r\n              resolve(results)\r\n            }, reject)\r\n          }, reject)\r\n      } else {\r\n        // no user defined, just use common prefs\r\n        var results = []\r\n        predicates.forEach(pred => {\r\n          const v1 = kb.any(sharedPreferences, pred)\r\n          if (v1) {\r\n            results[pred.uri] = toJS(v1)\r\n          }\r\n        })\r\n        resolve(results)\r\n      }\r\n    })\r\n  })\r\n}\r\n\r\n// ends\r\n"],"file":"preferences.js"}