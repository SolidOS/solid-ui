{"version":3,"file":"log.js","names":["TERROR","TWARN","TMESG","TSUCCESS","TINFO","TDEBUG","TALL","LogLevel","exports","_level","_ascending","_dom","document","_window","window","log","str","type","arguments","length","undefined","typestr","logArea","getElementById","addendum","createElement","setAttribute","now","Date","innerHTML","concat","getHours","getMinutes","getSeconds","escapeForXML","insertBefore","firstChild","appendChild","console","msg","message","warn","debug","info","error","success","alert","clear","_dom2","setLevel","level","dumpHTML","_dom3","body","logAscending","logDescending","replace","setInternals"],"sources":["../src/log.ts"],"sourcesContent":["// ///////////////////////  Logging\n//\n// bitmask levels\n// const TNONE = 0\n/** @internal */\nconst TERROR = 1\n/** @internal */\nconst TWARN = 2\n/** @internal */\nconst TMESG = 4\n/** @internal */\nconst TSUCCESS = 8\n/** @internal */\nconst TINFO = 16\n/** @internal */\nconst TDEBUG = 32\n/** @internal */\nconst TALL = 63\n\n/** @internal */\nexport enum LogLevel {\n  Error = TERROR,\n  Warning = TWARN,\n  Message = TMESG,\n  Success = TSUCCESS,\n  Info = TINFO,\n  Debug = TDEBUG,\n  All = TALL\n}\n\n/** @internal */\nlet _level: number = TERROR + TWARN + TMESG\n/** @internal */\nlet _ascending: boolean = false\n/** @internal */\nlet _dom: HTMLDocument = document // must be able to override for tests\n/** @internal */\nlet _window: Window = window // must be able to override for tests\n\n/** @internal */\nfunction log (str: string, type: number = TMESG, typestr: string = 'mesg') {\n  if (!(_level & type)) return // bitmask\n\n  if (typeof _dom !== 'undefined') {\n    const logArea = _dom.getElementById('status')\n    if (!logArea) return\n\n    const addendum = _dom.createElement('span')\n    addendum.setAttribute('class', typestr)\n    const now = new Date()\n    addendum.innerHTML = `${now.getHours()}:${now.getMinutes()}:${now.getSeconds()} [${typestr}] ${escapeForXML(str)}<br/>`\n    if (_ascending) {\n      logArea.insertBefore(addendum, logArea.firstChild)\n    } else {\n      logArea.appendChild(addendum)\n    }\n  } else if (typeof console !== 'undefined') {\n    // eslint-disable-next-line no-console\n    console.log(str)\n  }\n}\n\n/**\n * Adds a message to the element with id \"status\". The messages are prepended with\n * time and type of message, in this case [mesg].\n */\nexport function msg (message: string) {\n  log(message)\n}\n\n/**\n * Adds a warning message to the element with id \"status\". The messages are\n * prepended with time and type of message, in this case [warn].\n */\nexport function warn (message: string): void {\n  log(message, TWARN, 'warn')\n}\n\n/**\n * Adds a debugging message to the element with id \"status\". The messages are\n * prepended with time and type of message, in this case [dbug].\n */\nexport function debug (message: string): void {\n  log(message, TDEBUG, 'dbug')\n}\n\n/**\n * Adds a info message to the element with id \"status\". The messages are\n * prepended with time and type of message, in this case [info].\n */\nexport function info (message: string): void {\n  log(message, TINFO, 'info')\n}\n\n/**\n * Adds a error to the element with id \"status\". The messages are\n * prepended with time and type of message, in this case [eror].\n */\nexport function error (message: string): void {\n  log(message, TERROR, 'eror')\n}\n\n/**\n * Adds a success message to the element with id \"status\". The messages are\n * prepended with time and type of message, in this case [good].\n */\nexport function success (message: string): void {\n  log(message, TSUCCESS, 'good')\n}\n\n/**\n * Uses the global alert to send an alert. If global alert is not available, it\n * will output the message using the method [[warning]]s.\n */\nexport function alert (message: string): void {\n  if (_window && typeof _window.alert !== 'undefined') {\n    _window.alert(message)\n  } else {\n    warn(message)\n  }\n}\n\n/**\n * Will clear the content of the element with id \"status\".\n */\nexport function clear (): void {\n  const logArea = _dom?.getElementById('status')\n  if (!logArea) return\n  logArea.innerHTML = ''\n}\n\n/**\n * Lets you configure which types of messages will be shown. The module uses\n * [bitmask](https://en.wikipedia.org/wiki/Mask_(computing)) to filter which\n * types of messages should be shown. E.g. if you only want warning messages\n * to be shown, pass 2 to the function, if you want warning and success to be\n * shown, pass 10 (2+8). By passing the sum of all, 63, you'll show all\n * types of messages.\n *\n * - Error: 1\n * - Warning: 2\n * - Message: 4\n * - Success: 8\n * - Info: 16\n * - Debug: 32\n */\nexport function setLevel (level: number): void {\n  _level = TALL\n  debug('Log level is now ' + level)\n  _level = level\n}\n\n/**\n * Will dump the current HTML using the [[debug]] method.\n */\nexport function dumpHTML (): void {\n  if (!_dom) return\n  const level = _level\n  _level = TALL\n  debug(_dom?.body?.innerHTML || '')\n  _level = level\n}\n\n/**\n * Will start prepending messages the list of log messages.\n */\nexport function logAscending () {\n  _ascending = true\n}\n\n/**\n * Will start appending messages the list of log messages. (This is default\n * behavior.)\n */\nexport function logDescending () {\n  _ascending = false\n}\n\n/** @internal */\nexport function escapeForXML (str: string): string {\n  // can be replaced with function utils module when migrating\n  return str\n    .replace(/&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n}\n\n/** @internal */\nexport function setInternals (window, document) {\n  _window = window\n  _dom = document\n}\n"],"mappings":"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","ignoreList":[]}