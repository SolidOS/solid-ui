{"version":3,"file":"preferences.js","names":["$rdf","_interopRequireWildcard","require","_solidLogic","debug","_login","ns","participation","widgets","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","_typeof","has","get","set","_t","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","kb","store","value","exports","k","v","log","Error","recordSharedPreferences","subject","context","Promise","resolve","reject","sharedPreferences","any","ui","updater","editable","doc","concat","sp","sym","uri","ins","st","update","ok","errorMessage","recordPersonalDefaults","theClass","ensureLoadedPreferences","then","preferencesFile","preferencesFileError","regs","each","solid","prefs","reg","length","forEach","personalDefaults","newThing","rdf","push","errm","err","renderPreferencesForm","preferencesForm","prefContainer","dom","createElement","participationObject","me","heading","text","appendChild","textContent","noun","appendForm","mes","complain","errorMessageBlock","toJS","term","datatype","equals","xsd","Date","Number","getPreferencesForClass","predicates","results","pred","v1"],"sources":["../src/preferences.js"],"sourcesContent":["//                  Solid-UI preferences\n//                  =====================\n//\n\nimport * as $rdf from 'rdflib' // pull in first avoid cross-refs\nimport { store } from 'solid-logic'\nimport * as debug from './debug'\nimport { ensureLoadedPreferences } from './login/login'\nimport * as ns from './ns'\nimport * as participation from './participation' // @ts-ignore\nimport * as widgets from './widgets'\n\nconst kb = store\n\n// This was tabulator . preferences in the tabulator\n//  Is this functionality used anywhere?\n//\n\n// used for storing user name\n// @@ Deprocate these functions.  They were used for\n// communication around the tabulator functionality about the user session\n\nexport const value = []\nexport function get (k) {\n  return value[k]\n}\n\nexport function set (k, v) {\n  if (typeof v !== 'string') {\n    debug.log('Non-string value of preference ' + k + ': ' + v)\n    throw new Error('Non-string value of preference ' + k + ': ' + v)\n  }\n  this.value[k] = v\n}\n\n// In a solid world, Preferences are stored in the web\n//\n// Make an RDF node for recording the common view preferences for any object\n// (maybe make it in a separate file?)\nexport function recordSharedPreferences (subject, context) {\n  return new Promise(function (resolve, reject) {\n    const sharedPreferences = kb.any(subject, ns.ui('sharedPreferences'))\n    if (!sharedPreferences) {\n      if (!kb.updater.editable(subject.doc())) {\n        debug.log(` Cant make shared preferences, may not change ${subject.doc}`)\n        resolve(context)\n      }\n      const sp = $rdf.sym(subject.doc().uri + '#SharedPreferences')\n      const ins = [\n        $rdf.st(subject, ns.ui('sharedPreferences'), sp, subject.doc())\n      ]\n      debug.log('Creating shared preferences ' + sp)\n      kb.updater.update([], ins, function (uri, ok, errorMessage) {\n        if (!ok) {\n          reject(new Error('Error creating shared prefs: ' + errorMessage))\n        } else {\n          context.sharedPreferences = sp\n          resolve(context)\n        }\n      })\n    } else {\n      context.sharedPreferences = sharedPreferences\n      resolve(context)\n    }\n  })\n}\n\n// Construct a personal defaults node in the preferences file for a given class of object\n//\nexport function recordPersonalDefaults (theClass, context) {\n  return new Promise(function (resolve, reject) {\n    ensureLoadedPreferences(context).then(\n      context => {\n        if (!context.preferencesFile) {\n          debug.log(\n            'Not doing private class preferences as no access to preferences file. ' +\n              context.preferencesFileError\n          )\n          return\n        }\n        const regs = kb.each(\n          null,\n          ns.solid('forClass'),\n          theClass,\n          context.preferencesFile\n        )\n        let ins = []\n        let prefs\n        let reg\n        if (regs.length) {\n          // Use existing node if we can\n          regs.forEach(r => {\n            prefs = prefs || kb.any(r, ns.solid('personalDefaults'))\n          })\n          if (prefs) {\n            context.personalDefaults = prefs // Found one\n            resolve(context)\n            return\n          } else {\n            prefs = widgets.newThing(context.preferencesFile)\n            reg = regs[0]\n          }\n        } else {\n          // no regs fo class\n          reg = widgets.newThing(context.preferencesFile)\n          ins = [\n            $rdf.st(\n              reg,\n              ns.rdf('type'),\n              ns.solid('TypeRegistration'),\n              context.preferencesFile\n            ),\n            $rdf.st(reg, ns.solid('forClass'), theClass, context.preferencesFile)\n          ]\n        }\n        prefs = widgets.newThing(context.preferencesFile)\n        ins.push(\n          $rdf.st(\n            reg,\n            ns.solid('personalDefaults'),\n            prefs,\n            context.preferencesFile\n          )\n        )\n        kb.updater.update([], ins, function (uri, ok, errm) {\n          if (!ok) {\n            reject(new Error('Setting preferences for ' + theClass + ': ' + errm))\n          } else {\n            context.personalDefaults = prefs\n            resolve(context)\n          }\n        })\n      },\n      err => {\n        reject(err)\n      }\n    )\n  })\n}\n\nexport function renderPreferencesForm (subject, theClass, preferencesForm, context) {\n  const prefContainer = context.dom.createElement('div')\n  participation.participationObject(subject, subject.doc(), context.me).then(\n    participation => {\n      const dom = context.dom\n      function heading (text) {\n        prefContainer.appendChild(dom.createElement('h5')).textContent = text\n      }\n      heading('My view of this ' + context.noun)\n      widgets.appendForm(\n        dom,\n        prefContainer,\n        {},\n        participation,\n        preferencesForm,\n        subject.doc(),\n        (ok, mes) => {\n          if (!ok) widgets.complain(context, mes)\n        }\n      )\n\n      heading(\"Everyone's  view of this \" + context.noun)\n      recordSharedPreferences(subject, context).then(context => {\n        const sharedPreferences = context.sharedPreferences\n        widgets.appendForm(\n          dom,\n          prefContainer,\n          {},\n          sharedPreferences,\n          preferencesForm,\n          subject.doc(),\n          (ok, mes) => {\n            if (!ok) widgets.complain(context, mes)\n          }\n        )\n\n        heading('My default view of any ' + context.noun)\n        recordPersonalDefaults(theClass, context).then(\n          context => {\n            widgets.appendForm(\n              dom,\n              prefContainer,\n              {},\n              context.personalDefaults,\n              preferencesForm,\n              context.preferencesFile,\n              (ok, mes) => {\n                if (!ok) widgets.complain(context, mes)\n              }\n            )\n          },\n          err => {\n            widgets.complain(context, err)\n          }\n        )\n      })\n    },\n    err => {\n      // parp object fails\n      prefContainer.appendChild(widgets.errorMessageBlock(context.dom, err))\n    }\n  )\n  return prefContainer\n}\n\n// This should be part of rdflib.js ad part of the RDFJS Standard!!\n\nfunction toJS (term) {\n  if (!term.datatype) return term // Objects remain objects\n  if (term.datatype.equals(ns.xsd('boolean'))) {\n    return term.value === '1'\n  }\n  if (\n    term.datatype.equals(ns.xsd('dateTime')) ||\n    term.datatype.equals(ns.xsd('date'))\n  ) {\n    return new Date(term.value)\n  }\n  if (\n    term.datatype.equals(ns.xsd('integer')) ||\n    term.datatype.equals(ns.xsd('float')) ||\n    term.datatype.equals(ns.xsd('decimal'))\n  ) {\n    return Number(term.value)\n  }\n  return term.value\n}\n\n// This is the function which acuakly reads and combines the preferences\n//\n//  @@ make it much more tolerant of missing buts of prefernces\nexport function getPreferencesForClass (subject, theClass, predicates, context) {\n  return new Promise(function (resolve, reject) {\n    recordSharedPreferences(subject, context).then(context => {\n      const sharedPreferences = context.sharedPreferences\n      if (context.me) {\n        participation\n          .participationObject(subject, subject.doc(), context.me)\n          .then(participation => {\n            recordPersonalDefaults(theClass, context).then(context => {\n              const results = []\n              const personalDefaults = context.personalDefaults\n              predicates.forEach(pred => {\n                // Order of preference: My settings on object, Global settings on object, my settings on class\n                const v1 =\n                  kb.any(participation, pred) ||\n                  kb.any(sharedPreferences, pred) ||\n                  kb.any(personalDefaults, pred)\n                if (v1) {\n                  results[pred.uri] = toJS(v1)\n                }\n              })\n              resolve(results)\n            }, reject)\n          }, reject)\n      } else {\n        // no user defined, just use common prefs\n        const results = []\n        predicates.forEach(pred => {\n          const v1 = kb.any(sharedPreferences, pred)\n          if (v1) {\n            results[pred.uri] = toJS(v1)\n          }\n        })\n        resolve(results)\n      }\n    })\n  })\n}\n\n// ends\n"],"mappings":"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","ignoreList":[]}