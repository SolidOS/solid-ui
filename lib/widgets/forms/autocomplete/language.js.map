{"version":3,"file":"language.js","names":["debug","_interopRequireWildcard","require","_solidLogic","ns","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","_typeof","has","get","set","_t","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","languageCodeURIBase","exports","defaultPreferredLanguages","addDefaults","array","concat","filter","code","includes","getPreferredLanguagesFor","_x","_getPreferredLanguagesFor","apply","arguments","_asyncToGenerator2","_regenerator","mark","_callee","person","_store$fetcher","doc","list","languageCodeArray","wrap","_context","prev","next","store","fetcher","load","any","schema","abrupt","elements","forEach","item","lang","solid","console","warn","value","startsWith","error","slice","length","push","log","join","stop","getPreferredLanguages","_getPreferredLanguages","_callee2","me","solidLanguagePrefs","_context2","authn","currentUser","sent","navigator","languages","map","longForm","split","language","filterByLanguage","bindings","languagePrefs","uris","binding","uri","subject","languagePrefs2","reverse","slimmed","u","sortMe","name","index","indexOf","pair","sort"],"sources":["../../../../src/widgets/forms/autocomplete/language.ts"],"sourcesContent":["/* Logic to access public data stores\n*\n* including filtering resut by natural language etc\n* See https://solidos.solidcommunity.net/public/2021/01%20Building%20Solid%20Apps%20which%20use%20Public%20Data.html\n*/\n/* eslint-disable no-console */\nimport * as debug from '../../../debug'\n// import * as logic from '../index'\n// import { authn } from '../../../authn/index'\nimport { authn, store } from 'solid-logic'\nimport * as ns from '../../../ns'\nimport { Collection, NamedNode, Node } from 'rdflib'\n// import { Binding } from '../widgets/forms/autocomplete/publicData'\n// import { nativeNameForLanguageCode, englishNameForLanguageCode } from './nativeNameForLanguageCode'\n\n// const { currentUser } = logic.authn\n\nexport interface Binding {\n  subject: Node;\n  name?: Node\n  location?: Node\n  coordinates?: Node\n}\n\nexport const languageCodeURIBase = 'https://www.w3.org/ns/iana/language-code/' /// @@ unsupported on the web (2021)\n\nexport const defaultPreferredLanguages = ['en', 'fr', 'de', 'it', 'ar']\n\nexport function addDefaults (array) {\n  if (!array) array = []\n  return array.concat(defaultPreferredLanguages.filter(code => !array.includes(code)))\n}\n\nexport async function getPreferredLanguagesFor (person: NamedNode) {\n  const doc = person.doc()\n  await store.fetcher?.load(doc)\n  const list = store.any(person, ns.schema('knowsLanguage'), null, doc) as Collection | undefined\n  if (!list) {\n    // console.log(`User ${person} has not set their languages in their profile.`)\n    return defaultPreferredLanguages\n  }\n  const languageCodeArray: string[] = []\n  list.elements.forEach(item => {\n    // console.log('@@ item ' + item)\n    const lang = store.any(item as any, ns.solid('publicId'), null, doc)\n    if (!lang) {\n      console.warn('getPreferredLanguages: No publiID of language.')\n      return\n    }\n    if (!lang.value.startsWith(languageCodeURIBase)) {\n      console.error(`What should be a language code ${lang.value} does not start with ${languageCodeURIBase}`)\n      return\n    }\n    const code = lang.value.slice(languageCodeURIBase.length)\n    languageCodeArray.push(code)\n  })\n\n  if (languageCodeArray.length > 0) {\n    console.log(`     User knows languages with codes: \"${languageCodeArray.join(',')}\"`)\n    return addDefaults(languageCodeArray)\n  }\n  return null\n}\n/* Get the preferred langauges for the user\n *\n *  Either from solid preferences or browser preferences or default\n */\nexport async function getPreferredLanguages () {\n  // In future:  cache in the login session for speed, but get from profile and private prefs\n  // We append the defaults so if someone's first choice is not available they don't get something very obscure\n  // See https://github.com/solidos/solidos/issues/42\n  const me = await authn.currentUser() as NamedNode\n  if (me) { // If logged in\n    const solidLanguagePrefs = await getPreferredLanguagesFor(me)\n    if (solidLanguagePrefs) return solidLanguagePrefs\n  }\n  if (typeof navigator !== 'undefined') { // use browser settings\n    if (navigator.languages) {\n      return addDefaults(navigator.languages.map(longForm => longForm.split('-')[0]))\n    }\n    if (navigator.language) {\n      return addDefaults([navigator.language.split('-')[0]])\n    }\n  }\n  return defaultPreferredLanguages\n}\n\n/* From an array of bindings with a names for each row,\n * remove dupliacte names for the same thing, leaving the user's\n * preferred language version\n*/\n\nexport function filterByLanguage (bindings, languagePrefs) {\n  const uris = {}\n  bindings.forEach(binding => { // Organize names by their subject\n    const uri = binding.subject.value\n    uris[uri] = uris[uri] || []\n    uris[uri].push(binding)\n  })\n\n  const languagePrefs2 = languagePrefs || defaultPreferredLanguages\n  languagePrefs2.reverse() // Preferred last\n\n  const slimmed = ([] as Array<Binding>)\n  // console.log(` @@ {languagePrefs2 ${languagePrefs2}`)\n  for (const u in uris) { // needs hasOwnProperty ?\n    const bindings = uris[u]\n    const sortMe = bindings.map(binding => {\n      const lang = binding.name['xml:lang']\n      const index = languagePrefs2.indexOf(lang)\n      const pair = [index, binding]\n      // console.log(`   @@ lang: ${lang}, index: ${index}`)\n      return pair\n    })\n    sortMe.sort() // best at th ebottom\n    sortMe.reverse() // best at the top\n    // console.debug('@@ sortMe:', sortMe)\n    slimmed.push((sortMe[0][1] as any))\n  } // map u\n  debug.log(` Filter by language: ${bindings.length} -> ${slimmed.length}`)\n  return slimmed\n}\n"],"mappings":"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","ignoreList":[]}