{"version":3,"file":"autocompleteField.js","names":["ns","_interopRequireWildcard","require","_solidLogic","widgets","style","_autocompleteBar","_rdflib","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","_typeof","has","get","set","_t3","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","autocompleteField","dom","container","already","subject","form","doc","callbackFunction","_kb$updater","addOneIdAndRefresh","_x","_x2","_addOneIdAndRefresh","apply","arguments","_asyncToGenerator2","_regenerator","mark","_callee","result","name","oldValue","oldName","deletables","insertables","_kb$updater2","_t","wrap","_context","prev","next","Error","kb","the","property","any","labelProperty","equals","sameTerm","abrupt","statementsMatching","concat","st","updater","updateMany","box","appendChild","errorMessageBlock","stop","deleteOne","_x3","_x4","_deleteOne","_callee2","_result","_name","_kb$updater3","e2","_t2","_context2","termType","store","formDoc","createElement","lhs","setAttribute","formFieldNameBoxStyle","rhs","ui","schema","dataSource","queryParams","label","anyJS","logo","targetClass","objectURIBase","undefined","endpoint","searchByNameQuery","insitituteDetailsQuery","searchByNameURI","suppressEmptyUneditable","editable","uri","autocompleteOptions","permanent","size","obj","currentObject","currentName","display","fieldLabel","barOptions","dbLookup","renderAutocompleteControl","then","control","err"],"sources":["../../../../src/widgets/forms/autocomplete/autocompleteField.ts"],"sourcesContent":["/* Form field for doing autocompleete\n */\nimport * as ns from '../../../ns'\nimport { store } from 'solid-logic'\nimport * as widgets from '../../../widgets'\nimport * as style from '../../../style'\nimport { renderAutocompleteControl } from './autocompleteBar'\nimport { QueryParameters } from './publicData'\nimport { NamedNode, BlankNode, Literal, Variable, st } from 'rdflib'\nimport { AutocompleteOptions } from './autocompletePicker'\n/**\n  * Render a autocomplete form field\n  *\n  * The autocomplete form searches for an object in a definitive public database,\n  * and allows the user to search for it by name, displaying a list of objects whose names match\n  * the input to date, and letting  the user either click on one of the list,\n  * or just go on untill there is only one.  The process then returns two values,\n  * the URiI of the object and its name.\n  *\n  * @param dom The HTML Document object aka Document Object Model\n  * @param container  If present, the created widget will be appended to this\n  * @param already A hash table of (form, subject) kept to prevent recursive forms looping\n  * @param subject The thing about which the form displays/edits data\n  * @param form The form or field to be rendered\n  * @param doc The web document in which the data is\n  * @param callbackFunction Called when data is changed so other parts can be refreshed.\n  *\n  * Form properties:\n  * @param ui:property  The property to store the object itself\n  * @param ui:labelProperty The property used to store the name of the object\n  * @param ui:category The class of objects to be searched, if fixed (else dep on class of subject)\n  *\n  * @returns The HTML widget created\n */\n// eslint-disable-next-line complexity\nexport function autocompleteField (\n  dom: HTMLDocument,\n  container: HTMLElement | undefined,\n  already,\n  subject: NamedNode | BlankNode | Variable,\n  form: NamedNode,\n  doc: NamedNode | undefined,\n  callbackFunction: (_ok: boolean, _errorMessage: string) => void\n): HTMLElement {\n  async function addOneIdAndRefresh (result:NamedNode | Literal, name: Literal) {\n    if (!name) {\n      throw new Error('autocompleteField:  No name set.')\n    }\n    const oldValue = kb.the(subject, property as any, null, doc)\n    if (oldValue) {\n      const oldName = kb.any(oldValue as any, labelProperty as any, null, doc)\n      if (oldValue.equals(result) && oldName && oldName.sameTerm(name)) {\n        // console.log('No change: same values.')\n        return\n      }\n    }\n    const deletables = oldValue\n      ? kb.statementsMatching(subject, property as any, oldValue, doc)\n        .concat(kb.statementsMatching(oldValue as any, labelProperty as any, null, doc))\n      : []\n    // console.log('autocompleteField Deletables ' + deletables.map(st => st.toNT()))\n    const insertables = [st(subject, property as any, result, doc),\n      st(result as any, labelProperty as any, name, doc)] // @@ track the language of the  name too!\n    // console.log(`AC form: ${deletables.length} to delete and ${insertables.length} to insert`)\n    try {\n      // console.log('@@@ AC updating ', deletables, insertables)\n      await kb.updater?.updateMany(deletables, insertables)\n    } catch (err) {\n      callbackFunction(false, err)\n      box.appendChild(widgets.errorMessageBlock(dom, 'Autocomplete form data update error:' + err, null, err))\n      return\n    }\n    callbackFunction(true, '')\n  }\n\n  async function deleteOne (_result:NamedNode | Literal, _name: Literal) {\n    const oldValue = kb.the(subject, property as any, null, doc)\n    if (!oldValue) {\n      callbackFunction(false, 'NO data to elete')\n      box.appendChild(widgets.errorMessageBlock(dom, 'Autocomplete delete: no old data!'))\n      return\n    }\n    // const oldName = kb.any(oldValue as any, labelProperty as any, null, doc)\n    const deletables = kb.statementsMatching(subject, property as any, oldValue, doc)\n      .concat(kb.statementsMatching(oldValue as any, labelProperty as any, null, doc))\n    // console.log('autocompleteField Deletables ' + deletables.map(st => st.toNT()))\n    const insertables = []\n    // console.log(`AC form delete: ${deletables.length} to delete and ${insertables.length} to insert`)\n    try {\n      // console.log('@@@ AC updating ', deletables, insertables)\n      await kb.updater?.updateMany(deletables, insertables)\n    } catch (err) {\n      const e2 = new Error('Autocomplete form data delete error:' + err)\n      callbackFunction(false, err)\n      box.appendChild(widgets.errorMessageBlock(dom, e2, null, err))\n      return\n    }\n    callbackFunction(true, '') // changed\n  }\n\n  if (subject.termType !== 'NamedNode') {\n    throw new Error('Sorry this field only works on NamedNode subjects (for editable)')\n  }\n  const kb = store\n  const formDoc = form.doc ? form.doc() : null // @@ if blank no way to know\n\n  const box = dom.createElement('div')\n  if (container) container.appendChild(box)\n  const lhs = dom.createElement('div')\n  lhs.setAttribute('class', 'formFieldName')\n  lhs.setAttribute('style', style.formFieldNameBoxStyle)\n  box.appendChild(lhs)\n  const rhs = dom.createElement('div')\n  rhs.setAttribute('class', 'formFieldValue')\n  box.appendChild(rhs)\n\n  const property = kb.any(form, ns.ui('property'))\n  if (!property) {\n    return box.appendChild(\n      widgets.errorMessageBlock(dom, 'Error: No property given for autocomplete field: ' + form)\n    )\n  }\n  const labelProperty = kb.any(form, ns.ui('labelProperty')) || ns.schema('name')\n\n  // Parse the data source into query options\n\n  const dataSource = kb.any(form, ns.ui('dataSource')) as NamedNode | undefined\n  if (!dataSource) {\n    // console.log('@@ connectedStatements ACF ', kb.connectedStatements(form).map(x => x.toNT()).join('\\n'))\n    return box.appendChild(\n      widgets.errorMessageBlock(dom, 'Error: No data source given for autocomplete field: ' + form)\n    )\n  }\n  const queryParams:QueryParameters = {\n    // targetClass: kb.any(dataSource, ns.ui('targetClass'), null, dataSource.doc()) as NamedNode | undefined,\n    label: kb.anyJS(dataSource, ns.schema('name'), null, dataSource.doc()),\n    logo: (kb.any(dataSource, ns.schema('logo'), null, dataSource.doc())) as NamedNode | undefined\n  }\n\n  // @@ Should we pass the target class in from the data source definition or use a current type of the subject\n  const targetClass = (kb.any(form, ns.ui('targetClass'), null, form.doc()) || // class in form takes pecedence\n      kb.any(dataSource, ns.ui('targetClass'), null, dataSource.doc())) as NamedNode | undefined\n  if (targetClass) {\n    queryParams.targetClass = targetClass\n  }\n\n  queryParams.objectURIBase = (kb.any(dataSource, ns.ui('objectURIBase'), null, dataSource.doc()) || undefined) as NamedNode | undefined\n\n  /*\n  if (!queryParams.targetClass) {\n    const klass = kb.any(subject, ns.rdf('type')) as NamedNode | undefined\n    // @@ be more selective of which class if many\n    // @@ todo: Take ALL classes,  and compare them with those the data source knows about\n    // with translation where necessary.  Find most specific of the classes for the search.\n    if (!klass) throw new Error('Autocomplete: No class specified or is current type of' + subject)\n    queryParams.targetClass = klass\n  }\n  */\n  const endpoint = kb.anyJS(dataSource, ns.ui('endpoint'), null, dataSource.doc()) as string | undefined\n  if (endpoint) { // SPARQL\n    queryParams.endpoint = endpoint\n\n    queryParams.searchByNameQuery = kb.anyJS(dataSource, ns.ui('searchByNameQuery'), null, dataSource.doc())\n    if (!queryParams.searchByNameQuery) {\n      return box.appendChild(\n        widgets.errorMessageBlock(dom, 'Error: No searchByNameQuery given for endpoint data Source: ' + form))\n    }\n    queryParams.insitituteDetailsQuery = kb.anyJS(dataSource, ns.ui('insitituteDetailsQuery'), null, dataSource.doc())\n  } else {\n    // return box.appendChild(\n    //  widgets.errorMessageBlock(dom, 'Error: No SPARQL endpoint given for autocomplete field: ' + form))\n    const searchByNameURI = kb.anyJS(dataSource, ns.ui('searchByNameURI'))\n    if (!searchByNameURI) {\n      return box.appendChild(\n        widgets.errorMessageBlock(dom, 'Error: No searchByNameURI OR sparql endpoint given for dataSource: ' + dataSource)\n      )\n    }\n    queryParams.searchByNameURI = searchByNameURI\n  }\n  // It can be cleaner to just remove empty fields if you can't edit them anyway\n  const suppressEmptyUneditable = kb.anyJS(form, ns.ui('suppressEmptyUneditable'), null, formDoc)\n  const editable = kb.updater?.editable((doc as NamedNode).uri)\n\n  const autocompleteOptions:AutocompleteOptions = { // cancelButton?: HTMLElement,\n    permanent: true,\n    targetClass: queryParams.targetClass, // @@ simplify?\n    queryParams\n  }\n\n  autocompleteOptions.size = kb.anyJS(form, ns.ui('size'), null, formDoc) || undefined\n\n  let obj = kb.any(subject, property as any, undefined, doc)\n  if (!obj) {\n    obj = kb.any(form, ns.ui('default'))\n    if (obj) {\n      autocompleteOptions.currentObject = obj as NamedNode\n      autocompleteOptions.currentName = kb.any(autocompleteOptions.currentObject, labelProperty, null, doc) as Literal\n    } else { // No data or default. Should we suprress the whole field?\n      if (suppressEmptyUneditable && !editable) {\n        box.style.display = 'none' // clutter removal\n        return box\n      }\n    }\n  } else { // get object and name from target data:\n    autocompleteOptions.currentObject = obj as NamedNode\n    autocompleteOptions.currentName = kb.any(autocompleteOptions.currentObject, labelProperty, null, doc) as Literal\n  }\n\n  lhs.appendChild(widgets.fieldLabel(dom, property as any, form))\n\n  const barOptions = {\n    editable,\n    dbLookup: true\n  }\n\n  renderAutocompleteControl(dom, subject as NamedNode, barOptions, autocompleteOptions, addOneIdAndRefresh, deleteOne).then((control) => {\n    rhs.appendChild(control)\n  }, (err) => {\n    rhs.appendChild(widgets.errorMessageBlock(dom, `Error rendering autocomplete ${form}: ${err}`, '#fee', err)) //\n  })\n  return box\n}\n\n// ends\n"],"mappings":"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","ignoreList":[]}