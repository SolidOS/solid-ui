{"version":3,"file":"messageTools.js","names":["debug","_interopRequireWildcard","require","_iconBase","ns","rdf","utils","widgets","_bookmarks","_solidLogic","_chatLogic","_message","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","_typeof","has","get","set","_t7","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","dom","window","document","PENCIL_ICON","THUMBS_UP_ICON","THUMBS_DOWN_ICON","REPLY_ICON","emojiMap","schema","emojiFromActionClass","action","ActionClassFromEmoji","emoji","a","sym","slice","emojiFromAction","content","store","any","sioc","doc","klass","em","sentimentStrip","_x","_x2","_sentimentStrip","apply","arguments","_asyncToGenerator2","_regenerator","mark","_callee","target","versions","actions","strings","wrap","_context","prev","next","allVersions","sent","map","version","each","flat","abrupt","createTextNode","join","stop","sentimentStripLinked","_x3","_x4","_sentimentStripLinked","_callee3","strip","refresh","_refresh","_context3","_refresh3","_callee2","sentiments","_context2","innerHTML","isDeleted","length","sort","forEach","ss","_ss","_slicedToArray2","theClass","agent","res","createElement","setAttribute","uri","textContent","appendChild","_refresh2","then","log","messageToolbar","_x5","_x6","_x7","_x8","_messageToolbar","_callee0","message","messageRow","userContext","channelObject","deleteMessage","_deleteMessage","editMessage","_editMessage","replyInThread","_replyInThread","div","closeToolbar","deleteThingThen","_deleteThingThen","me","sentimentButton","context1","cancelButton","_t2","_t3","_t4","_t5","_t6","_context0","_sentimentButton","context","icon","actionClass","mutuallyExclusive","setColor","button","style","backgroundColor","label","_ref","_callee4","_event","insertMe","dirty","_context4","newThing","st","updater","update","existingAction","refreshTree","_x1","filter","x","holds","_deleteThingThen3","_callee9","_context9","connectedStatements","_deleteThingThen2","_x0","_closeToolbar","parentElement","removeChild","_replyInThread3","_callee8","thread","options","_context8","createThread","chatOptions","Error","showThread","_replyInThread2","_editMessage3","_callee7","_context7","value","foaf","switchToEditor","_editMessage2","_x9","_deleteMessage3","_callee6","author","msg","area","_t","_context6","alert","sameTerm","warn","statusArea","parentNode","errorMessageBlock","_deleteMessage2","mostRecentVersion","authn","currentUser","deleteButtonWithCheck","icons","iconBase","renderBookmarksButton","bookmarkButton","dct","_callee5","_context5","firstChild","opacity","addEventListener"],"sources":["../../src/chat/messageTools.js"],"sourcesContent":["/**\n * Tools for doing things with a message\n * Let us be creative here.  Allow all sorts of things to\n * be done to a message - linking to new or old objects in an open way\n *\n * Ideas: Bookmark, Like, star, pin at top of chat, reply as new thread,\n * If you made it originally: edit, delete, attach\n * @packageDocumentation\n */\nimport * as debug from '../debug'\nimport { icons } from '../iconBase'\n// import { media } from '../media/index'\nimport * as ns from '../ns'\n// import * as pad from '../pad'\nimport * as rdf from 'rdflib' // pull in first avoid cross-refs\n// import * as style from '../style'\nimport * as utils from '../utils'\nimport * as widgets from '../widgets'\nimport { renderBookmarksButton } from './bookmarks'\nimport { authn, store } from 'solid-logic'\n\nimport { allVersions, mostRecentVersion, isDeleted } from './chatLogic'\nimport { switchToEditor } from './message'\n\nconst dom = window.document\n\n// THE UNUSED ICONS are here as reminders for possible future functionality\n// const BOOKMARK_ICON = 'noun_45961.svg'\n// const HEART_ICON = 'noun_130259.svg' -> Add this to my (private) favorites\n// const MENU_ICON = 'noun_897914.svg'\n// const PAPERCLIP_ICON = 'noun_25830.svg' -> add attachments to this message\n// const PIN_ICON = 'noun_562340.svg'  -> pin this message permanently in the chat UI\nconst PENCIL_ICON = 'noun_253504.svg' // edit a message\n// const SPANNER_ICON = 'noun_344563.svg' -> settings\nconst THUMBS_UP_ICON = 'noun_1384132.svg'\nconst THUMBS_DOWN_ICON = 'noun_1384135.svg'\nconst REPLY_ICON = 'noun-reply-5506924.svg'\n/**\n * Emoji in Unicode\n */\nconst emojiMap = {}\nemojiMap[ns.schema('AgreeAction')] = 'üëç'\nemojiMap[ns.schema('DisagreeAction')] = 'üëé'\nemojiMap[ns.schema('EndorseAction')] = '‚≠êÔ∏è'\nemojiMap[ns.schema('LikeAction')] = '‚ù§Ô∏è'\n\nexport function emojiFromActionClass (action) {\n  return emojiMap[action] || null\n}\n\nexport function ActionClassFromEmoji (emoji) {\n  for (const a in emojiMap) {\n    if (emojiMap[a] === emoji) {\n      return rdf.sym(a.slice(1, -1)) // remove < >\n    }\n  }\n  return null\n}\n\n// Allow the action to give its own emoji as content,\n// or get the emoji from the class of action.\nexport function emojiFromAction (action) {\n  const content = store.any(action, ns.sioc('content'), null, action.doc())\n  if (content) return content\n  const klass = store.any(action, ns.rdf('type'), null, action.doc())\n  if (klass) {\n    const em = emojiFromActionClass(klass)\n    if (em) return em\n  }\n  return '‚¨úÔ∏è'\n}\n\n/**\n * Create strip of sentiments expressed\n */\nexport async function sentimentStrip (target, doc) { // alain: seems not used\n  const versions = await allVersions(target)\n  // debug.log('sentimentStrip Versions for ' + target, versions)\n  const actions = versions.map(version => store.each(null, ns.schema('target'), version, doc)).flat()\n  // debug.log('sentimentStrip: Actions for ' + target, actions)\n  const strings = actions.map(action => emojiFromAction(action) || '')\n  return dom.createTextNode(strings.join(' '))\n}\n/**\n * Create strip of sentiments expressed, with hyperlinks\n *\n * @param target {NamedNode} - The thing about which they are expressed\n * @param doc {NamedNode} - The document in which they are expressed\n */\nexport async function sentimentStripLinked (target, doc) {\n  const strip = dom.createElement('span')\n  async function refresh () {\n    strip.innerHTML = ''\n    if (isDeleted(target)) return strip\n    const versions = await allVersions(target)\n    // debug.log('sentimentStripLinked: Versions for ' + target, versions)\n    const actions = versions.map(version => store.each(null, ns.schema('target'), version, doc)).flat()\n    // debug.log('sentimentStripLinked: Actions for ' + target, actions)\n    if (actions.length === 0) return strip\n    const sentiments = actions.map(a => [\n      store.any(a, ns.rdf('type'), null, doc),\n      store.any(a, ns.sioc('content'), null, doc),\n      store.any(a, ns.schema('agent'), null, doc)\n    ])\n    // debug.log('  Actions sentiments ', sentiments)\n    sentiments.sort()\n    sentiments.forEach(ss => {\n      const [theClass, content, agent] = ss\n      let res\n      if (agent) {\n        res = dom.createElement('a')\n        res.setAttribute('href', agent.uri)\n      } else {\n        res = dom.createTextNode('')\n      }\n      res.textContent = content || emojiMap[theClass] || '‚¨úÔ∏è'\n      strip.appendChild(res)\n    })\n    // debug.log('  Actions strip ', strip)\n  }\n  refresh().then(debug.log('sentimentStripLinked: sentimentStripLinked async refreshed'))\n  strip.refresh = refresh\n  return strip\n}\n/**\n * Creates a message toolbar component\n */\nexport async function messageToolbar (message, messageRow, userContext, channelObject) {\n  async function deleteMessage () {\n    const author = store.any(message, ns.foaf('maker'))\n    if (!me) {\n      alert('You can\\'t delete the message, you are not logged in.')\n    } else if (me.sameTerm(author)) {\n      try {\n        await channelObject.deleteMessage(message)\n      } catch (err) {\n        const msg = 'Error deleting messaage ' + err\n        debug.warn(msg)\n        alert(msg)\n        const area = userContext.statusArea || messageRow.parentNode\n        area.appendChild(widgets.errorMessageBlock(dom, msg))\n      }\n      messageRow.parentNode.removeChild(messageRow)\n    } else {\n      alert('You can\\'t delete the message, you are not logged in as the author, ' + author)\n    }\n    closeToolbar()\n  }\n\n  async function editMessage (messageRow) {\n    if (me.value === store.any(message, ns.foaf('maker')).value) {\n      closeToolbar() // edit is a one-off action\n      await switchToEditor(messageRow, message, channelObject, userContext)\n    }\n  }\n\n  async function replyInThread () {\n    const thread = await channelObject.createThread(message)\n    const options = userContext.chatOptions\n    if (!options) throw new Error('replyInThread: missing options')\n    options.showThread(thread, options)\n    closeToolbar() // a one-off action\n  }\n\n  // alain: TODO allow chat owner to fully delete message + sentiments and replacing messages\n\n  const div = dom.createElement('div')\n  // is message deleted ?\n  if (await mostRecentVersion(message).value === ns.schema('dateDeleted').value) return div\n  function closeToolbar () {\n    div.parentElement.parentElement.removeChild(div.parentElement) // remive the TR\n  }\n\n  async function deleteThingThen (x) {\n    await store.updater.update(store.connectedStatements(x), [])\n  }\n\n  // Things only the original author can do\n  let me = authn.currentUser() // If already logged on\n  if (me && store.holds(message, ns.foaf('maker'), me)) {\n    // button to delete the message\n    div.appendChild(widgets.deleteButtonWithCheck(dom, div, 'message', deleteMessage))\n    // button to edit the message\n    div.appendChild(widgets.button(dom, icons.iconBase + PENCIL_ICON, 'edit', () => editMessage(messageRow)))\n  } // if mine\n  // Things anyone can do if they have a bookmark list async\n  /*\n var bookmarkButton = await bookmarks.renderBookmarksButton(userContext)\n if (bookmarkButton) {\n   div.appendChild(bookmarkButton)\n }\n */\n  // Things anyone can do if they have a bookmark list\n\n  renderBookmarksButton(userContext).then(bookmarkButton => {\n    if (bookmarkButton) div.appendChild(bookmarkButton)\n  })\n\n  /**   Button to allow user to express a sentiment (like, endorse, etc) about a target\n   *\n   * @param context {Object} - Provide dom and me\n   * @param target {NamedNode} - The thing the user expresses an opnion about\n   * @param icon {uristring} - The icon to be used for the button\n   * @param actionClass {NamedNode} - The RDF class  - typically a subclass of schema:Action\n   * @param doc - {NamedNode} - the Solid document iunto which the data should be written\n   * @param mutuallyExclusive {Array<NamedNode>} - Any RDF classes of sentimentswhich are mutiually exclusive\n   */\n  function sentimentButton (\n    context,\n    target,\n    icon,\n    actionClass,\n    doc,\n    mutuallyExclusive\n  ) {\n    function setColor () {\n      button.style.backgroundColor = action ? 'yellow' : 'white'\n    }\n    const button = widgets.button(\n      dom,\n      icon,\n      utils.label(actionClass),\n      async function (_event) {\n        if (action) {\n          await deleteThingThen(action)\n          action = null\n          setColor()\n        } else {\n          // no action\n          action = widgets.newThing(doc)\n          const insertMe = [\n            rdf.st(action, ns.schema('agent'), context.me, doc),\n            rdf.st(action, ns.rdf('type'), actionClass, doc),\n            rdf.st(action, ns.schema('target'), target, doc)\n          ]\n          await store.updater.update([], insertMe)\n          setColor()\n\n          if (mutuallyExclusive) {\n            // Delete incompative sentiments\n            let dirty = false\n            for (let i = 0; i < mutuallyExclusive.length; i++) {\n              const a = existingAction(mutuallyExclusive[i])\n              if (a) {\n                await deleteThingThen(a) // but how refresh? refreshTree the parent?\n                dirty = true\n              }\n            }\n            if (dirty) {\n              // widgets.refreshTree(button.parentNode) // requires them all to be immediate siblings\n              widgets.refreshTree(messageRow) // requires them all to be immediate siblings\n            }\n          }\n        }\n      }\n    )\n    function existingAction (actionClass) {\n      const actions = store\n        .each(null, ns.schema('agent'), context.me, doc)\n        .filter(x => store.holds(x, ns.rdf('type'), actionClass, doc))\n        .filter(x => store.holds(x, ns.schema('target'), target, doc))\n      return actions.length ? actions[0] : null\n    }\n    function refresh () {\n      action = existingAction(actionClass)\n      setColor()\n    }\n    let action\n    button.refresh = refresh // If the file changes, refresh live\n    refresh()\n    return button\n  }\n\n  // THUMBS_UP_ICON\n  // https://schema.org/AgreeAction\n  me = authn.currentUser() // If already logged on\n\n  if (me && (await mostRecentVersion(message).value !== ns.schema('dateDeleted').value)) {\n    const context1 = { me, dom, div }\n    div.appendChild(\n      sentimentButton(\n        context1,\n        message, // @@ TODO use widgets.sentimentButton\n        icons.iconBase + THUMBS_UP_ICON,\n        ns.schema('AgreeAction'),\n        message.doc(),\n        [ns.schema('DisagreeAction')]\n      )\n    )\n    // Thumbs down\n    div.appendChild(\n      sentimentButton(\n        context1,\n        message,\n        icons.iconBase + THUMBS_DOWN_ICON,\n        ns.schema('DisagreeAction'),\n        message.doc(),\n        [ns.schema('AgreeAction')]\n      )\n    )\n  }\n  // Reply buttton\n\n  if (store.any(message, ns.dct('created'))) { // Looks like a messsage? Bar can be used for other things\n    div.appendChild(widgets.button(dom, icons.iconBase + REPLY_ICON, 'Reply in thread', async () => {\n      await replyInThread()\n    }))\n  }\n  // X button to remove the tool UI itself\n  const cancelButton = div.appendChild(widgets.cancelButton(dom))\n  cancelButton.style.float = 'right'\n  cancelButton.firstChild.style.opacity = '0.3'\n  cancelButton.addEventListener('click', closeToolbar)\n  return div\n}\n"],"mappings":"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","ignoreList":[]}