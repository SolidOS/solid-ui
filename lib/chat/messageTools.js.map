{"version":3,"file":"messageTools.js","names":["debug","_interopRequireWildcard","require","_iconBase","ns","rdf","utils","widgets","_bookmarks","_solidLogic","_chatLogic","_message","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","_typeof","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","dom","window","document","PENCIL_ICON","THUMBS_UP_ICON","THUMBS_DOWN_ICON","REPLY_ICON","emojiMap","schema","emojiFromActionClass","action","ActionClassFromEmoji","emoji","sym","slice","emojiFromAction","content","store","any","sioc","doc","klass","em","sentimentStrip","_x","_x2","_sentimentStrip","apply","arguments","_asyncToGenerator2","_regenerator","mark","_callee","target","versions","actions","strings","wrap","_callee$","_context","prev","next","allVersions","sent","map","version","each","flat","abrupt","createTextNode","join","stop","sentimentStripLinked","_x3","_x4","_sentimentStripLinked","_callee3","strip","refresh","_refresh","_callee3$","_context3","_refresh3","_callee2","sentiments","_callee2$","_context2","innerHTML","isDeleted","length","sort","forEach","ss","_ss","_slicedToArray2","theClass","agent","res","createElement","setAttribute","uri","textContent","appendChild","_refresh2","then","log","messageToolbar","_x5","_x6","_x7","_x8","_messageToolbar","_callee10","message","messageRow","userContext","channelObject","deleteMessage","_deleteMessage","editMessage","_editMessage","replyInThread","_replyInThread","div","closeToolbar","deleteThingThen","_deleteThingThen","me","sentimentButton","context1","cancelButton","_callee10$","_context10","_sentimentButton","context","icon","actionClass","mutuallyExclusive","setColor","button","style","backgroundColor","label","_ref","_callee4","_event","insertMe","dirty","_callee4$","_context4","newThing","st","updater","update","existingAction","refreshTree","_x11","filter","x","holds","_deleteThingThen3","_callee9","_callee9$","_context9","connectedStatements","_deleteThingThen2","_x10","_closeToolbar","parentElement","removeChild","_replyInThread3","_callee8","thread","options","_callee8$","_context8","createThread","chatOptions","Error","showThread","_replyInThread2","_editMessage3","_callee7","_callee7$","_context7","value","foaf","switchToEditor","_editMessage2","_x9","_deleteMessage3","_callee6","author","msg","area","_callee6$","_context6","alert","sameTerm","t0","warn","statusArea","parentNode","errorMessageBlock","_deleteMessage2","mostRecentVersion","t1","authn","currentUser","deleteButtonWithCheck","icons","iconBase","renderBookmarksButton","bookmarkButton","t2","t3","t4","dct","_callee5","_callee5$","_context5","firstChild","opacity","addEventListener"],"sources":["../../src/chat/messageTools.js"],"sourcesContent":["/**\n * Tools for doing things with a message\n * Let us be creative here.  Allow all sorts of things to\n * be done to a message - linking to new or old objects in an open way\n *\n * Ideas: Bookmark, Like, star, pin at top of chat, reply as new thread,\n * If you made it originally: edit, delete, attach\n * @packageDocumentation\n */\nimport * as debug from '../debug'\nimport { icons } from '../iconBase'\n// import { media } from '../media/index'\nimport * as ns from '../ns'\n// import * as pad from '../pad'\nimport * as rdf from 'rdflib' // pull in first avoid cross-refs\n// import * as style from '../style'\nimport * as utils from '../utils'\nimport * as widgets from '../widgets'\nimport { renderBookmarksButton } from './bookmarks'\nimport { authn, store } from 'solid-logic'\n\nimport { allVersions, mostRecentVersion, isDeleted } from './chatLogic'\nimport { switchToEditor } from './message'\n\nconst dom = window.document\n\n// THE UNUSED ICONS are here as reminders for possible future functionality\n// const BOOKMARK_ICON = 'noun_45961.svg'\n// const HEART_ICON = 'noun_130259.svg' -> Add this to my (private) favorites\n// const MENU_ICON = 'noun_897914.svg'\n// const PAPERCLIP_ICON = 'noun_25830.svg' -> add attachments to this message\n// const PIN_ICON = 'noun_562340.svg'  -> pin this message permanently in the chat UI\nconst PENCIL_ICON = 'noun_253504.svg' // edit a message\n// const SPANNER_ICON = 'noun_344563.svg' -> settings\nconst THUMBS_UP_ICON = 'noun_1384132.svg'\nconst THUMBS_DOWN_ICON = 'noun_1384135.svg'\nconst REPLY_ICON = 'noun-reply-5506924.svg'\n/**\n * Emoji in Unicode\n */\nconst emojiMap = {}\nemojiMap[ns.schema('AgreeAction')] = 'üëç'\nemojiMap[ns.schema('DisagreeAction')] = 'üëé'\nemojiMap[ns.schema('EndorseAction')] = '‚≠êÔ∏è'\nemojiMap[ns.schema('LikeAction')] = '‚ù§Ô∏è'\n\nexport function emojiFromActionClass (action) {\n  return emojiMap[action] || null\n}\n\nexport function ActionClassFromEmoji (emoji) {\n  for (const a in emojiMap) {\n    if (emojiMap[a] === emoji) {\n      return rdf.sym(a.slice(1, -1)) // remove < >\n    }\n  }\n  return null\n}\n\n// Allow the action to give its own emoji as content,\n// or get the emoji from the class of action.\nexport function emojiFromAction (action) {\n  const content = store.any(action, ns.sioc('content'), null, action.doc())\n  if (content) return content\n  const klass = store.any(action, ns.rdf('type'), null, action.doc())\n  if (klass) {\n    const em = emojiFromActionClass(klass)\n    if (em) return em\n  }\n  return '‚¨úÔ∏è'\n}\n\n/**\n * Create strip of sentiments expressed\n */\nexport async function sentimentStrip (target, doc) { // alain: seems not used\n  const versions = await allVersions(target)\n  // debug.log('sentimentStrip Versions for ' + target, versions)\n  const actions = versions.map(version => store.each(null, ns.schema('target'), version, doc)).flat()\n  // debug.log('sentimentStrip: Actions for ' + target, actions)\n  const strings = actions.map(action => emojiFromAction(action) || '')\n  return dom.createTextNode(strings.join(' '))\n}\n/**\n * Create strip of sentiments expressed, with hyperlinks\n *\n * @param target {NamedNode} - The thing about which they are expressed\n * @param doc {NamedNode} - The document in which they are expressed\n */\nexport async function sentimentStripLinked (target, doc) {\n  const strip = dom.createElement('span')\n  async function refresh () {\n    strip.innerHTML = ''\n    if (isDeleted(target)) return strip\n    const versions = await allVersions(target)\n    // debug.log('sentimentStripLinked: Versions for ' + target, versions)\n    const actions = versions.map(version => store.each(null, ns.schema('target'), version, doc)).flat()\n    // debug.log('sentimentStripLinked: Actions for ' + target, actions)\n    if (actions.length === 0) return strip\n    const sentiments = actions.map(a => [\n      store.any(a, ns.rdf('type'), null, doc),\n      store.any(a, ns.sioc('content'), null, doc),\n      store.any(a, ns.schema('agent'), null, doc)\n    ])\n    // debug.log('  Actions sentiments ', sentiments)\n    sentiments.sort()\n    sentiments.forEach(ss => {\n      const [theClass, content, agent] = ss\n      let res\n      if (agent) {\n        res = dom.createElement('a')\n        res.setAttribute('href', agent.uri)\n      } else {\n        res = dom.createTextNode('')\n      }\n      res.textContent = content || emojiMap[theClass] || '‚¨úÔ∏è'\n      strip.appendChild(res)\n    })\n    // debug.log('  Actions strip ', strip)\n  }\n  refresh().then(debug.log('sentimentStripLinked: sentimentStripLinked async refreshed'))\n  strip.refresh = refresh\n  return strip\n}\n/**\n * Creates a message toolbar component\n */\nexport async function messageToolbar (message, messageRow, userContext, channelObject) {\n  async function deleteMessage () {\n    const author = store.any(message, ns.foaf('maker'))\n    if (!me) {\n      alert('You can\\'t delete the message, you are not logged in.')\n    } else if (me.sameTerm(author)) {\n      try {\n        await channelObject.deleteMessage(message)\n      } catch (err) {\n        const msg = 'Error deleting messaage ' + err\n        debug.warn(msg)\n        alert(msg)\n        const area = userContext.statusArea || messageRow.parentNode\n        area.appendChild(widgets.errorMessageBlock(dom, msg))\n      }\n      messageRow.parentNode.removeChild(messageRow)\n    } else {\n      alert('You can\\'t delete the message, you are not logged in as the author, ' + author)\n    }\n    closeToolbar()\n  }\n\n  async function editMessage (messageRow) {\n    if (me.value === store.any(message, ns.foaf('maker')).value) {\n      closeToolbar() // edit is a one-off action\n      await switchToEditor(messageRow, message, channelObject, userContext)\n    }\n  }\n\n  async function replyInThread () {\n    const thread = await channelObject.createThread(message)\n    const options = userContext.chatOptions\n    if (!options) throw new Error('replyInThread: missing options')\n    options.showThread(thread, options)\n    closeToolbar() // a one-off action\n  }\n\n  // alain: TODO allow chat owner to fully delete message + sentiments and replacing messages\n\n  const div = dom.createElement('div')\n  // is message deleted ?\n  if (await mostRecentVersion(message).value === ns.schema('dateDeleted').value) return div\n  function closeToolbar () {\n    div.parentElement.parentElement.removeChild(div.parentElement) // remive the TR\n  }\n\n  async function deleteThingThen (x) {\n    await store.updater.update(store.connectedStatements(x), [])\n  }\n\n  // Things only the original author can do\n  let me = authn.currentUser() // If already logged on\n  if (me && store.holds(message, ns.foaf('maker'), me)) {\n    // button to delete the message\n    div.appendChild(widgets.deleteButtonWithCheck(dom, div, 'message', deleteMessage))\n    // button to edit the message\n    div.appendChild(widgets.button(dom, icons.iconBase + PENCIL_ICON, 'edit', () => editMessage(messageRow)))\n  } // if mine\n  // Things anyone can do if they have a bookmark list async\n  /*\n var bookmarkButton = await bookmarks.renderBookmarksButton(userContext)\n if (bookmarkButton) {\n   div.appendChild(bookmarkButton)\n }\n */\n  // Things anyone can do if they have a bookmark list\n\n  renderBookmarksButton(userContext).then(bookmarkButton => {\n    if (bookmarkButton) div.appendChild(bookmarkButton)\n  })\n\n  /**   Button to allow user to express a sentiment (like, endorse, etc) about a target\n   *\n   * @param context {Object} - Provide dom and me\n   * @param target {NamedNode} - The thing the user expresses an opnion about\n   * @param icon {uristring} - The icon to be used for the button\n   * @param actionClass {NamedNode} - The RDF class  - typically a subclass of schema:Action\n   * @param doc - {NamedNode} - the Solid document iunto which the data should be written\n   * @param mutuallyExclusive {Array<NamedNode>} - Any RDF classes of sentimentswhich are mutiually exclusive\n   */\n  function sentimentButton (\n    context,\n    target,\n    icon,\n    actionClass,\n    doc,\n    mutuallyExclusive\n  ) {\n    function setColor () {\n      button.style.backgroundColor = action ? 'yellow' : 'white'\n    }\n    const button = widgets.button(\n      dom,\n      icon,\n      utils.label(actionClass),\n      async function (_event) {\n        if (action) {\n          await deleteThingThen(action)\n          action = null\n          setColor()\n        } else {\n          // no action\n          action = widgets.newThing(doc)\n          const insertMe = [\n            rdf.st(action, ns.schema('agent'), context.me, doc),\n            rdf.st(action, ns.rdf('type'), actionClass, doc),\n            rdf.st(action, ns.schema('target'), target, doc)\n          ]\n          await store.updater.update([], insertMe)\n          setColor()\n\n          if (mutuallyExclusive) {\n            // Delete incompative sentiments\n            let dirty = false\n            for (let i = 0; i < mutuallyExclusive.length; i++) {\n              const a = existingAction(mutuallyExclusive[i])\n              if (a) {\n                await deleteThingThen(a) // but how refresh? refreshTree the parent?\n                dirty = true\n              }\n            }\n            if (dirty) {\n              // widgets.refreshTree(button.parentNode) // requires them all to be immediate siblings\n              widgets.refreshTree(messageRow) // requires them all to be immediate siblings\n            }\n          }\n        }\n      }\n    )\n    function existingAction (actionClass) {\n      const actions = store\n        .each(null, ns.schema('agent'), context.me, doc)\n        .filter(x => store.holds(x, ns.rdf('type'), actionClass, doc))\n        .filter(x => store.holds(x, ns.schema('target'), target, doc))\n      return actions.length ? actions[0] : null\n    }\n    function refresh () {\n      action = existingAction(actionClass)\n      setColor()\n    }\n    let action\n    button.refresh = refresh // If the file changes, refresh live\n    refresh()\n    return button\n  }\n\n  // THUMBS_UP_ICON\n  // https://schema.org/AgreeAction\n  me = authn.currentUser() // If already logged on\n\n  if (me && (await mostRecentVersion(message).value !== ns.schema('dateDeleted').value)) {\n    const context1 = { me, dom, div }\n    div.appendChild(\n      sentimentButton(\n        context1,\n        message, // @@ TODO use widgets.sentimentButton\n        icons.iconBase + THUMBS_UP_ICON,\n        ns.schema('AgreeAction'),\n        message.doc(),\n        [ns.schema('DisagreeAction')]\n      )\n    )\n    // Thumbs down\n    div.appendChild(\n      sentimentButton(\n        context1,\n        message,\n        icons.iconBase + THUMBS_DOWN_ICON,\n        ns.schema('DisagreeAction'),\n        message.doc(),\n        [ns.schema('AgreeAction')]\n      )\n    )\n  }\n  // Reply buttton\n\n  if (store.any(message, ns.dct('created'))) { // Looks like a messsage? Bar can be used for other things\n    div.appendChild(widgets.button(dom, icons.iconBase + REPLY_ICON, 'Reply in thread', async () => {\n      await replyInThread()\n    }))\n  }\n  // X button to remove the tool UI itself\n  const cancelButton = div.appendChild(widgets.cancelButton(dom))\n  cancelButton.style.float = 'right'\n  cancelButton.firstChild.style.opacity = '0.3'\n  cancelButton.addEventListener('click', closeToolbar)\n  return div\n}\n"],"mappings":"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","ignoreList":[]}