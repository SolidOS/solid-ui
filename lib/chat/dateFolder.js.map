{"version":3,"file":"dateFolder.js","names":["debug","_interopRequireWildcard","require","_solidLogic","ns","$rdf","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","_typeof","has","get","set","_t2","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","emptyLeaf","_x","_emptyLeaf","apply","arguments","_asyncToGenerator2","_regenerator","mark","_callee5","leafDocument","wrap","_context5","prev","next","store","fetcher","load","abrupt","statementsMatching","dct","length","stop","DateFolder","exports","rootThing","leafFileName","membershipProperty","_classCallCheck2","root","rootFolder","dir","wf","_createClass2","key","value","leafDocumentFromDate","date","isoDate","toISOString","path","split","replace","uri","sym","dateFromLeafDocument","doc","head","str","slice","Date","_loadPrevious","_callee2","backwards","previousPeriod","_previousPeriod","folder","found","nextDate","_context2","_previousPeriod3","_callee","file","level","younger","suitable","lastOrFirst","parent","siblings","_folder","uncle","cousins","result","_t","_context","_lastOrFirst","filter","sort","reverse","pop","_suitable","x","tail","includes","_younger","each","ldp","response","status","log","Error","concat","message","sent","_previousPeriod2","_x4","_x5","loadPrevious","_x2","_x3","_firstLeaf","_callee4","folderStore","folderFetcher","earliestSubfolder","_earliestSubfolder","y","month","d","leafObjects","msg","sortMe","_context4","_earliestSubfolder3","_callee3","kids","_context3","_suitable2","requested","force","_earliestSubfolder2","_x7","graph","Fetcher","trace","map","leafObject","any","firstLeaf","_x6"],"sources":["../../src/chat/dateFolder.js"],"sourcesContent":["/**\n * Contains the [[DateFolder]] class\n * This tracks data stored in dated folders and sub-folders\n *\n */\nimport * as debug from '../debug'\nimport { store } from 'solid-logic'\nimport * as ns from '../ns'\nimport * as $rdf from 'rdflib' // pull in first avoid cross-refs\n\nexport async function emptyLeaf (leafDocument) {\n  await store.fetcher.load(leafDocument)\n  // files can have seealso links. skip ones with no leafObjects with a date\n  return !(\n    store.statementsMatching(null, ns.dct('created'), null, leafDocument)\n      .length > 0\n  )\n}\n\n/**\n * Track back through the YYYY/MM/DD tree to find the previous/next day\n */\nexport class DateFolder {\n  constructor (rootThing, leafFileName, membershipProperty) {\n    this.root = rootThing\n    this.rootFolder = rootThing.dir()\n    this.leafFileName = leafFileName || 'index.ttl' // typically chat.ttl\n    this.membershipProperty = membershipProperty || ns.wf('leafObject')\n  }\n\n  /* Generate the leaf document (rdf object) from date\n   * @returns: <NamedNode> - document\n   */\n  leafDocumentFromDate (date) {\n    // debug.log('incoming date: ' + date)\n    const isoDate = date.toISOString() // Like \"2018-05-07T17:42:46.576Z\"\n    let path = isoDate.split('T')[0].replace(/-/g, '/') //  Like \"2018/05/07\"\n    path = this.root.dir().uri + path + '/' + this.leafFileName\n    return store.sym(path)\n  }\n\n  /* Generate a date object from the leaf file name\n   */\n  dateFromLeafDocument (doc) {\n    const head = this.rootFolder.uri.length\n    const str = doc.uri.slice(head, head + 10).replace(/\\//g, '-')\n    // let date = new Date(str + 'Z') // GMT - but fails in FF - invalid format :-(\n    const date = new Date(str) // not explicitly UTC but is assumed so in spec\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/parse\n    // debug.log('Date for ' + doc + ':' + date.toISOString())\n    return date\n  }\n\n  async loadPrevious (date, backwards) {\n    async function previousPeriod (file, level) {\n      function younger (x) {\n        if (backwards ? x.uri >= file.uri : x.uri <= file.uri) return false // later than we want or same -- looking for different\n        return true\n      }\n      function suitable (x) {\n        const tail = x.uri\n          .slice(0, -1)\n          .split('/')\n          .slice(-1)[0]\n        if (!'0123456789'.includes(tail[0])) return false // not numeric\n        return true\n      }\n\n      function lastOrFirst (siblings) {\n        siblings = siblings.filter(suitable)\n        siblings.sort() // chronological order\n        if (!backwards) siblings.reverse()\n        return siblings.pop() // date folder\n      }\n      // debug.log('  previousPeriod level' + level + ' file ' + file)\n      const parent = file.dir()\n      try {\n        await store.fetcher.load(parent)\n        let siblings = store.each(parent, ns.ldp('contains'))\n        siblings = siblings.filter(younger)\n        const folder = lastOrFirst(siblings)\n        if (folder) return folder\n        // debug.log(' parent no suitable offspring ' + parent)\n      } catch (err) {\n        if (err.response && err.response.status && err.response.status === 404) {\n          debug.log('Error 404 for chat parent file ' + parent)\n        } else {\n          debug.log('*** Error NON 404 for chat parent file ' + parent)\n          // statusTR.appendChild(widgets.errorMessageBlock(dom, err, 'pink'))\n          throw (new Error(`*** ${err.message} for chat folder ${parent}`))\n        }\n      }\n      if (level === 0) {\n        // debug.log('loadPrevious:  returning as level is zero')\n        return null // 3:day, 2:month, 1: year  0: no\n      }\n\n      const uncle = await previousPeriod(parent, level - 1)\n      if (!uncle) {\n        // debug.log('   previousPeriod: nothing left before. ', parent)\n        return null // reached first ever\n      }\n      await store.fetcher.load(uncle)\n      const cousins = store.each(uncle, ns.ldp('contains'))\n      const result = lastOrFirst(cousins)\n      // debug.log('   previousPeriod: returning cousins at level ' + level, cousins)\n      // debug.log('   previousPeriod: returning result at level ' + level, result)\n\n      return result\n    } // previousPeriod\n\n    let folder = this.leafDocumentFromDate(date).dir()\n    while (true) {\n      const found = await previousPeriod(folder, 3)\n      if (found) {\n        const leafDocument = store.sym(found.uri + this.leafFileName)\n        const nextDate = this.dateFromLeafDocument(leafDocument)\n        if (!await emptyLeaf(leafDocument)) {\n          return nextDate\n        } else {\n          // debug.log('  loadPrevious: skipping empty ' + leafDocument)\n          date = nextDate\n          folder = this.leafDocumentFromDate(date).dir()\n          // debug.log('    loadPrevious: moved back to ' + folder)\n        }\n      } else {\n        return null // no more left\n      }\n    }\n  } // loadPrevious\n\n  async firstLeaf (backwards) {\n    // backwards -> last leafObject\n    const folderStore = $rdf.graph()\n    const folderFetcher = new $rdf.Fetcher(folderStore)\n    async function earliestSubfolder (parent) {\n      function suitable (x) {\n        const tail = x.uri\n          .slice(0, -1)\n          .split('/')\n          .slice(-1)[0]\n        if (!'0123456789'.includes(tail[0])) return false // not numeric\n        return true\n      }\n      // debug.log('            parent ' + parent)\n      delete folderFetcher.requested[parent.uri]\n      // try {\n      await folderFetcher.load(parent, { force: true }) // Force fetch as will have changed\n      // }catch (err) {\n      // }\n\n      let kids = folderStore.each(parent, ns.ldp('contains'))\n      kids = kids.filter(suitable)\n      if (kids.length === 0) {\n        throw new Error(' @@@  No children to         parent2 ' + parent)\n      }\n\n      kids.sort()\n      if (backwards) kids.reverse()\n      return kids[0]\n    }\n    const y = await earliestSubfolder(this.root.dir())\n    const month = await earliestSubfolder(y)\n    const d = await earliestSubfolder(month)\n    const leafDocument = $rdf.sym(d.uri + 'chat.ttl')\n    await folderFetcher.load(leafDocument)\n    const leafObjects = folderStore.each(\n      this.root,\n      this.membershipProperty,\n      null,\n      leafDocument\n    )\n    if (leafObjects.length === 0) {\n      const msg =\n        '  INCONSISTENCY -- no chat leafObject in file ' + leafDocument\n      debug.trace(msg)\n      throw new Error(msg)\n    }\n    const sortMe = leafObjects.map(leafObject => [\n      folderStore.any(leafObject, ns.dct('created')),\n      leafObject\n    ])\n    sortMe.sort()\n    if (backwards) sortMe.reverse()\n    /* debug.log(\n      (backwards ? 'Latest' : 'Earliest') + ' leafObject is ' + sortMe[0][1]\n    ) */\n    return sortMe[0][1]\n  } // firstleafObject\n} // class\n"],"mappings":"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","ignoreList":[]}