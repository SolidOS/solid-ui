{"version":3,"file":"dateFolder.js","names":["debug","_interopRequireWildcard","require","_solidLogic","ns","$rdf","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","_typeof","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","emptyLeaf","_x","_emptyLeaf","apply","arguments","_asyncToGenerator2","_regenerator","mark","_callee5","leafDocument","wrap","_callee5$","_context5","prev","next","store","fetcher","load","abrupt","statementsMatching","dct","length","stop","DateFolder","exports","rootThing","leafFileName","membershipProperty","_classCallCheck2","root","rootFolder","dir","wf","_createClass2","key","value","leafDocumentFromDate","date","isoDate","toISOString","path","split","replace","uri","sym","dateFromLeafDocument","doc","head","str","slice","Date","_loadPrevious","_callee2","backwards","previousPeriod","_previousPeriod","folder","found","nextDate","_callee2$","_context2","_previousPeriod3","_callee","file","level","younger","suitable","lastOrFirst","parent","siblings","_folder","uncle","cousins","result","_callee$","_context","_lastOrFirst","filter","sort","reverse","pop","_suitable","x","tail","includes","_younger","each","ldp","t0","response","status","log","Error","concat","message","sent","_previousPeriod2","_x4","_x5","loadPrevious","_x2","_x3","_firstLeaf","_callee4","folderStore","folderFetcher","earliestSubfolder","_earliestSubfolder","y","month","d","leafObjects","msg","sortMe","_callee4$","_context4","_earliestSubfolder3","_callee3","kids","_callee3$","_context3","_suitable2","requested","force","_earliestSubfolder2","_x7","graph","Fetcher","trace","map","leafObject","any","firstLeaf","_x6"],"sources":["../../src/chat/dateFolder.js"],"sourcesContent":["/**\n * Contains the [[DateFolder]] class\n * This tracks data stored in dated folders and sub-folders\n *\n */\nimport * as debug from '../debug'\nimport { store } from 'solid-logic'\nimport * as ns from '../ns'\nimport * as $rdf from 'rdflib' // pull in first avoid cross-refs\n\nexport async function emptyLeaf (leafDocument) {\n  await store.fetcher.load(leafDocument)\n  // files can have seealso links. skip ones with no leafObjects with a date\n  return !(\n    store.statementsMatching(null, ns.dct('created'), null, leafDocument)\n      .length > 0\n  )\n}\n\n/**\n * Track back through the YYYY/MM/DD tree to find the previous/next day\n */\nexport class DateFolder {\n  constructor (rootThing, leafFileName, membershipProperty) {\n    this.root = rootThing\n    this.rootFolder = rootThing.dir()\n    this.leafFileName = leafFileName || 'index.ttl' // typically chat.ttl\n    this.membershipProperty = membershipProperty || ns.wf('leafObject')\n  }\n\n  /* Generate the leaf document (rdf object) from date\n   * @returns: <NamedNode> - document\n   */\n  leafDocumentFromDate (date) {\n    // debug.log('incoming date: ' + date)\n    const isoDate = date.toISOString() // Like \"2018-05-07T17:42:46.576Z\"\n    let path = isoDate.split('T')[0].replace(/-/g, '/') //  Like \"2018/05/07\"\n    path = this.root.dir().uri + path + '/' + this.leafFileName\n    return store.sym(path)\n  }\n\n  /* Generate a date object from the leaf file name\n   */\n  dateFromLeafDocument (doc) {\n    const head = this.rootFolder.uri.length\n    const str = doc.uri.slice(head, head + 10).replace(/\\//g, '-')\n    // let date = new Date(str + 'Z') // GMT - but fails in FF - invalid format :-(\n    const date = new Date(str) // not explicitly UTC but is assumed so in spec\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/parse\n    // debug.log('Date for ' + doc + ':' + date.toISOString())\n    return date\n  }\n\n  async loadPrevious (date, backwards) {\n    async function previousPeriod (file, level) {\n      function younger (x) {\n        if (backwards ? x.uri >= file.uri : x.uri <= file.uri) return false // later than we want or same -- looking for different\n        return true\n      }\n      function suitable (x) {\n        const tail = x.uri\n          .slice(0, -1)\n          .split('/')\n          .slice(-1)[0]\n        if (!'0123456789'.includes(tail[0])) return false // not numeric\n        return true\n      }\n\n      function lastOrFirst (siblings) {\n        siblings = siblings.filter(suitable)\n        siblings.sort() // chronological order\n        if (!backwards) siblings.reverse()\n        return siblings.pop() // date folder\n      }\n      // debug.log('  previousPeriod level' + level + ' file ' + file)\n      const parent = file.dir()\n      try {\n        await store.fetcher.load(parent)\n        let siblings = store.each(parent, ns.ldp('contains'))\n        siblings = siblings.filter(younger)\n        const folder = lastOrFirst(siblings)\n        if (folder) return folder\n        // debug.log(' parent no suitable offspring ' + parent)\n      } catch (err) {\n        if (err.response && err.response.status && err.response.status === 404) {\n          debug.log('Error 404 for chat parent file ' + parent)\n        } else {\n          debug.log('*** Error NON 404 for chat parent file ' + parent)\n          // statusTR.appendChild(widgets.errorMessageBlock(dom, err, 'pink'))\n          throw (new Error(`*** ${err.message} for chat folder ${parent}`))\n        }\n      }\n      if (level === 0) {\n        // debug.log('loadPrevious:  returning as level is zero')\n        return null // 3:day, 2:month, 1: year  0: no\n      }\n\n      const uncle = await previousPeriod(parent, level - 1)\n      if (!uncle) {\n        // debug.log('   previousPeriod: nothing left before. ', parent)\n        return null // reached first ever\n      }\n      await store.fetcher.load(uncle)\n      const cousins = store.each(uncle, ns.ldp('contains'))\n      const result = lastOrFirst(cousins)\n      // debug.log('   previousPeriod: returning cousins at level ' + level, cousins)\n      // debug.log('   previousPeriod: returning result at level ' + level, result)\n\n      return result\n    } // previousPeriod\n\n    let folder = this.leafDocumentFromDate(date).dir()\n    while (true) {\n      const found = await previousPeriod(folder, 3)\n      if (found) {\n        const leafDocument = store.sym(found.uri + this.leafFileName)\n        const nextDate = this.dateFromLeafDocument(leafDocument)\n        if (!await emptyLeaf(leafDocument)) {\n          return nextDate\n        } else {\n          // debug.log('  loadPrevious: skipping empty ' + leafDocument)\n          date = nextDate\n          folder = this.leafDocumentFromDate(date).dir()\n          // debug.log('    loadPrevious: moved back to ' + folder)\n        }\n      } else {\n        return null // no more left\n      }\n    }\n  } // loadPrevious\n\n  async firstLeaf (backwards) {\n    // backwards -> last leafObject\n    const folderStore = $rdf.graph()\n    const folderFetcher = new $rdf.Fetcher(folderStore)\n    async function earliestSubfolder (parent) {\n      function suitable (x) {\n        const tail = x.uri\n          .slice(0, -1)\n          .split('/')\n          .slice(-1)[0]\n        if (!'0123456789'.includes(tail[0])) return false // not numeric\n        return true\n      }\n      // debug.log('            parent ' + parent)\n      delete folderFetcher.requested[parent.uri]\n      // try {\n      await folderFetcher.load(parent, { force: true }) // Force fetch as will have changed\n      // }catch (err) {\n      // }\n\n      let kids = folderStore.each(parent, ns.ldp('contains'))\n      kids = kids.filter(suitable)\n      if (kids.length === 0) {\n        throw new Error(' @@@  No children to         parent2 ' + parent)\n      }\n\n      kids.sort()\n      if (backwards) kids.reverse()\n      return kids[0]\n    }\n    const y = await earliestSubfolder(this.root.dir())\n    const month = await earliestSubfolder(y)\n    const d = await earliestSubfolder(month)\n    const leafDocument = $rdf.sym(d.uri + 'chat.ttl')\n    await folderFetcher.load(leafDocument)\n    const leafObjects = folderStore.each(\n      this.root,\n      this.membershipProperty,\n      null,\n      leafDocument\n    )\n    if (leafObjects.length === 0) {\n      const msg =\n        '  INCONSISTENCY -- no chat leafObject in file ' + leafDocument\n      debug.trace(msg)\n      throw new Error(msg)\n    }\n    const sortMe = leafObjects.map(leafObject => [\n      folderStore.any(leafObject, ns.dct('created')),\n      leafObject\n    ])\n    sortMe.sort()\n    if (backwards) sortMe.reverse()\n    /* debug.log(\n      (backwards ? 'Latest' : 'Earliest') + ' leafObject is ' + sortMe[0][1]\n    ) */\n    return sortMe[0][1]\n  } // firstleafObject\n} // class\n"],"mappings":"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","ignoreList":[]}