{"version":3,"file":"accessData.js","names":["debug","_interopRequireWildcard","require","_solidLogic","ns","_otherHelpers","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","_typeof","has","get","set","_t3","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","pubKeyUrl","exports","webId","url","root","getRootIfPreferencesExist","concat","err","error","privKeyUrl","getExistingPublicKey","_x","_x2","_getExistingPublicKey","apply","arguments","_asyncToGenerator2","_regenerator","mark","_callee","publicKeyUrl","wrap","_context","prev","next","getKeyIfExists","abrupt","sent","stop","getExistingPrivateKey","_x3","_x4","_getExistingPrivateKey","_callee2","privateKeyUrl","_context2","_x5","_x6","_x7","_getKeyIfExists","_callee3","keyUrl","keyType","key","_t","_t2","_context3","store","fetcher","load","any","solid","value","response","status","log","webOperation","data","contentType","requested","undefined"],"sources":["../../../src/utils/keyHelpers/accessData.ts"],"sourcesContent":["import * as debug from '../../debug'\nimport { store } from 'solid-logic'\nimport * as ns from '../../ns'\nimport { NamedNode } from 'rdflib'\nimport { getRootIfPreferencesExist } from './otherHelpers'\n\nexport const pubKeyUrl = (webId: NamedNode) => {\n  let url\n  try {\n    const root = getRootIfPreferencesExist(webId)\n    url = `${root}/profile/keys/publicKey.ttl`\n  } catch (err) {\n    debug.error(err)\n  }\n  return url\n}\n\nexport const privKeyUrl = (webId: NamedNode) => {\n  let url\n  try {\n    const root = getRootIfPreferencesExist(webId)\n    url = `${root}/settings/keys/privateKey.ttl`\n  } catch (err) {\n    debug.error(err)\n  }\n  return url\n}\n\nexport async function getExistingPublicKey (webId: NamedNode, publicKeyUrl: string) {\n  // find publickey\n  return await getKeyIfExists(webId, publicKeyUrl, 'publicKey')\n}\n\nexport async function getExistingPrivateKey (webId: NamedNode, privateKeyUrl: string) {\n  // find privateKey\n  return await getKeyIfExists(webId, privateKeyUrl, 'privateKey')\n}\n\ntype KeyType = 'publicKey' | 'privateKey'\n\nexport async function getKeyIfExists (webId: NamedNode, keyUrl: string, keyType: KeyType) {\n  try {\n    await store.fetcher.load(keyUrl)\n    const key = store.any(webId, ns.solid(keyType)) // store.sym(CERT + keyType))\n    return key?.value // as NamedNode\n  } catch (err) {\n    if (err.response.status === 404) {\n      debug.log(\n        'createIfNotExists: doc does NOT exist, will create... ' + keyUrl\n      )\n      try {\n        await store.fetcher.webOperation('PUT', keyUrl, {\n          data: '',\n          contentType: 'text/turtle'\n        })\n      } catch (err) {\n        debug.log('createIfNotExists doc FAILED: ' + keyUrl + ': ' + err)\n        throw err\n      }\n      delete store.fetcher.requested[keyUrl] // delete cached 404 error\n      // debug.log('createIfNotExists doc created ok ' + doc)\n      return undefined // response\n    } else {\n      debug.log('createIfNotExists doc FAILED: ' + keyUrl + ': ' + err)\n      throw err\n    }\n  }\n}\n"],"mappings":"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","ignoreList":[]}